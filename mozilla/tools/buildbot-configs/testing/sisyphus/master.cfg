# -*- python -*-
# ex: set syntax=python:

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

from buildbot.scheduler import Scheduler, Nightly
from buildbot.process import step, factory
from buildbot.status import html
from buildbot.steps.transfer import FileDownload
from buildbot.locks import SlaveLock
# from buildbot.manhole import TelnetManhole

import sisyphus
reload(sisyphus)

from sisyphus import *

s = factory.s

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

##
## Misc Config
##

# c['debugPassword'] = "d3bUg"
# c['manhole'] = TelnetManhole(9455, "buildbot", "mankey")
c['projectName'] = "Sisyphus"
c['projectURL'] = "http://wiki.mozilla.org/Sisyphus"
c['buildbotURL'] = "http://localhost:8010/"
c['slavePortnum'] = 9986


####### BUILDSLAVES

# the 'bots' list defines the set of allowable buildslaves. Each element is a
# tuple of bot-name and bot-password. These correspond to values given to the
# buildslave's mktap invocation.

c['bots'] = [("qm-jstest01", "mozilla"),
             ("papaya", "mozilla"),
             ("pineapple", "mozilla"),
             ("pear", "mozilla"),
             ("plum", "mozilla")]

##
## Status
##

c['status'] = []
# c['status'].append(html.Waterfall(http_port=2005))
c['status'].append(html.Waterfall(http_port=2001, css="/work/master/waterfall.css"))

from buildbot.status import tinderbox

c['status'].append(tinderbox.TinderboxMailNotifier(
                   fromaddr="rcampbell@mozilla.com",
                   tree="MozillaTest",
                   extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org", "rcampbell@mozilla.com"],
                   relayhost="smtp.mozilla.org",
                   logCompression="bzip2"))

##
## Sources
##

from buildbot.changes import bonsaipoller

c['sources'] = []
c['sources'].append(bonsaipoller.BonsaiPoller(
                    bonsaiURL = "http://bonsai.mozilla.org",
                    module = "PhoenixTinderbox",
                    branch = "HEAD",
                    pollInterval = 1 * 60))

####### SCHEDULERS

## configure the Schedulers

from buildbot.scheduler import Scheduler
c['schedulers'] = []
c['schedulers'].append(Scheduler(name="js", branch="HEAD",
                                 treeStableTimer=2*60,
                                 builderNames=["Linux Sisyphus js",
                                               "Mac (PPC) Sisyphus branch js",
                                               "Mac (PPC) Sisyphus trunk js"]))

c['schedulers'].append(Nightly(name="nightly debug browser", branch="HEAD",
                               builderNames=["Linux Sisyphus debug browser",
                                             "Mac (PPC) Sisyphus debug branch browser",
                                             "Mac (PPC) Sisyphus debug trunk browser"],
                               hour=0, minute=0))

c['schedulers'].append(Nightly(name="nightly opt browser", branch="HEAD",
                               builderNames=["Linux Sisyphus opt browser",
                                             "Mac (PPC) Sisyphus opt branch browser",
                                             "Mac (PPC) Sisyphus opt trunk browser"],
                               hour=5, minute=0))

####### BUILDERS

SISYPHUS_BASE = "/work/mozilla/mozilla.com/test.mozilla.com/www"

builders = []

# Linux Trunk

linuxJSFactory = factory.BuildFactory()

linuxJSFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['linux'])
linuxJSFactory.addStep(step.ShellCommand, name="Update JS Tests",
                       workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                       flunkOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['linux'])
linuxJSFactory.addStep(step.ShellCommand, name="Create reports directory",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       command=["mkdir", "-p", "results"])
linuxJSFactory.addStep(SisyphusJSTest, name="js debug",
                       workdir = SISYPHUS_BASE,
                       buildType = 'debug',
                       branch = "1.8.1 1.9.0",
                       timeout= 60 * 60,
                       env=MozillaEnvironments['linux'])
linuxJSFactory.addStep(SisyphusJSTest, name="js opt",
                       workdir = SISYPHUS_BASE,
                       buildType = 'opt',
                       branch = "1.8.1 1.9.0",
                       timeout = 60 * 60,
                       env=MozillaEnvironments['linux'])

linuxOptBrowserFactory = factory.BuildFactory()

linuxOptBrowserFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       warnOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['linux'])
linuxOptBrowserFactory.addStep(step.ShellCommand, name="Update JS Tests",
                       workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                       flunkOnFailure=False,
                       warnOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['linux'])
linuxOptBrowserFactory.addStep(step.ShellCommand, name="Create reports directory",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       warnOnFailure=False,
                       command=["mkdir", "-p", "results"])
linuxOptBrowserFactory.addStep(SisyphusBrowserTest, name="browser opt",
                       workdir=SISYPHUS_BASE,
                       timeout=60*60*8,
                       buildType="opt",
                       env=MozillaEnvironments['linux'])

linuxDebugBrowserFactory = factory.BuildFactory()

linuxDebugBrowserFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       warnOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['linux'])
linuxDebugBrowserFactory.addStep(step.ShellCommand, name="Update JS Tests",
                       workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                       flunkOnFailure=False,
                       warnOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['linux'])
linuxDebugBrowserFactory.addStep(step.ShellCommand, name="Create reports directory",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       warnOnFailure=False,
                       command=["mkdir", "-p", "results"])
linuxDebugBrowserFactory.addStep(SisyphusBrowserTest, name="browser debug",
                       workdir=SISYPHUS_BASE,
                       timeout=60*60*8,
                       buildType="debug",
                       env=MozillaEnvironments['linux'])

linuxLock = SlaveLock(name='linux', maxCount=1, maxCountForSlave={"qm-jstest01": 1})

sisyphus_trunk_js_linux_builder = {
    'name': "Linux Sisyphus js",
    'slavenames': ['qm-jstest01'],
    'builddir': "trunk_js_linux",
    'factory': linuxJSFactory,
    'category': "Sisyphus",
    'locks': [linuxLock]
}

builders.append(sisyphus_trunk_js_linux_builder)

sisyphus_trunk_opt_browser_linux_builder = {
    'name': "Linux Sisyphus opt browser",
    'slavenames': ['qm-jstest01'],
    'builddir': "trunk_opt_browser_linux",
    'factory': linuxOptBrowserFactory,
    'category': "Sisyphus",
    'locks': [linuxLock]
}

builders.append(sisyphus_trunk_opt_browser_linux_builder)

sisyphus_trunk_debug_browser_linux_builder = {
    'name': "Linux Sisyphus debug browser",
    'slavenames': ['qm-jstest01'],
    'builddir': "trunk_debug_browser_linux",
    'factory': linuxDebugBrowserFactory,
    'category': "Sisyphus",
    'locks': [linuxLock]
}

builders.append(sisyphus_trunk_debug_browser_linux_builder)

# Mac OS X Branch (PPC)

macPPCBranchJSFactory = factory.BuildFactory()

macPPCBranchJSFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['macosxppc'])
macPPCBranchJSFactory.addStep(step.ShellCommand, name="Update JS Tests",
                       workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                       flunkOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['macosxppc'])
macPPCBranchJSFactory.addStep(step.ShellCommand, name="Create reports directory",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       command=["mkdir", "-p", "results"])
macPPCBranchJSFactory.addStep(SisyphusJSTest, name="js debug",
                       workdir = SISYPHUS_BASE,
                       buildType = 'debug',
                       branch = "1.8.1",
                       timeout= 60 * 60,
                       env=MozillaEnvironments['macosxppc'])
macPPCBranchJSFactory.addStep(SisyphusJSTest, name="js opt",
                       workdir = SISYPHUS_BASE,
                       buildType = 'opt',
                       branch = "1.8.1",
                       timeout = 60 * 60,
                       env=MozillaEnvironments['macosxppc'])

macPPCBranchOptBrowserFactory = factory.BuildFactory()

macPPCBranchOptBrowserFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCBranchOptBrowserFactory.addStep(step.ShellCommand, name="Update JS Tests",
                     workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCBranchOptBrowserFactory.addStep(step.ShellCommand, name="Create reports directory",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["mkdir", "-p", "results"])
macPPCBranchOptBrowserFactory.addStep(SisyphusBrowserTest, name="browser opt",
                     workdir=SISYPHUS_BASE,
                     timeout=60*60*8,
                     buildType="opt",
                     branch="1.8.1",
                     env=MozillaEnvironments['macosxppc'])

macPPCBranchDebugBrowserFactory = factory.BuildFactory()

macPPCBranchDebugBrowserFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCBranchDebugBrowserFactory.addStep(step.ShellCommand, name="Update JS Tests",
                     workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCBranchDebugBrowserFactory.addStep(step.ShellCommand, name="Create reports directory",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["mkdir", "-p", "results"])
macPPCBranchDebugBrowserFactory.addStep(SisyphusBrowserTest, name="browser debug",
                     workdir=SISYPHUS_BASE,
                     timeout=60*60*8,
                     buildType="debug",
                     branch="1.8.1",
                     env=MozillaEnvironments['macosxppc'])

macPapayaLock = SlaveLock(name='macpapaya', maxCount=1, maxCountForSlave={"papaya": 1})

sisyphus_branch_js_macppc_builder = {
    'name': "Mac (PPC) Sisyphus branch js",
    'slavenames': ['papaya'],
    'builddir': "branch_js_macppc",
    'factory': macPPCBranchJSFactory,
    'category': "Sisyphus",
    'locks': [macPapayaLock]
}

builders.append(sisyphus_branch_js_macppc_builder)

sisyphus_branch_opt_browser_macppc_builder = {
    'name': "Mac (PPC) Sisyphus opt branch browser",
    'slavenames': ['papaya'],
    'builddir': "branch_opt_browser_macppc",
    'factory': macPPCBranchOptBrowserFactory,
    'category': "Sisyphus",
    'locks': [macPapayaLock]
}

builders.append(sisyphus_branch_opt_browser_macppc_builder)

sisyphus_branch_debug_browser_macppc_builder = {
    'name': "Mac (PPC) Sisyphus debug branch browser",
    'slavenames': ['papaya'],
    'builddir': "branch_debug_browser_macppc",
    'factory': macPPCBranchDebugBrowserFactory,
    'category': "Sisyphus",
    'locks': [macPapayaLock]
}

builders.append(sisyphus_branch_debug_browser_macppc_builder)

# Mac OS X Trunk (PPC)

macPPCTrunkJSFactory = factory.BuildFactory()

macPPCTrunkJSFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['macosxppc'])
macPPCTrunkJSFactory.addStep(step.ShellCommand, name="Update JS Tests",
                       workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                       flunkOnFailure=False,
                       command=["cvs", "update", "-d", "-P"],
                       env=MozillaEnvironments['macosxppc'])
macPPCTrunkJSFactory.addStep(step.ShellCommand, name="Create reports directory",
                       workdir=SISYPHUS_BASE,
                       flunkOnFailure=False,
                       command=["mkdir", "-p", "results"])
macPPCTrunkJSFactory.addStep(SisyphusJSTest, name="js debug",
                       workdir = SISYPHUS_BASE,
                       buildType = 'debug',
                       branch = "1.9.0",
                       timeout= 60 * 60,
                       env=MozillaEnvironments['macosxppc'])
macPPCTrunkJSFactory.addStep(SisyphusJSTest, name="js opt",
                       workdir = SISYPHUS_BASE,
                       buildType = 'opt',
                       branch = "1.9.0",
                       timeout = 60 * 60,
                       env=MozillaEnvironments['macosxppc'])

macPPCTrunkOptBrowserFactory = factory.BuildFactory()

macPPCTrunkOptBrowserFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCTrunkOptBrowserFactory.addStep(step.ShellCommand, name="Update JS Tests",
                     workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCTrunkOptBrowserFactory.addStep(step.ShellCommand, name="Create reports directory",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["mkdir", "-p", "results"])
macPPCTrunkOptBrowserFactory.addStep(SisyphusBrowserTest, name="browser opt",
                     workdir=SISYPHUS_BASE,
                     timeout=60*60*8,
                     buildType="opt",
                     env=MozillaEnvironments['macosxppc'])

macPPCTrunkDebugBrowserFactory = factory.BuildFactory()

macPPCTrunkDebugBrowserFactory.addStep(step.ShellCommand, name="Update Sisyphus",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCTrunkDebugBrowserFactory.addStep(step.ShellCommand, name="Update JS Tests",
                     workdir=SISYPHUS_BASE + "/tests/mozilla.org/js",
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["cvs", "update", "-d", "-P"],
                     env=MozillaEnvironments['macosxppc'])
macPPCTrunkDebugBrowserFactory.addStep(step.ShellCommand, name="Create reports directory",
                     workdir=SISYPHUS_BASE,
                     flunkOnFailure=False,
                     warnOnFailure=False,
                     command=["mkdir", "-p", "results"])
macPPCTrunkDebugBrowserFactory.addStep(SisyphusBrowserTest, name="browser debug",
                     workdir=SISYPHUS_BASE,
                     timeout=60*60*8,
                     buildType="debug",
                     env=MozillaEnvironments['macosxppc'])

macPineappleLock = SlaveLock(name='macpineapple', maxCount=1, maxCountForSlave={"pineapple": 1})

sisyphus_trunk_js_macppc_builder = {
    'name': "Mac (PPC) Sisyphus trunk js",
    'slavenames': ['pineapple'],
    'builddir': "trunk_js_macppc",
    'factory': macPPCTrunkJSFactory,
    'category': "Sisyphus",
    'locks': [macPineappleLock]
}

builders.append(sisyphus_trunk_js_macppc_builder)

sisyphus_trunk_opt_browser_macppc_builder = {
    'name': "Mac (PPC) Sisyphus opt trunk browser",
    'slavenames': ['pineapple'],
    'builddir': "trunk_opt_browser_macppc",
    'factory': macPPCTrunkOptBrowserFactory,
    'category': "Sisyphus",
    'locks': [macPineappleLock]
}

builders.append(sisyphus_trunk_opt_browser_macppc_builder)

sisyphus_trunk_debug_browser_macppc_builder = {
    'name': "Mac (PPC) Sisyphus debug trunk browser",
    'slavenames': ['pineapple'],
    'builddir': "trunk_debug_browser_macppc",
    'factory': macPPCTrunkDebugBrowserFactory,
    'category': "Sisyphus",
    'locks': [macPineappleLock]
}

builders.append(sisyphus_trunk_debug_browser_macppc_builder)

c['builders'] = builders
