# -*- python -*-
# ex: set syntax = python:

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

from buildbot.scheduler import Scheduler, Nightly
from buildbot.process import step, factory
from buildbot.status import html
from buildbot.steps.transfer import FileDownload
from buildbot.locks import SlaveLock
# from buildbot.manhole import TelnetManhole

import sisyphus
reload(sisyphus)

from sisyphus import *

s = factory.s

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

##
## Misc Config
##

# c['debugPassword'] = "d3bUg"
# c['manhole'] = TelnetManhole(9455, "buildbot", "mankey")
c['projectName'] = "Sisyphus"
c['projectURL'] = "http://wiki.mozilla.org/Sisyphus"
c['buildbotURL'] = "http://qm-unittest02:2001/"
c['slavePortnum'] = 9986


####### BUILDSLAVES

# the 'bots' list defines the set of allowable buildslaves. Each element is a
# tuple of bot-name and bot-password. These correspond to values given to the
# buildslave's mktap invocation.

c['bots'] = [("qm-jstest01", "mozilla"),
             ("papaya", "mozilla"),
             ("pineapple", "mozilla"),
             ("pear", "mozilla"),
             ("plum", "mozilla"),
             ("qm-winxp02", "mozilla"),
             ("qm-winxp03", "mozilla")]

##
## Status
##

c['status'] = []
# c['status'].append(html.Waterfall(http_port = 2005))
c['status'].append(html.Waterfall(http_port = 2001, css = "/build/sisyphus/waterfall.css"))

from buildbot.status import tinderbox

c['status'].append(tinderbox.TinderboxMailNotifier(
                   fromaddr = "rcampbell@mozilla.com",
                   tree = "UnitTest",
                   extraRecipients = ["tinderbox-daemon@tinderbox.mozilla.org",
                                   "rcampbell@mozilla.com"],
                   relayhost = "smtp.mozilla.org",
                   logCompression = "bzip2"))

##
## Sources
##

from buildbot.changes import bonsaipoller

c['sources'] = []
c['sources'].append(bonsaipoller.BonsaiPoller(
                    bonsaiURL = "http://bonsai.mozilla.org",
                    module = "PhoenixTinderbox",
                    branch = "HEAD",
                    pollInterval = 1 * 60))

c['sources'].append(bonsaipoller.BonsaiPoller(
                    bonsaiURL = "http://bonsai.mozilla.org",
                    module = "AviarySuiteBranchTinderbox",
                    branch = "MOZILLA_1_8_BRANCH",
                    pollInterval = 1 * 60))

####### SCHEDULERS

## configure the Schedulers

builderLinuxQmJstest0119Shell = "jstest linux qm-jstest01 1.9 shell"
builderOSXPPCPineapple19Shell = "jstest os x ppc pineapple 1.9 shell"
builderWin32QmWinxp0319Shell = "jstest win32 qm-winxp03 1.9 shell"

from buildbot.scheduler import Scheduler
c['schedulers'] = []

builderOSXPPCPapaya181Shell   = "jstest os x ppc papaya 1.8.1 shell"
builderLinuxPlum181Shell      = "jstest linux plum 1.8.1 shell"
builderWin32QmWinxp02181Shell = "jstest win32 qm-winxp02 1.8.1 shell"

c['schedulers'].append(Scheduler(name = "shell 1.8.1 bonsai", 
                             branch = "MOZILLA_1_8_BRANCH",
                             treeStableTimer = 2 * 60,
                             builderNames = [builderLinuxPlum181Shell,
                                          builderOSXPPCPapaya181Shell,
                                          builderWin32QmWinxp02181Shell]))

c['schedulers'].append(Scheduler(name = "shell 1.9 bonsai",
                              branch = "HEAD",
                              treeStableTimer = 2 * 60,
                              builderNames = [builderLinuxQmJstest0119Shell,
                                           builderOSXPPCPineapple19Shell,
                                           builderWin32QmWinxp0319Shell]))

builderLinuxQmJstest0119BrowserDebug = "jstest linux qm-jstest01 1.9 browser debug"
builderOSXPPCPineapple19BrowserDebug = "jstest os x ppc pineapple 1.9 browser debug"
builderWindowsQmWinxp0319BrowserDebug = "jstest win32 qm-winxp03 1.9 browser debug"

c['schedulers'].append(Nightly(name = "nightly 1.9 browser debug",
                            branch = "1.9",
                            builderNames = [builderLinuxQmJstest0119BrowserDebug,
                                         builderOSXPPCPineapple19BrowserDebug,
                                         builderWindowsQmWinxp0319BrowserDebug],
                            hour = 0, minute = 0))

builderLinuxPear181BrowserDebug    = "jstest linux pear 1.8.1 browser debug"
builderOSXPPCPapaya181BrowserDebug = "jstest os x ppc papaya 1.8.1 browser debug"
builderWindowsQmWinxp02181BrowserDebug = "jstest win32 qm-winxp02 1.8.1 browser debug"

c['schedulers'].append(Nightly(name = "nightly 1.8.1 browser debug",
                            branch = "1.8.1",
                            builderNames = [builderLinuxPear181BrowserDebug,
                                         builderOSXPPCPapaya181BrowserDebug,
                                         builderWindowsQmWinxp02181BrowserDebug],
                            hour = 0, minute = 0))

builderLinuxQmJstest0119BrowserOpt = "jstest linux qm-jstest01 1.9 browser opt"
builderOSXPPCPineapple19BrowserOpt = "jstest os x ppc pineapple 1.9 browser opt"
builderWindowsQmWinxp0319BrowserOpt = "jstest win32 qm-winxp03 1.9 browser opt"

c['schedulers'].append(Nightly(name = "nightly 1.9 browser opt",
                            branch = "1.9",
                            builderNames = [builderLinuxQmJstest0119BrowserOpt,
                                         builderOSXPPCPineapple19BrowserOpt,
                                         builderWindowsQmWinxp0319BrowserOpt],
                            hour = 5, minute = 0))

builderLinuxPear181BrowserOpt    = "jstest linux pear 1.8.1 browser opt"
builderOSXPPCPapaya181BrowserOpt = "jstest os x ppc papaya 1.8.1 browser opt"
builderWindowsQmWinxp02181BrowserOpt = "jstest win32 qm-winxp02 1.8.1 browser opt"

c['schedulers'].append(Nightly(name = "nightly 1.8.1 browser opt",
                            branch = "1.8.1",
                            builderNames = [builderLinuxPear181BrowserOpt,
                                         builderOSXPPCPapaya181BrowserOpt,
                                         builderWindowsQmWinxp02181BrowserOpt],
                            hour = 5, minute = 0))

####### BUILDERS

SISYPHUS_BASE = "/work/mozilla/mozilla.com/test.mozilla.com/www"

builders = []

# Linux Branch

linuxJS181ShellFactory = factory.BuildFactory()

linuxJS181ShellFactory.addStep(step.ShellCommand, name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS181ShellFactory.addStep(step.ShellCommand, name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS181ShellFactory.addStep(step.ShellCommand, name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["mkdir", "-p", "results"])
linuxJS181ShellFactory.addStep(SisyphusJSTest, name = "js debug",
                    workdir = SISYPHUS_BASE,
                    buildType = 'debug',
                    branch = "1.8.1",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['linux'])
linuxJS181ShellFactory.addStep(SisyphusJSTest, name = "js opt",
                    workdir = SISYPHUS_BASE,
                    buildType = 'opt',
                    branch = "1.8.1",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['linux'])

sisyphus_branch_js_linux_builder = {
    'name': builderLinuxPlum181Shell,
    'slavenames': ['plum'],
    'builddir': "branch_js_linux",
    'factory': linuxJS181ShellFactory,
    'category': "Sisyphus"
}

builders.append(sisyphus_branch_js_linux_builder)

linuxJS181BrowserOptFactory = factory.BuildFactory()

linuxJS181BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS181BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS181BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
linuxJS181BrowserOptFactory.addStep(SisyphusBrowserTest,
                    name = "browser opt",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    branch = "1.8.1",
                    buildType = "opt",
                    env = MozillaEnvironments['linux'])

linuxJS181BrowserDebugFactory = factory.BuildFactory()

linuxJS181BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS181BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS181BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
linuxJS181BrowserDebugFactory.addStep(SisyphusBrowserTest, name = "browser debug",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    branch = "1.8.1",
                    buildType = "debug",
                    env = MozillaEnvironments['linux'])

linux181Lock = SlaveLock(name = 'pear lock',
                    maxCount = 1,
                    maxCountForSlave = {"pear": 1})

sisyphus_branch_opt_browser_linux_builder = {
    'name': builderLinuxPear181BrowserOpt,
    'slavenames': ['pear'],
    'builddir': "branch_opt_browser_linux",
    'factory': linuxJS181BrowserOptFactory,
    'category': "Sisyphus",
    'locks': [linux181Lock]
}

builders.append(sisyphus_branch_opt_browser_linux_builder)

sisyphus_branch_debug_browser_linux_builder = {
    'name': builderLinuxPear181BrowserDebug,
    'slavenames': ['pear'],
    'builddir': "branch_debug_browser_linux",
    'factory': linuxJS181BrowserDebugFactory,
    'category': "Sisyphus",
    'locks': [linux181Lock]
}

builders.append(sisyphus_branch_debug_browser_linux_builder)

# Linux Trunk

linuxJS19ShellFactory = factory.BuildFactory()

linuxJS19ShellFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS19ShellFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS19ShellFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["mkdir", "-p", "results"])
linuxJS19ShellFactory.addStep(SisyphusJSTest,
                    name = "js debug",
                    workdir = SISYPHUS_BASE,
                    buildType = 'debug',
                    branch = "1.9.0",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['linux'])
linuxJS19ShellFactory.addStep(SisyphusJSTest,
                    name = "js opt",
                    workdir = SISYPHUS_BASE,
                    buildType = 'opt',
                    branch = "1.9.0",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['linux'])

linuxJS19BrowserOptFactory = factory.BuildFactory()

linuxJS19BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS19BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS19BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
linuxJS19BrowserOptFactory.addStep(SisyphusBrowserTest,
                    name = "browser opt",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    buildType = "opt",
                    env = MozillaEnvironments['linux'])

linuxJS19BrowserDebugFactory = factory.BuildFactory()

linuxJS19BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS19BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['linux'])
linuxJS19BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
linuxJS19BrowserDebugFactory.addStep(SisyphusBrowserTest,
                    name = "browser debug",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    buildType = "debug",
                    env = MozillaEnvironments['linux'])

linuxLock = SlaveLock(name = 'jstest01 lock',
                    maxCount = 1,
                    maxCountForSlave = {"qm-jstest01": 1})

sisyphus_trunk_js_linux_builder = {
    'name': builderLinuxQmJstest0119Shell,
    'slavenames': ['qm-jstest01'],
    'builddir': "trunk_js_linux",
    'factory': linuxJS19ShellFactory,
    'category': "Sisyphus",
    'locks': [linuxLock]
}

builders.append(sisyphus_trunk_js_linux_builder)

sisyphus_trunk_opt_browser_linux_builder = {
    'name': builderLinuxQmJstest0119BrowserOpt,
    'slavenames': ['qm-jstest01'],
    'builddir': "trunk_opt_browser_linux",
    'factory': linuxJS19BrowserOptFactory,
    'category': "Sisyphus",
    'locks': [linuxLock]
}

builders.append(sisyphus_trunk_opt_browser_linux_builder)

sisyphus_trunk_debug_browser_linux_builder = {
    'name': builderLinuxQmJstest0119BrowserDebug,
    'slavenames': ['qm-jstest01'],
    'builddir': "trunk_debug_browser_linux",
    'factory': linuxJS19BrowserDebugFactory,
    'category': "Sisyphus",
    'locks': [linuxLock]
}

builders.append(sisyphus_trunk_debug_browser_linux_builder)

# Mac OS X Branch (PPC)

macPPCJS181ShellFactory = factory.BuildFactory()

macPPCJS181ShellFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181ShellFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181ShellFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["mkdir", "-p", "results"])
macPPCJS181ShellFactory.addStep(SisyphusJSTest,
                    name = "js debug",
                    workdir = SISYPHUS_BASE,
                    buildType = 'debug',
                    branch = "1.8.1",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181ShellFactory.addStep(SisyphusJSTest,
                    name = "js opt",
                    workdir = SISYPHUS_BASE,
                    buildType = 'opt',
                    branch = "1.8.1",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['macosxppc'])

macPPCJS181BrowserOptFactory = factory.BuildFactory()

macPPCJS181BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
macPPCJS181BrowserOptFactory.addStep(SisyphusBrowserTest,
                    name = "browser opt",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    buildType = "opt",
                    branch = "1.8.1",
                    env = MozillaEnvironments['macosxppc'])

macPPCJS181BrowserDebugFactory = factory.BuildFactory()

macPPCJS181BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS181BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
macPPCJS181BrowserDebugFactory.addStep(SisyphusBrowserTest,
                    name = "browser debug",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    buildType = "debug",
                    branch = "1.8.1",
                    env = MozillaEnvironments['macosxppc'])

macPapayaLock = SlaveLock(name = 'macpapaya',
                       maxCount = 1,
                       maxCountForSlave = {"papaya": 1})

sisyphus_branch_js_macppc_builder = {
    'name': builderOSXPPCPapaya181Shell,
    'slavenames': ['papaya'],
    'builddir': "branch_js_macppc",
    'factory': macPPCJS181ShellFactory,
    'category': "Sisyphus",
    'locks': [macPapayaLock]
}

builders.append(sisyphus_branch_js_macppc_builder)

sisyphus_branch_opt_browser_macppc_builder = {
    'name': builderOSXPPCPapaya181BrowserOpt,
    'slavenames': ['papaya'],
    'builddir': "branch_opt_browser_macppc",
    'factory': macPPCJS181BrowserOptFactory,
    'category': "Sisyphus",
    'locks': [macPapayaLock]
}

builders.append(sisyphus_branch_opt_browser_macppc_builder)

sisyphus_branch_debug_browser_macppc_builder = {
    'name': builderOSXPPCPapaya181BrowserDebug,
    'slavenames': ['papaya'],
    'builddir': "branch_debug_browser_macppc",
    'factory': macPPCJS181BrowserDebugFactory,
    'category': "Sisyphus",
    'locks': [macPapayaLock]
}

builders.append(sisyphus_branch_debug_browser_macppc_builder)

# Mac OS X Trunk (PPC)

macPPCJS19ShellFactory = factory.BuildFactory()

macPPCJS19ShellFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19ShellFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19ShellFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    command = ["mkdir", "-p", "results"])
macPPCJS19ShellFactory.addStep(SisyphusJSTest,
                    name = "js debug",
                    workdir = SISYPHUS_BASE,
                    buildType = 'debug',
                    branch = "1.9.0",
                    timeout= 60 * 60 * 3,
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19ShellFactory.addStep(SisyphusJSTest,
                    name = "js opt",
                    workdir = SISYPHUS_BASE,
                    buildType = 'opt',
                    branch = "1.9.0",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['macosxppc'])

macPPCJS19BrowserOptFactory = factory.BuildFactory()

macPPCJS19BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19BrowserOptFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
macPPCJS19BrowserOptFactory.addStep(SisyphusBrowserTest,
                    name = "browser opt",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    buildType = "opt",
                    env = MozillaEnvironments['macosxppc'])

macPPCJS19BrowserDebugFactory = factory.BuildFactory()

macPPCJS19BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['macosxppc'])
macPPCJS19BrowserDebugFactory.addStep(step.ShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"])
macPPCJS19BrowserDebugFactory.addStep(SisyphusBrowserTest,
                    name = "browser debug",
                    workdir = SISYPHUS_BASE,
                    timeout = 60*60*8,
                    buildType = "debug",
                    env = MozillaEnvironments['macosxppc'])

macPineappleLock = SlaveLock(name = 'macpineapple',
                    maxCount = 1,
                    maxCountForSlave = {"pineapple": 1})

sisyphus_trunk_js_macppc_builder = {
    'name': builderOSXPPCPineapple19Shell,
    'slavenames': ['pineapple'],
    'builddir': "trunk_js_macppc",
    'factory': macPPCJS19ShellFactory,
    'category': "Sisyphus",
    'locks': [macPineappleLock]
}

builders.append(sisyphus_trunk_js_macppc_builder)

sisyphus_trunk_opt_browser_macppc_builder = {
    'name': builderOSXPPCPineapple19BrowserOpt,
    'slavenames': ['pineapple'],
    'builddir': "trunk_opt_browser_macppc",
    'factory': macPPCJS19BrowserOptFactory,
    'category': "Sisyphus",
    'locks': [macPineappleLock]
}

builders.append(sisyphus_trunk_opt_browser_macppc_builder)

sisyphus_trunk_debug_browser_macppc_builder = {
    'name': builderOSXPPCPineapple19BrowserDebug,
    'slavenames': ['pineapple'],
    'builddir': "trunk_debug_browser_macppc",
    'factory': macPPCJS19BrowserDebugFactory,
    'category': "Sisyphus",
    'locks': [macPineappleLock]
}

builders.append(sisyphus_trunk_debug_browser_macppc_builder)

# Windows Branch

SISYPHUS_BASE_WIN = "C:\\work\\mozilla\\mozilla.com\\test.mozilla.com\\www"

windowsJS181ShellFactory = factory.BuildFactory()

windowsJS181ShellFactory.addStep(CygwinBashShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS181ShellFactory.addStep(CygwinBashShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE_WIN + "\\tests\\mozilla.org\\js",
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS181ShellFactory.addStep(CygwinBashShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    command = ["mkdir", "-p", "results"],
                    env = MozillaEnvironments['windows'])
windowsJS181ShellFactory.addStep(SisyphusJSTestWin,
                    name = "js debug",
                    workdir = SISYPHUS_BASE_WIN,
                    buildType = 'debug',
                    branch = "1.8.1",
                    timeout= 60 * 60 * 3,
                    env = MozillaEnvironments['windows'])
windowsJS181ShellFactory.addStep(SisyphusJSTestWin,
                    name = "js opt",
                    workdir = SISYPHUS_BASE_WIN,
                    buildType = 'opt',
                    branch = "1.8.1",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['windows'])

windowsJS181BrowserOptFactory = factory.BuildFactory()

windowsJS181BrowserOptFactory.addStep(CygwinBashShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS181BrowserOptFactory.addStep(CygwinBashShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE_WIN + "\\tests\\mozilla.org\\js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS181BrowserOptFactory.addStep(CygwinBashShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"],
                    env = MozillaEnvironments['windows'])
windowsJS181BrowserOptFactory.addStep(SisyphusBrowserTestWin,
                    name = "browser opt",
                    workdir = SISYPHUS_BASE_WIN,
                    timeout = 60*60*8,
                    buildType = "opt",
                    branch = "1.8.1",
                    env = MozillaEnvironments['windows'])

windowsJS181BrowserDebugFactory = factory.BuildFactory()

windowsJS181BrowserDebugFactory.addStep(CygwinBashShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS181BrowserDebugFactory.addStep(CygwinBashShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE_WIN + "/tests/mozilla.org/js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS181BrowserDebugFactory.addStep(CygwinBashShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"],
                    env = MozillaEnvironments['windows'])
windowsJS181BrowserDebugFactory.addStep(SisyphusBrowserTestWin,
                    name = "browser debug",
                    workdir = SISYPHUS_BASE_WIN,
                    timeout = 60*60*8,
                    buildType = "debug",
                    branch = "1.8.1",
                    env = MozillaEnvironments['windows'])

qmwinxp02Lock = SlaveLock(name = 'qm-winxp02 lock',
                    maxCount = 1,
                    maxCountForSlave = {"qm-winxp02": 1})

sisyphus_branch_js_win32_builder = {
    'name': builderWin32QmWinxp02181Shell,
    'slavenames': ['qm-winxp02'],
    'builddir': "branch_js_win32",
    'factory': windowsJS181ShellFactory,
    'category': "Sisyphus",
    'locks': [qmwinxp02Lock]
}

builders.append(sisyphus_branch_js_win32_builder)

sisyphus_branch_opt_browser_win32_builder = {
    'name': builderWindowsQmWinxp02181BrowserOpt,
    'slavenames': ['qm-winxp02'],
    'builddir': "branch_opt_browser_win32",
    'factory': windowsJS181BrowserOptFactory,
    'category': "Sisyphus",
    'locks': [qmwinxp02Lock]
}

builders.append(sisyphus_branch_opt_browser_win32_builder)

sisyphus_branch_debug_browser_win32_builder = {
    'name': builderWindowsQmWinxp02181BrowserDebug,
    'slavenames': ['qm-winxp02'],
    'builddir': "branch_debug_browser_win32",
    'factory': windowsJS181BrowserDebugFactory,
    'category': "Sisyphus",
    'locks': [qmwinxp02Lock]
}

builders.append(sisyphus_branch_debug_browser_win32_builder)


# Windows Trunk

windowsJS19ShellFactory = factory.BuildFactory()

windowsJS19ShellFactory.addStep(CygwinBashShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS19ShellFactory.addStep(CygwinBashShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE_WIN + "\\tests\\mozilla.org\\js",
                    flunkOnFailure = True,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS19ShellFactory.addStep(CygwinBashShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    command = ["mkdir", "-p", "results"],
                    env = MozillaEnvironments['windows'])
windowsJS19ShellFactory.addStep(SisyphusJSTestWin,
                    name = "js debug",
                    workdir = SISYPHUS_BASE_WIN,
                    buildType = 'debug',
                    branch = "1.9.0",
                    timeout= 60 * 60 * 3,
                    env = MozillaEnvironments['windows'])
windowsJS19ShellFactory.addStep(SisyphusJSTestWin,
                    name = "js opt",
                    workdir = SISYPHUS_BASE_WIN,
                    buildType = 'opt',
                    branch = "1.9.0",
                    timeout = 60 * 60 * 3,
                    env = MozillaEnvironments['windows'])

windowsJS19BrowserOptFactory = factory.BuildFactory()

windowsJS19BrowserOptFactory.addStep(CygwinBashShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS19BrowserOptFactory.addStep(CygwinBashShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE_WIN + "\\tests\\mozilla.org\\js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS19BrowserOptFactory.addStep(CygwinBashShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"],
                    env = MozillaEnvironments['windows'])
windowsJS19BrowserOptFactory.addStep(SisyphusBrowserTestWin,
                    name = "browser opt",
                    workdir = SISYPHUS_BASE_WIN,
                    timeout = 60*60*8,
                    buildType = "opt",
                    env = MozillaEnvironments['windows'])

windowsJS19BrowserDebugFactory = factory.BuildFactory()

windowsJS19BrowserDebugFactory.addStep(CygwinBashShellCommand,
                    name = "Update Sisyphus",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS19BrowserDebugFactory.addStep(CygwinBashShellCommand,
                    name = "Update JS Tests",
                    workdir = SISYPHUS_BASE_WIN + "\\tests\\mozilla.org\\js",
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["cvs", "update", "-d", "-P"],
                    env = MozillaEnvironments['windows'])
windowsJS19BrowserDebugFactory.addStep(CygwinBashShellCommand,
                    name = "Create reports directory",
                    workdir = SISYPHUS_BASE_WIN,
                    flunkOnFailure = True,
                    warnOnFailure = False,
                    command = ["mkdir", "-p", "results"],
                    env = MozillaEnvironments['windows'])
windowsJS19BrowserDebugFactory.addStep(SisyphusBrowserTestWin,
                    name = "browser debug",
                    workdir = SISYPHUS_BASE_WIN,
                    timeout = 60*60*8,
                    buildType = "debug",
                    env = MozillaEnvironments['windows'])

qmwinxp03Lock = SlaveLock(name = 'qm-winxp03 lock',
                       maxCount = 1,
                       maxCountForSlave = {"qm-winxp03": 1})

sisyphus_trunk_js_win32_builder = {
   'name': builderWin32QmWinxp0319Shell,
   'slavenames': ['qm-winxp03'],
   'builddir': "trunk_js_win32",
   'factory': windowsJS19ShellFactory,
   'category': "Sisyphus",
   'locks': [qmwinxp03Lock]
}

builders.append(sisyphus_trunk_js_win32_builder)

sisyphus_trunk_opt_browser_win32_builder = {
    'name': builderWindowsQmWinxp0319BrowserOpt,
    'slavenames': ['qm-winxp03'],
    'builddir': "trunk_opt_browser_win32",
    'factory': windowsJS19BrowserOptFactory,
    'category': "Sisyphus",
    'locks': [qmwinxp03Lock]
}

builders.append(sisyphus_trunk_opt_browser_win32_builder)

sisyphus_trunk_debug_browser_win32_builder = {
    'name': builderWindowsQmWinxp0319BrowserDebug,
    'slavenames': ['qm-winxp03'],
    'builddir': "trunk_debug_browser_win32",
    'factory': windowsJS19BrowserDebugFactory,
    'category': "Sisyphus",
    'locks': [qmwinxp03Lock]
}

builders.append(sisyphus_trunk_debug_browser_win32_builder)

c['builders'] = builders
