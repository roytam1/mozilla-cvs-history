# This is the buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

import os.path
# from buildbot.changes.freshcvs import FreshCVSSource
from buildbot.scheduler import Scheduler, Periodic
from buildbot.process import step, factory
from buildbot.status import html
from buildbot.steps.transfer import FileDownload
s = factory.s

import auth
reload(auth)
from auth import *
import mozbuild
reload(mozbuild)
from mozbuild import *

CVSROOT = ":ext:unittest@cvs.mozilla.org:/cvsroot"

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

##
## Misc Config
##

c['debugPassword'] = debugPassword
# c['manhole'] = Manhole(9455, "buildbot", "mankey")
c['projectName'] = "unittest"
c['projectURL'] = "http://wiki.mozilla.org/unittest"
c['buildbotURL'] = "http://localhost:8010/"
c['slavePortnum'] = 9989

##
## Slaves
##
# (bot-name, bot-password)
c['bots'] = authList

##
## Status
##

c['status'] = []
# c['status'].append(html.Waterfall(http_port=2005))
c['status'].append(html.Waterfall(http_port=2005, css="/build/master/waterfall.css"))

from buildbot.status import tinderbox

c['status'].append(tinderbox.TinderboxMailNotifier(
                   fromaddr="rcampbell@mozilla.com",
                   tree="Firefox",
                   extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org", "rcampbell@mozilla.com"],
                   relayhost="smtp.mozilla.org",
                   logCompression="bzip2",
                   errorparser="unittest"))

##
## Sources
##

from buildbot.changes import bonsaipoller

c['sources'] = []
c['sources'].append(bonsaipoller.BonsaiPoller(
                    bonsaiURL = "http://bonsai.mozilla.org",
                    module = "PhoenixTinderbox",
                    branch = "HEAD",
                    pollInterval = 1 * 60))

##
## Schedulers
##

c['schedulers'] = []
c['schedulers'].append(Scheduler(name="bonsai build scheduler",
                                 branch="HEAD",
                                 treeStableTimer=5*60,
                                 builderNames=[
#                                               "WINNT 5.1 qm-winxp01 dep unit test",
                                               "WINNT 5.2 qm-win2k3-01 dep unit test",
                                               "WINNT 5.2 qm-win2k3-02 dep unit test",
                                               "WINNT 5.2 qm-win2k3-03 dep unit test",
                                               "WINNT 5.2 qm-win2k3-pgo01 dep unit test",
                                               "Linux qm-centos5-01 dep unit test",
                                               "Linux qm-centos5-02 dep unit test",
                                               "Linux qm-centos5-03 dep unit test",
                                               "MacOSX Darwin 8.11.1 qm-xserve01 dep unit test",
                                               "MacOSX Darwin 8.11.1 qm-xserve06 dep unit test"
#                                               "MacOSX Darwin 9.1.0 qm-xserve02 dep unit test"
                                               ]))

c['schedulers'].append(Periodic(name="9 hour build scheduler",
                                builderNames=[
#                                             "WINNT 5.1 qm-winxp01 dep unit test",
                                             "WINNT 5.2 qm-win2k3-01 dep unit test",
                                             "WINNT 5.2 qm-win2k3-02 dep unit test",
                                             "WINNT 5.2 qm-win2k3-03 dep unit test",
                                             "WINNT 5.2 qm-win2k3-pgo01 dep unit test",
                                             "Linux qm-centos5-01 dep unit test",
                                             "Linux qm-centos5-02 dep unit test",
                                             "Linux qm-centos5-03 dep unit test",
                                             "MacOSX Darwin 8.11.1 qm-xserve01 dep unit test",
                                             "MacOSX Darwin 8.11.1 qm-xserve06 dep unit test"
#                                             "MacOSX Darwin 9.1.0 qm-xserve02 dep unit test"
                                             ],
                                periodicBuildTimer=9*60*60))

# c['schedulers'].append(Periodic("6 hour win build", ["winxp test"], 6*60*60))
# c['schedulers'].append(Periodic("6 hour linux build", ["linref test"], 6*60*60))
# c['schedulers'].append(Periodic("30 minute build cycler",
#                                 ["MacOSX Darwin 8.11.1 qm-xserve01 dep unit test"],
#                                 30*60))

# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds

builders = []

# linux

centosFactory = factory.BuildFactory()

centosFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="linux")
centosFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="linux")
centosFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='linux')
centosFactory.addStep(MozillaClobber,
        platform="linux",
        workdir='.',
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT)
centosFactory.addStep(FileDownload, mastersrc="mozconfig-places", 
        slavedest=".mozconfig", 
        workdir="mozilla")
centosFactory.addStep(step.ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla")
centosFactory.addStep(step.Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla')
centosFactory.addStep(step.Compile,
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla')
centosFactory.addStep(MozillaCheck,
        warnOnWarnings=True,
        timeout=60*40,
        workdir="mozilla/objdir")
centosFactory.addStep(CreateProfile,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['centos'],
        clobber=True)
centosFactory.addStep(MozillaUnixReftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaUnixCrashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['centos'])

firefox_trunk_centos5_builder = {
    'name': "Linux qm-centos5-01 dep unit test",
    'slavenames': ['linux'],
    'builddir': "trunk_centos5",
    'factory': centosFactory,
    'category': "Firefox"}

firefox_trunk_centos5_2_builder = {
    'name': "Linux qm-centos5-02 dep unit test",
    'slavenames': ['linux-2'],
    'builddir': "trunk_centos5_2",
    'factory': centosFactory,
    'category': "Firefox"}

firefox_trunk_centos5_3_builder = {
    'name': "Linux qm-centos5-03 dep unit test",
    'slavenames': ['linux-3'],
    'builddir': "trunk_centos5_3",
    'factory': centosFactory,
    'category': "Firefox"}

builders.append(firefox_trunk_centos5_builder)
builders.append(firefox_trunk_centos5_2_builder)
builders.append(firefox_trunk_centos5_3_builder)

##
## Mac OS X
##

osxFactory = factory.BuildFactory()

osxFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="macosx")
osxFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="macosx")
osxFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='macosx',
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaClobber,
        workdir='.',
        platform="macosx",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        env=MozillaEnvironments['osx'],
        cvsroot=CVSROOT),
osxFactory.addStep(FileDownload, mastersrc="mozconfig-osx", 
        slavedest=".mozconfig", 
        workdir="mozilla")
osxFactory.addStep(step.ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla")
osxFactory.addStep(step.Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla')
osxFactory.addStep(step.Compile,
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla')
osxFactory.addStep(MozillaCheck,
        warnOnWarnings=True,
        timeout=60*40,
        workdir="mozilla/objdir")
osxFactory.addStep(CreateProfile,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['osx'],
        clobber=True)
osxFactory.addStep(MozillaOSXReftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaOSXCrashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaOSXMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaOSXMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaOSXBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])

firefox_trunk_osx_builder = {
    'name': "MacOSX Darwin 8.11.1 qm-xserve01 dep unit test",
    'slavenames': ['mac-osx'],
    'builddir': "trunk_osx",
    'factory': osxFactory,
    'category': "Firefox"}

builders.append(firefox_trunk_osx_builder)

firefox_trunk_xserve06_builder = {
    'name': "MacOSX Darwin 8.11.1 qm-xserve06 dep unit test",
    'slavenames': ['qm-xserve06'],
    'builddir': "trunk_osx_6",
    'factory': osxFactory,
    'category': "Firefox"}

builders.append(firefox_trunk_xserve06_builder)

##
## Mac OS X - Leopard
##

leopardFactory = factory.BuildFactory()

leopardFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="macosx")
leopardFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="macosx")
leopardFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='macosx',
        env=MozillaEnvironments['osx'])
leopardFactory.addStep(MozillaClobber,
        workdir='.',
        platform="macosx",
        env=MozillaEnvironments['osx'])
leopardFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        env=MozillaEnvironments['osx'],
        cvsroot=CVSROOT),
leopardFactory.addStep(FileDownload, mastersrc="mozconfig-osx", 
        slavedest=".mozconfig", 
        workdir="mozilla")
leopardFactory.addStep(step.ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla")
leopardFactory.addStep(step.Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla')
leopardFactory.addStep(step.Compile,
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla')
leopardFactory.addStep(MozillaCheck,
        warnOnWarnings=True,
        timeout=60*40,
        workdir="mozilla/objdir")
leopardFactory.addStep(CreateProfile,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['osx'],
        clobber=True)
leopardFactory.addStep(MozillaOSXReftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['osx'])
leopardFactory.addStep(MozillaOSXCrashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['osx'])
leopardFactory.addStep(MozillaOSXMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])
leopardFactory.addStep(MozillaOSXMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])
leopardFactory.addStep(MozillaOSXBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])

#firefox_trunk_leopard_builder = {
#    'name': "MacOSX Darwin 9.1.0 qm-xserve02 dep unit test",
#    'slavenames': ['qm-xserve02'],
#    'builddir': "trunk_leopard",
#    'factory': leopardFactory,
#    'category': "Firefox"}
#
#builders.append(firefox_trunk_leopard_builder)

# firefox_trunk_osx_builder2 = {
#     'name': "MacOSX Darwin 8.11.1 bm-xserve07 dep unit test",
#     'slavenames': ['bm-xserve07'],
#     'builddir': "trunk_osx2",
#     'factory': osxFactory,
#     'category': "Firefox"}

# builders.append(firefox_trunk_osx_builder2)

##
## WinXP
##

winxpFactory = factory.BuildFactory()

winxpFactory.addStep(TinderboxShellCommand, name="kill sh",
        description='kill sh',
        descriptionDone="killed sh",
        command="pskill -t sh.exe",
        workdir="C:\\Utilities")
winxpFactory.addStep(TinderboxShellCommand, name="kill make",
        description='kill make',
        descriptionDone="killed make",
        command="pskill -t make.exe",
        workdir="C:\\Utilities")
winxpFactory.addStep(TinderboxShellCommand, name="kill firefox",
        description='kill firefox',
        descriptionDone="killed firefox",
        command="pskill -t firefox.exe",
        workdir="C:\\Utilities")
winxpFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="winxp")
winxpFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="winxp")
winxpFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='winxp',
        logDir='..\\logs\\',
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(MozillaClobberWin,
        workdir='.',
        slaveName="slave",
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT,
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(FileDownload, mastersrc="mozconfig-winxp", 
        slavedest=".mozconfig", 
        workdir="mozilla")
winxpFactory.addStep(step.ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla",
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(step.Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla',
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(step.Compile, 
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla',
        timeout=60*40,
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(MozillaCheck, warnOnWarnings=True, 
        workdir="mozilla/objdir",
        timeout=60*40,
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(CreateProfileWin,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['vc8'],
        clobber=True)
winxpFactory.addStep(MozillaWin32Reftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(MozillaWin32Mochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['vc8'])
# winxpFactory.addStep(MozillaWin32Mochichrome, warnOnWarnings=True,
#        workdir="mozilla/objdir/_tests/testing/mochitest",
#        env=MozillaEnvironments['vc8'])
winxpFactory.addStep(MozillaWin32BrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['vc8'])

#firefox_trunk_winxp_builder = {
#    'name': "WINNT 5.1 qm-winxp01 dep unit test",
#    'slavenames': ['win-vc8'],
#    'builddir': "trunk",
#    'factory': winxpFactory,
#    'category': "Firefox",
#}
#
#builders.append(firefox_trunk_winxp_builder)

##
## Win2k3
##

win2k3Factory = factory.BuildFactory()

win2k3Factory.addStep(TinderboxShellCommand, name="kill sh",
        description='kill sh',
        descriptionDone="killed sh",
        command="pskill -t sh.exe",
        workdir="C:\\Utilities")
win2k3Factory.addStep(TinderboxShellCommand, name="kill make",
        description='kill make',
        descriptionDone="killed make",
        command="pskill -t make.exe",
        workdir="C:\\Utilities")
win2k3Factory.addStep(TinderboxShellCommand, name="kill firefox",
        description='kill firefox',
        descriptionDone="killed firefox",
        command="pskill -t firefox.exe",
        workdir="C:\\Utilities")
win2k3Factory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="win2k3")
win2k3Factory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="win2k3")
win2k3Factory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='win2k3',
        logDir='..\\logs\\',
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaClobberWin,
        workdir='.',
        platform="2k3",
        slaveName="slave",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT,
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(FileDownload, mastersrc="mozconfig-win2k3", 
        slavedest=".mozconfig", 
        workdir="mozilla")
win2k3Factory.addStep(step.ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(step.Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla',
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(step.Compile, 
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla',
        timeout=60*40,
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaCheck, warnOnWarnings=True, 
        workdir="mozilla/objdir",
        timeout=60*40,
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(CreateProfileWin,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['mozbuild'],
        clobber=True)
win2k3Factory.addStep(MozillaWin32Reftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaWin32Mochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        command='perl runtests.pl --appname=../../../dist/bin/firefox.exe --autorun --console-level=INFO --close-when-done',
        env=MozillaEnvironments['mozbuild'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
win2k3Factory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaWin32BrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild'])

firefox_trunk_win2k3_builder = {
    'name': "WINNT 5.2 qm-win2k3-01 dep unit test",
    'slavenames': ['win-2k3'],
    'builddir': "trunk_2k3",
    'factory': win2k3Factory,
    'category': "Firefox",
}

firefox_trunk_win2k3_2_builder = {
    'name': "WINNT 5.2 qm-win2k3-02 dep unit test",
    'slavenames': ['win-2k3-2'],
    'builddir': "trunk_2k3_2",
    'factory': win2k3Factory,
    'category': "Firefox",
}

firefox_trunk_win2k3_3_builder = {
    'name': "WINNT 5.2 qm-win2k3-03 dep unit test",
    'slavenames': ['win-2k3-3'],
    'builddir': "trunk_2k3_3",
    'factory': win2k3Factory,
    'category': "Firefox",
}

builders.append(firefox_trunk_win2k3_builder)
builders.append(firefox_trunk_win2k3_2_builder)
builders.append(firefox_trunk_win2k3_3_builder)

## Additional PGO win2k3 box

win2k3PGOFactory = factory.BuildFactory()
 
win2k3PGOFactory.addStep(TinderboxShellCommand, name="kill sh",
        description='kill sh',
        descriptionDone="killed sh",
         command="pskill -t sh.exe",
        workdir="C:\\Utilities")
win2k3PGOFactory.addStep(TinderboxShellCommand, name="kill make",
        description='kill make',
        descriptionDone="killed make",
        command="pskill -t make.exe",
        workdir="C:\\Utilities")
win2k3PGOFactory.addStep(TinderboxShellCommand, name="kill firefox",
        description='kill firefox',
        descriptionDone="killed firefox",
        command="pskill -t firefox.exe",
        workdir="C:\\Utilities")
win2k3PGOFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="win2k3")
win2k3PGOFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="win2k3")
win2k3PGOFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='win2k3',
        logDir='..\\logs\\',
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaClobberWin,
        workdir='.',
        platform="2k3",
        slaveName="slave",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT,
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(FileDownload, mastersrc="mozconfig-win2k3-pgo", 
        slavedest=".mozconfig", 
        workdir="mozilla")
win2k3PGOFactory.addStep(step.ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(step.Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla',
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(step.Compile, 
        command=["make", "-f", "client.mk", "profiledbuild"], 
        workdir='mozilla',
        timeout=60*60*3, # 60 Seconds * 60 Minutes * 3 Hours
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaCheck, warnOnWarnings=True, 
        workdir="mozilla/objdir",
        timeout=60*40,
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(CreateProfileWin,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['mozbuild_pgo'],
        clobber=True)
win2k3PGOFactory.addStep(MozillaWin32Reftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaWin32Mochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        command='perl runtests.pl --appname=../../../dist/bin/firefox.exe --autorun --console-level=INFO --close-when-done',
        env=MozillaEnvironments['mozbuild_pgo'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
win2k3PGOFactory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaWin32BrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild_pgo'])    
        
firefox_trunk_win2k3_pgo_builder = {
   'name': "WINNT 5.2 qm-win2k3-pgo01 dep unit test",
   'slavenames': ['qm-win2k3-pgo01'],
   'builddir': "trunk_2k3_pgo",
   'factory': win2k3PGOFactory,
   'category': "Firefox",
}

builders.append(firefox_trunk_win2k3_pgo_builder)

# firefox_trunk_winxp_dbg_builder = {
#    'name': "winxp test",
#    'slavenames': ['win-vc8-dbg'],
#    'builddir': "trunk",
#    'factory': factory.BuildFactory(firefox_trunk_winxp_vc8_steps),
#    'category': "Firefox",
#}
#
#builders.append(firefox_trunk_winxp_dbg_builder)

c['builders'] = builders
