# This is the buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

import os.path
# from buildbot.changes.freshcvs import FreshCVSSource
from buildbot.scheduler import Scheduler, Periodic
from buildbot.process import factory
from buildbot.status import html
from buildbot.steps.transfer import FileDownload
from buildbot.steps.shell import Compile, ShellCommand
s = factory.s

import mozbuild
reload(mozbuild)
from mozbuild import *

CVSROOT = ":ext:ffxbld@cvs.mozilla.org:/cvsroot"

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

##
## Misc Config
##

c['debugPassword'] = "painandsuffering"
# c['manhole'] = Manhole(9455, "buildbot", "mankey")
c['projectName'] = "Mozilla1.9 - Unittest"
c['projectURL'] = "http://wiki.mozilla.org/Mozilla1.9_Unittest"
c['buildbotURL'] = "http://localhost:8010/"
c['slavePortnum'] = 9989

##
## Slaves
##

from buildbot.buildslave import BuildSlave

c['slaves'] = [BuildSlave("fx-linux-1.9-slave07", "swordfish"),
               BuildSlave("fx-linux-1.9-slave08", "swordfish"),
               BuildSlave("fx-linux-1.9-slave09", "swordfish"),
               BuildSlave("bm-xserve20", "swordfish"),
               BuildSlave("bm-xserve21", "swordfish"),
               BuildSlave("fx-win32-1.9-slave09", "swordfish"),
               BuildSlave("fx-win32-1.9-slave07", "swordfish"),
               BuildSlave("fx-win32-1.9-slave08", "swordfish")]

##
## Status
##

c['status'] = []
c['status'].append(html.Waterfall(http_port=2005, allowForce=True))

from buildbot.status import tinderbox

c['status'].append(tinderbox.TinderboxMailNotifier(
                   fromaddr="lblakk@mozilla.com",
                   tree="Firefox3.0",
                   extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org", "lblakk@mozilla.com"],
                   relayhost="smtp.mozilla.org",
                   logCompression="bzip2",
                   errorparser="unittest"))

##
## Sources
##

from buildbot.changes import bonsaipoller

c['change_source'] = []
c['change_source'].append(bonsaipoller.BonsaiPoller(
                    bonsaiURL = "http://bonsai.mozilla.org",
                    module = "PhoenixTinderbox",
                    branch = "HEAD",
                    pollInterval = 1 * 60))

##
## Schedulers
##

c['schedulers'] = []
c['schedulers'].append(Scheduler(name="bonsai build scheduler",
                                 branch="HEAD",
                                 treeStableTimer=5*60,
                                 builderNames=[
                                               "WINNT 5.2 fx-win32-1.9-slave09 (pgo01) dep unit test",
                                               "WINNT 5.2 fx-win32-1.9-slave10 dep unit test",
                                               "WINNT 5.2 fx-win32-1.9-slave11 dep unit test",
                                               "Linux fx-linux-1.9-slave07 dep unit test",
                                               "Linux fx-linux-1.9-slave08 dep unit test",
                                               "Linux fx-linux-1.9-slave09 dep unit test",
                                               "MacOSX Darwin 8.11.1 bm-xserve20 dep unit test",
                                               "MacOSX Darwin 8.11.1 bm-xserve21 dep unit test"
                                               ]))

c['schedulers'].append(Periodic(name="9 hour build scheduler",
                                builderNames=[
                                               "WINNT 5.2 fx-win32-1.9-slave09 (pgo01) dep unit test",
                                               "WINNT 5.2 fx-win32-1.9-slave10 dep unit test",
                                               "WINNT 5.2 fx-win32-1.9-slave11 dep unit test",
                                               "Linux fx-linux-1.9-slave07 dep unit test",
                                               "Linux fx-linux-1.9-slave08 dep unit test",
                                               "Linux fx-linux-1.9-slave09 dep unit test",
                                               "MacOSX Darwin 8.11.1 bm-xserve20 dep unit test",
                                               "MacOSX Darwin 8.11.1 bm-xserve21 dep unit test"
                                             ],
                                periodicBuildTimer=9*60*60))

# c['schedulers'].append(Periodic("6 hour win build", ["winxp test"], 6*60*60))
# c['schedulers'].append(Periodic("6 hour linux build", ["linref test"], 6*60*60))
# c['schedulers'].append(Periodic("30 minute build cycler",
#                                 ["MacOSX Darwin 8.11.1 qm-xserve01 dep unit test"],
#                                 30*60))

# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds

builders = []

# linux

centosFactory = factory.BuildFactory()

centosFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="linux")
centosFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="linux")
centosFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='linux')
centosFactory.addStep(MozillaClobber,
        platform="linux",
        workdir='.',
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT)
centosFactory.addStep(FileDownload, mastersrc="mozconfig-places", 
        slavedest=".mozconfig", 
        workdir="mozilla")
centosFactory.addStep(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla")
centosFactory.addStep(Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla')
centosFactory.addStep(Compile,
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla')
centosFactory.addStep(MozillaCheck,
        warnOnWarnings=True,
        timeout=60*5,
        workdir="mozilla/objdir")
centosFactory.addStep(CreateProfile,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['centos'],
        clobber=True)
centosFactory.addStep(MozillaUnixReftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaUnixCrashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['centos'])
centosFactory.addStep(MozillaA11YTest, warnOnWarnings=True,
		workdir="mozilla/objdir/_tests/testing/mochitest",
		env=MozillaEnvironments['centos'])

firefox_trunk_centos5_builder = {
    'name': "Linux fx-linux-1.9-slave07 dep unit test",
    'slavenames': ['fx-linux-1.9-slave07'],
    'builddir': "trunk_centos5_7",
    'factory': centosFactory,
    'category': "Firefox"}

firefox_trunk_centos5_2_builder = {
    'name': "Linux fx-linux-1.9-slave08 dep unit test",
    'slavenames': ['fx-linux-1.9-slave08'],
    'builddir': "trunk_centos5_8",
    'factory': centosFactory,
    'category': "Firefox"}

firefox_trunk_centos5_3_builder = {
    'name': "Linux fx-linux-1.9-slave09 dep unit test",
    'slavenames': ['fx-linux-1.9-slave09'],
    'builddir': "trunk_centos5_9",
    'factory': centosFactory,
    'category': "Firefox"}

builders.append(firefox_trunk_centos5_builder)
builders.append(firefox_trunk_centos5_2_builder)
builders.append(firefox_trunk_centos5_3_builder)

##
## Mac OS X
##

osxFactory = factory.BuildFactory()

osxFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="macosx")
osxFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="macosx")
osxFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='macosx',
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaClobber,
        workdir='.',
        platform="macosx",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        env=MozillaEnvironments['osx'],
        cvsroot=CVSROOT),
osxFactory.addStep(FileDownload, mastersrc="mozconfig-osx", 
        slavedest=".mozconfig", 
        workdir="mozilla")
osxFactory.addStep(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla")
osxFactory.addStep(Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla')
osxFactory.addStep(Compile,
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla')
osxFactory.addStep(MozillaCheck,
        warnOnWarnings=True,
        timeout=60*5,
        workdir="mozilla/objdir")
osxFactory.addStep(CreateProfile,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['osx'],
        clobber=True)
osxFactory.addStep(MozillaOSXReftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaOSXCrashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])
osxFactory.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['osx'])

firefox_trunk_osx_builder = {
    'name': "MacOSX Darwin 8.11.1 bm-xserve20 dep unit test",
    'slavenames': ['bm-xserve20'],
    'builddir': "trunk_osx_20",
    'factory': osxFactory,
    'category': "Firefox"}

firefox_trunk_osx_builder2 = {
    'name': "MacOSX Darwin 8.11.1 bm-xserve21 dep unit test",
    'slavenames': ['bm-xserve21'],
    'builddir': "trunk_osx_21",
    'factory': osxFactory,
    'category': "Firefox"}


builders.append(firefox_trunk_osx_builder)
builders.append(firefox_trunk_osx_builder2)

##
## Win2k3 -- for the DL360s
##

win2k3FactoryHw = factory.BuildFactory()

win2k3FactoryHw.addStep(TinderboxShellCommand, name="kill sh",
        description='kill sh',
        descriptionDone="killed sh",
        command="pskill -t sh.exe",
        workdir="C:\\Utilities")
win2k3FactoryHw.addStep(TinderboxShellCommand, name="kill make",
        description='kill make',
        descriptionDone="killed make",
        command="pskill -t make.exe",
        workdir="C:\\Utilities")
win2k3FactoryHw.addStep(TinderboxShellCommand, name="kill firefox",
        description='kill firefox',
        descriptionDone="killed firefox",
        command="pskill -t firefox.exe",
        workdir="C:\\Utilities")
win2k3FactoryHw.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="win2k3")
win2k3FactoryHw.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="win2k3")
win2k3FactoryHw.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='win2k3',
        logDir='..\\logs\\',
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaClobberWin,
        workdir='.',
        platform="2k3",
        slaveName="slave",
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT,
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(FileDownload, mastersrc="mozconfig-win2k3", 
        slavedest=".mozconfig", 
        workdir="mozilla")
win2k3FactoryHw.addStep(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla",
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla',
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(Compile, 
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla',
        timeout=60*60,
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaCheck, warnOnWarnings=True, 
        workdir="mozilla/objdir",
        timeout=60*5,
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(CreateProfileWin,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['mozbuild2'],
        clobber=True)
win2k3FactoryHw.addStep(MozillaWin32Reftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        command='perl runtests.pl --appname=../../../dist/bin/firefox.exe --autorun --console-level=INFO --close-when-done',
        env=MozillaEnvironments['mozbuild2'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
win2k3FactoryHw.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild2'])
win2k3FactoryHw.addStep(MozillaA11YTest, warnOnWarnings=True,
		workdir="mozilla/objdir/_tests/testing/mochitest",
		env=MozillaEnvironments['mozbuild2'])

#firefox_trunk_win2k3_hw_builder = {
#    'name': "WINNT 5.2 fx-win32-1.9-slave10 dep unit test",
#    'slavenames': ['fx-win32-1.9-slave10'],
#    'builddir': "trunk_2k3_10",
#    'factory': win2k3FactoryHw,
#    'category': "Firefox",
#}
#
#firefox_trunk_win2k3_hw2_builder = {
#    'name': "WINNT 5.2 fx-win32-1.9-slave11 dep unit test",
#    'slavenames': ['fx-win32-1.9-slave11'],
#    'builddir': "trunk_2k3_11",
#    'factory': win2k3FactoryHw,
#    'category': "Firefox",
#}

#builders.append(firefox_trunk_win2k3_hw_builder)
#builders.append(firefox_trunk_win2k3_hw2_builder)

##
## Win2k3
##

win2k3Factory = factory.BuildFactory()

win2k3Factory.addStep(TinderboxShellCommand, name="kill sh",
        description='kill sh',
        descriptionDone="killed sh",
        command="pskill -t sh.exe",
        workdir="C:\\Utilities")
win2k3Factory.addStep(TinderboxShellCommand, name="kill make",
        description='kill make',
        descriptionDone="killed make",
        command="pskill -t make.exe",
        workdir="C:\\Utilities")
win2k3Factory.addStep(TinderboxShellCommand, name="kill firefox",
        description='kill firefox',
        descriptionDone="killed firefox",
        command="pskill -t firefox.exe",
        workdir="C:\\Utilities")
win2k3Factory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="win2k3")
win2k3Factory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="win2k3")
win2k3Factory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='win2k3',
        logDir='..\\logs\\',
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaClobberWin,
        workdir='.',
        platform="2k3",
        slaveName="slave",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT,
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(FileDownload, mastersrc="mozconfig-win2k3", 
        slavedest=".mozconfig", 
        workdir="mozilla")
win2k3Factory.addStep(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla',
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(Compile, 
        command=["make", "-f", "client.mk", "build"], 
        workdir='mozilla',
        timeout=60*60,
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaCheck, warnOnWarnings=True, 
        workdir="mozilla/objdir",
        timeout=60*5,
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(CreateProfileWin,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['mozbuild'],
        clobber=True)
win2k3Factory.addStep(MozillaWin32Reftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        command='perl runtests.pl --appname=../../../dist/bin/firefox.exe --autorun --console-level=INFO --close-when-done',
        env=MozillaEnvironments['mozbuild'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
win2k3Factory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild'])
win2k3Factory.addStep(MozillaA11YTest, warnOnWarnings=True,
		workdir="mozilla/objdir/_tests/testing/mochitest",
		env=MozillaEnvironments['mozbuild'])

 firefox_trunk_win2k3_builder = {
    'name': "WINNT 5.2 fx-win32-1.9-slave07 dep unit test",
    'slavenames': ['fx-win32-1.9-slave07'],
    'builddir': "trunk_2k3_7",
    'factory': win2k3Factory,
    'category': "Firefox",
}

firefox_trunk_win2k3_2_builder = {
    'name': "WINNT 5.2 fx-win32-1.9-slave08 dep unit test",
    'slavenames': ['fx-win32-1.9-slave08'],
    'builddir': "trunk_2k3_8",
    'factory': win2k3Factory,
    'category': "Firefox",
}

builders.append(firefox_trunk_win2k3_builder)
builders.append(firefox_trunk_win2k3_2_builder)

## Additional PGO win2k3 box

win2k3PGOFactory = factory.BuildFactory()
 
win2k3PGOFactory.addStep(TinderboxShellCommand, name="kill sh",
        description='kill sh',
        descriptionDone="killed sh",
         command="pskill -t sh.exe",
        workdir="C:\\Utilities")
win2k3PGOFactory.addStep(TinderboxShellCommand, name="kill make",
        description='kill make',
        descriptionDone="killed make",
        command="pskill -t make.exe",
        workdir="C:\\Utilities")
win2k3PGOFactory.addStep(TinderboxShellCommand, name="kill firefox",
        description='kill firefox',
        descriptionDone="killed firefox",
        command="pskill -t firefox.exe",
        workdir="C:\\Utilities")
win2k3PGOFactory.addStep(CreateDir,
        description=["creating logs/ dir"],
        descriptionDone=["created logs/ dir"],
        workdir='.',
        dir='logs',
        platform="win2k3")
win2k3PGOFactory.addStep(CreateDir,
        description=["creating clobber_files/ dir"],
        descriptionDone=["created clobber_files/ dir"],
        workdir='.',
        dir='clobber_files',
        platform="win2k3")
win2k3PGOFactory.addStep(UpdateClobberFiles,
        cvsroot=CVSROOT,
        workdir='.',
        platform='win2k3',
        logDir='..\\logs\\',
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaClobberWin,
        workdir='.',
        platform="2k3",
        slaveName="slave",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaCheckoutClientMk,
        workdir=".",
        cvsroot=CVSROOT,
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(FileDownload, mastersrc="mozconfig-win2k3-pgo", 
        slavedest=".mozconfig", 
        workdir="mozilla")
win2k3PGOFactory.addStep(ShellCommand, name="mozconfig contents",
        command=["cat",".mozconfig"],
        workdir="mozilla",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(Compile, name="checkout", 
        description=["checking out"], 
        descriptionDone = ["checkout"], 
        command=["make","-f","client.mk","checkout"], 
        workdir='mozilla',
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(Compile, 
        command=["make", "-f", "client.mk", "profiledbuild"], 
        workdir='mozilla',
        timeout=60*60,
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaCheck, warnOnWarnings=True, 
        workdir="mozilla/objdir",
        timeout=60*5,
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(CreateProfileWin,
        warnOnWarnings=True,
        workdir=".",
        env=MozillaEnvironments['mozbuild_pgo'],
        clobber=True)
win2k3PGOFactory.addStep(MozillaWin32Reftest, warnOnWarnings=True,
        workdir="mozilla/layout/reftests",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaWin32Crashtest, warnOnWarnings=True,
        workdir="mozilla/testing/crashtest",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaMochitest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        command='perl runtests.pl --appname=../../../dist/bin/firefox.exe --autorun --console-level=INFO --close-when-done',
        env=MozillaEnvironments['mozbuild_pgo'])
# Can use the regular build step here. Perl likes the PATHs that way anyway.
win2k3PGOFactory.addStep(MozillaMochichrome, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild_pgo'])
win2k3PGOFactory.addStep(MozillaBrowserChromeTest, warnOnWarnings=True,
        workdir="mozilla/objdir/_tests/testing/mochitest",
        env=MozillaEnvironments['mozbuild_pgo'])  
win2k3PGOFactory.addStep(MozillaA11YTest, warnOnWarnings=True,
		workdir="mozilla/objdir/_tests/testing/mochitest",
		env=MozillaEnvironments['mozbuild_pgo'])
        
        
firefox_trunk_win2k3_pgo_builder = {
   'name': "WINNT 5.2 fx-win32-1.9-slave09 (pgo01) dep unit test",
   'slavenames': ['fx-win32-1.9-slave09'],
   'builddir': "trunk_2k3_pgo",
   'factory': win2k3PGOFactory,
   'category': "Firefox",
}

builders.append(firefox_trunk_win2k3_pgo_builder)

c['builders'] = builders
