# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory (although the filename
# can be changed with the --basedir option to 'mktap buildbot master').

# It has one job: define a dictionary named BuildmasterConfig. This
# dictionary has a variety of keys to control different aspects of the
# buildmaster. They are documented in docs/config.xhtml .

import os.path
# from buildbot.changes.freshcvs import FreshCVSSource
from buildbot.scheduler import Scheduler, Periodic
from buildbot.process import step, factory
from buildbot.status import html
from buildbot import locks
from buildbot.steps.transfer import FileDownload
from buildbot.steps.shell import ShellCommand

# from auth import authlist, debugPassword

s = factory.s

import perfrunner
reload(perfrunner)
from perfrunner import *

###
### Tinderbox builder names and build directories
###
WIN32_TRUNK_BUILDER="WINNT 5.2 fxnewref-win32- Depend Nightly"
WIN32_TRUNK_BUILDDIR="http://stage.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/FXNEWREF-WIN32--trunk/"
WIN32_BRANCH_BUILDER="WINNT 5.2 pacifica-vm Depend Fx-Nightly"
WIN32_BRANCH_BUILDDIR="http://stage.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/pacifica-vm-mozilla1.8/"
LINUX_TRUNK_BUILDER="Linux fxnewref-linux-tbox Depend Nightly"
LINUX_TRUNK_BUILDDIR="http://stage.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/fxnewref-linux-tbox-trunk/"
LINUX_BRANCH_BUILDER="Linux prometheus-vm Depend Fx-Nightly"
LINUX_BRANCH_BUILDDIR="http://stage.mozilla.org/pub/mozilla.org/firefox/tinderbox-builds/prometheus-vm-mozilla1.8/"


# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

##
## Misc Config
##

c['debugPassword'] = "mozilla"
#c['manhole'] = Manhole(9999, "admin", "password")
c['projectName'] = "Talos"
c['projectURL'] = "http://quality.mozilla.org/en/projects/automation/talos"
c['buildbotURL'] = "http://qm-buildbot01.mozilla.org:2004"
c['slavePortnum'] = 9988

##
## Slaves
##

c['bots'] = [("qm-pxp01", "1dontcare"),
             ("qm-pxp02", "1dontcare"),
             ("qm-pxp03", "1dontcare"),
             ("qm-pxp04", "1dontcare"),
             ("qm-pxp05", "1dontcare"),
             ("qm-mini-xp01", "w1nd3rs"),
             ("qm-mini-xp02", "w1nd3rs"),
             ("qm-mini-xp03", "w1nd3rs"),
             ("qm-pmac01", "mac1nt0sh"),
             ("qm-pmac02", "mac1nt0sh"),
             ("qm-pmac03", "mac1nt0sh"),
             ("qm-pmac04", "mac1nt0sh"),
             ("qm-mini-ubuntu01", "l1nux"),
             ("qm-mini-ubuntu02", "l1nux"),
             ("qm-mini-ubuntu03", "l1nux")]

##
## Status
##

c['status'] = []
c['status'].append(html.Waterfall(http_port=2004,
           css="/build/ben-staging/waterfall.css"))

from buildbot.status import tinderbox

c['status'].append(tinderbox.TinderboxMailNotifier(
                       fromaddr="rcampbell@mozilla.com",
                       tree="Firefox",
                       extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org", 
                            "rcampbell@mozilla.com",
                            "anodelman@mozilla.com"],
                       relayhost="smtp.mozilla.org",
                       builders=["WINNT 5.1 talos qm-pxp01,3 trunk",
                                 "Linux talos qm-mini-ubuntu03 trunk"],
                       logCompression="bzip2"))

c['status'].append(tinderbox.TinderboxMailNotifier(
                       fromaddr="rcampbell@mozilla.com",
                       tree="Mozilla1.8",
                       extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org", 
                            "rcampbell@mozilla.com",
                            "anodelman@mozilla.com"],
                       relayhost="smtp.mozilla.org",
                       builders=["WINNT 5.1 talos qm-pxp02,4 branch",
                                 "Linux talos qm-mini-ubuntu01 branch"],
                       logCompression="bzip2"))

c['status'].append(tinderbox.TinderboxMailNotifier(
                       fromaddr="rcampbell@mozilla.com",
                       tree="MozillaTest",
                       extraRecipients=["tinderbox-daemon@tinderbox.mozilla.org", 
                            "rcampbell@mozilla.com",
                            "anodelman@mozilla.com"],
                       relayhost="smtp.mozilla.org",
                       builders=["WINNT 5.1 talos qm-mini-xp03 branch",
                                 "WINNT 5.1 talos qm-mini-xp02 trunk"],
                       logCompression="bzip2"))



##
## Sources
##

from tinderboxpoller import TinderboxPoller

c['sources'] = []

c['sources'].append(TinderboxPoller(
    tinderboxURL = "http://tinderbox.mozilla.org",
    tree = "Mozilla1.8",
    branch = "BRANCH_1_8",
    machine = WIN32_BRANCH_BUILDER,
    pollInterval = 10 * 60)
)

c['sources'].append(TinderboxPoller(
    tinderboxURL = "http://tinderbox.mozilla.org",
    tree = "Firefox",
    branch = "HEAD",
    machine = WIN32_TRUNK_BUILDER,
    pollInterval = 10 * 60)
)

c['sources'].append(TinderboxPoller(
    tinderboxURL = "http://tinderbox.mozilla.org",
    tree = "Firefox",
    branch = "HEAD_LINUX",
    machine = LINUX_TRUNK_BUILDER,
    pollInterval = 10 * 60)
)

c['sources'].append(TinderboxPoller(
    tinderboxURL = "http://tinderbox.mozilla.org",
    tree = "Mozilla1.8",
    branch = "BRANCH_LINUX",
    machine = LINUX_BRANCH_BUILDER,
    pollInterval = 10 * 60)
)

##
## Schedulers
##

c['schedulers'] = []

c['schedulers'].append(Scheduler(name="branch perfrun scheduler",
                                 branch="BRANCH_1_8",
                                 treeStableTimer=5*60,
                                 builderNames=["WINNT 5.1 talos qm-pxp02,4 branch",
                                               "WINNT 5.1 talos qm-mini-xp03 branch"]
))

c['schedulers'].append(Scheduler(name="head perfrun scheduler",
                                 branch="HEAD",
                                 treeStableTimer=5*60,
                                 builderNames=["WINNT 5.1 talos qm-pxp01,3 trunk",
                                               "WINNT 5.1 talos qm-mini-xp02 trunk"])
)

c['schedulers'].append(Scheduler(name="head perfrun linux scheduler",
                                 branch="HEAD_LINUX",
                                 treeStableTimer=5*60,
                                 builderNames=
                                     ["Linux talos qm-mini-ubuntu03 trunk"])
)

c['schedulers'].append(Scheduler(name="branch perfrun linux scheduler",
                                 branch="BRANCH_LINUX",
                                 treeStableTimer=5*60,
                                 builderNames=
                                     ["Linux talos qm-mini-ubuntu01 branch"])
)


# the 'builders' list defines the Builders. Each one is configured with a
# dictionary, using the following keys:
#  name (required): the name used to describe this bilder
#  slavename (required): which slave to use, must appear in c['bots']
#  builddir (required): which subdirectory to run the builder in
#  factory (required): a BuildFactory to define how the build is run
#  periodicBuildTime (optional): if set, force a build every N seconds

firefox_branch_winxp_factory = factory.BuildFactory()
firefox_branch_winxp_factory.addStep(FileDownload,
                            mastersrc="configs/config-win32-pxp.py",
                            slavedest="config.py",
                            workdir="talos/")
firefox_branch_winxp_factory.addStep(FileDownload,
                            mastersrc="configs/sample.config.win32",
                            slavedest="sample.config",
                            workdir="talos/")
firefox_branch_winxp_factory.addStep(MozillaWgetLatest,
                            workdir=".",
                            branch = "1.8",
                            url=WIN32_BRANCH_BUILDDIR,
                            filenameSearchString="en-US.win32.zip",
                            haltOnFailure=True,
                            env=MozillaEnvironments['vc8perf'])
firefox_branch_winxp_factory.addStep(MozillaInstallZip,
                            workdir=".",
                            branch="1.8",
                            haltOnFailure=True,
                            env=MozillaEnvironments['vc8perf'])
firefox_branch_winxp_factory.addStep(MozillaUpdateConfig,
                            workdir="talos/",
                            branch="1.8",
                            haltOnFailure=True,
                            executablePath="c:\\slave\\branch18\\firefox\\firefox.exe",
                            configPath=".",
                            env=MozillaEnvironments['vc8perf'])
firefox_branch_winxp_factory.addStep(MozillaRunPerfTests,
                            workdir="talos/",
                            branch="1.8",
                            timeout=6000,
                            haltOnFailure=True,
                            env=MozillaEnvironments['vc8perf'])
firefox_branch_winxp_factory.addStep(ShellCommand,
                            workdir=".",
                            description="Remove download, firefox",
                            command="del /Q *.zip; del C:\\mozilla\\testing\\performance\\talos\\*.yml; rmdir /S /Q ..\\firefox",
                            env=MozillaEnvironments['vc8perf'])

firefox_trunk_winxp_perf_steps = factory.BuildFactory()
firefox_trunk_winxp_perf_steps.addStep(FileDownload,
                            mastersrc="configs/config-win32-pxp.py",
                            slavedest="config.py",
                            workdir="talos/")
firefox_trunk_winxp_perf_steps.addStep(FileDownload,
                            mastersrc="configs/sample.config.win32",
                            slavedest="sample.config",
                            workdir="talos/")
firefox_trunk_winxp_perf_steps.addStep(MozillaWgetLatest,
                            workdir=".",
                            branch="1.9",
                            url=WIN32_TRUNK_BUILDDIR,
                            filenameSearchString="en-US.win32.zip",
                            haltOnFailure=True,
                            env=MozillaEnvironments['vc8perf'])
firefox_trunk_winxp_perf_steps.addStep(MozillaInstallZip,
                            workdir=".",
                            branch="1.9",
                            haltOnFailure=True,
                            env=MozillaEnvironments['vc8perf'])
firefox_trunk_winxp_perf_steps.addStep(ShellCommand,
                            workdir="firefox/",
                            description="Chmod files in the zip to work around MSYS bug",
                            command=["chmod", "-v", "-R", "a+x", "."],
                            env=MozillaEnvironments['vc8perf'])
firefox_trunk_winxp_perf_steps.addStep(MozillaUpdateConfig,
                            workdir="talos/",
                            branch="1.9",
                            haltOnFailure=True,
                            executablePath="c:\\slave\\trunk19\\firefox\\firefox.exe",
                            configPath=".",
                            env=MozillaEnvironments['vc8perf'])
firefox_trunk_winxp_perf_steps.addStep(MozillaRunPerfTests,
                            workdir="talos/",
                            branch="1.9",
                            timeout=6000,
                            haltOnFailure=True,
                            env=MozillaEnvironments['vc8perf'])
firefox_trunk_winxp_perf_steps.addStep(ShellCommand,
                            workdir=".",
                            description="Remove download, firefox",
                            command="del /S /Q *.zip; del /S /Q talos\*.yml; rmdir /S /Q ..\\firefox",
                            env=MozillaEnvironments['vc8perf'])

win32_trunk_mini_steps = [
    s(MozillaChangePusher),
    s(ShellCommand,        workdir=".",
                           description="Cleanup",
                           command=["del", "/Q", "*.zip;", "del",
                                    "talos\*.yml;", "rmdir", "/S", "/Q",
                                    "firefox"],
                           env=MozillaEnvironments['vc8perf']),
    s(FileDownload,        mastersrc="configs/config-new-pl.py",
                           slavedest="config.py",
                           workdir="talos/"),
    s(FileDownload,        mastersrc="configs/sample.config.newpl.win32",
                           slavedest="sample.config",
                           workdir="talos/"),
    s(MozillaWgetLatest,   workdir=".",
                           branch="1.9",
                           url=WIN32_TRUNK_BUILDDIR,
                           filenameSearchString="en-US.win32.zip",
                           env=MozillaEnvironments['vc8perf']),
    s(MozillaInstallZip,   workdir=".",
                           branch="1.9",
                           haltOnFailure=True,
                           env=MozillaEnvironments['vc8perf']),
    # TODO: remove this when msys bug is fixed
    s(ShellCommand,        workdir="firefox/",
                           description="chmod files (see msys bug)",
                           command=["chmod", "-v", "-R", "a+x", "."],
                           env=MozillaEnvironments['vc8perf']),
    s(MozillaUpdateConfig, workdir="talos/",
                           branch="1.9",
                           haltOnFailure=True,
                           executablePath="c:\\talos-slave\\win32-trunk-mini\\firefox\\firefox.exe",
                           configPath=".",
                           env=MozillaEnvironments['vc8perf']),
    s(MozillaRunPerfTests, workdir="talos/",
                           branch="1.9",
                           timeout=6000,
                           haltOnFailure=True,
                           env=MozillaEnvironments['vc8perf']),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["del", "/Q", "*.zip;", "del", "talos\*.yml;",
                             "rmdir", "/S", "/Q", "firefox"],
                    env=MozillaEnvironments['vc8perf']),
]

linux_trunk_steps = [
    s(MozillaChangePusher),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["rm", "-rf", "*.bz2", "talos/*.yml", "firefox/"],
                    env=MozillaEnvironments['linux']),
    s(FileDownload,        mastersrc="configs/config-linux.py",
                           slavedest="config.py",
                           workdir="talos/"),
    s(FileDownload,        mastersrc="configs/sample.config.linux",
                           slavedest="sample.config",
                           workdir="talos/"),
    s(MozillaWgetLatest,   workdir=".",
                           branch="LINUX-PL",
                           url=LINUX_TRUNK_BUILDDIR,
                           filenameSearchString="en-US.linux-i686.tar.bz2",
                           env=MozillaEnvironments['linux']),
    s(MozillaInstallTarBz2,workdir=".",
                           branch="LINUX-PL",
                           haltOnFailure=True,
                           env=MozillaEnvironments['linux']),
    s(MozillaUpdateConfig, workdir="talos/",
                           branch="1.9",
                           haltOnFailure=True,
                           # TODO: when talos supports relative paths on win32
                           # make this a relative path
                           executablePath="../firefox/firefox",
                           configPath=".",
                           env=MozillaEnvironments['linux']),
    s(MozillaRunPerfTests, workdir="talos/",
                           branch="LINUX-PL",
                           timeout=6000,
                           haltOnFailure=True,
                           env=MozillaEnvironments['linux']),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["rm", "-rf", "*.bz2", "talos/*.yml", "firefox/"],
                    env=MozillaEnvironments['linux']),
]


linux_branch_steps = [
    s(MozillaChangePusher),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["rm", "-rf", "*.bz2", "talos/*.yml", "firefox/"],
                    env=MozillaEnvironments['linux']),
    s(FileDownload,        mastersrc="configs/config-linux.py",
                           slavedest="config.py",
                           workdir="talos/"),
    s(FileDownload,        mastersrc="configs/sample.config.linux",
                           slavedest="sample.config",
                           workdir="talos/"),
    s(MozillaWgetLatest,   workdir=".",
                           branch="LINUX-PL",
                           url=LINUX_BRANCH_BUILDDIR,
                           filenameSearchString="en-US.linux-i686.tar.gz",
                           env=MozillaEnvironments['linux']),
    s(MozillaInstallTarGz, workdir=".",
                           branch="LINUX-PL",
                           haltOnFailure=True,
                           env=MozillaEnvironments['linux']),
    s(MozillaUpdateConfig, workdir="talos/",
                           branch="1.8",
                           haltOnFailure=True,
                           # TODO: when talos supports relative paths on win32
                           # make this a relative path
                           executablePath="../firefox/firefox",
                           configPath=".",
                           env=MozillaEnvironments['linux']),
    s(MozillaRunPerfTests, workdir="talos/",
                           branch="LINUX-PL",
                           timeout=6000,
                           haltOnFailure=True,
                           env=MozillaEnvironments['linux']),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["rm", "-rf", "*.bz2", "talos/*.yml", "firefox/"],
                    env=MozillaEnvironments['linux']),
]


win32_branch_steps = [
    s(MozillaChangePusher),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["del", "/Q", "*.zip;", "del", "talos\*.yml;",
                             "rmdir", "/S", "/Q", "firefox"],
                    env=MozillaEnvironments['vc8perf']),
    s(FileDownload,        mastersrc="configs/config-win32.py",
                           slavedest="config.py",
                           workdir="talos/"),
    s(FileDownload,        mastersrc="configs/sample.config.win32",
                           slavedest="sample.config",
                           workdir="talos/"),
    s(MozillaWgetLatest,   workdir=".",
                           branch="branch",
                           url=WIN32_BRANCH_BUILDDIR,
                           filenameSearchString="en-US.win32.zip",
                           env=MozillaEnvironments['vc8perf']),
    s(MozillaInstallZip,   workdir=".",
                           branch="branch",
                           haltOnFailure=True,
                           env=MozillaEnvironments['vc8perf']),
    # TODO: remove this when msys bug is fixed
    s(ShellCommand,        workdir="firefox/",
                           description="chmod files (see msys bug)",
                           command=["chmod", "-v", "-R", "a+x", "."],
                           env=MozillaEnvironments['vc8perf']),
    s(MozillaUpdateConfig, workdir="talos/",
                           branch="1.8",
                           haltOnFailure=True,
                           # TODO: when talos supports relative paths on win32
                           # make this a relative path
                           executablePath="c:\\talos-slave\\win32-branch\\firefox\\firefox.exe",
                           configPath=".",
                           env=MozillaEnvironments['vc8perf']),
    s(MozillaRunPerfTests, workdir="talos/",
                           branch="branch",
                           timeout=6000,
                           haltOnFailure=True,
                           env=MozillaEnvironments['vc8perf']),
    s(ShellCommand, workdir=".",
                    description="Cleanup",
                    command=["del", "/Q", "*.zip;", "del", "talos\*.yml;",
                             "rmdir", "/S", "/Q", "firefox"],
                    env=MozillaEnvironments['vc8perf']),
]

firefox_branch_winxp_perf_builder = {
    'name': "WINNT 5.1 talos qm-pxp02,4 branch",
    'slavenames': ['qm-pxp02', 'qm-pxp04'],
    'builddir': "branch18",
    'factory': firefox_branch_winxp_factory,
    'category': "Firefox BRANCH_1_8"
}

firefox_trunk_winxp_perf_builder = {
    'name': "WINNT 5.1 talos qm-pxp01,3 trunk",
    'slavenames': ['qm-pxp01', 'qm-pxp03'],
    'builddir': "trunk19",
    'factory': firefox_trunk_winxp_perf_steps,
    'category': "Firefox Trunk"
}

win32_trunk_mini_builder = {
    'name': "WINNT 5.1 talos qm-mini-xp02 trunk",
    'slavenames': ['qm-mini-xp02'],
    'builddir': "win32-trunk-mini",
    'factory': factory.BuildFactory(win32_trunk_mini_steps),
    'category': "Firefox Trunk"
}

linux_trunk_builder = {
    'name': "Linux talos qm-mini-ubuntu03 trunk",
    'slavenames': ['qm-mini-ubuntu03'],
    'builddir': "linux-trunk",
    'factory': factory.BuildFactory(linux_trunk_steps),
    'category': "Firefox Trunk"
}

linux_branch_builder = {
    'name': "Linux talos qm-mini-ubuntu01 branch",
    'slavenames': ['qm-mini-ubuntu01'],
    'builddir': "linux-branch",
    'factory': factory.BuildFactory(linux_branch_steps),
    'category': "Firefox BRANCH_1_8"
}

win32_branch_builder = {
    'name': "WINNT 5.1 talos qm-mini-xp03 branch",
    'slavenames': ['qm-mini-xp03'],
    'builddir': "win32-branch",
    'factory': factory.BuildFactory(win32_branch_steps),
    'category': "Firefox BRANCH_1_8"
}


c['builders'] = []

c['builders'].append(firefox_branch_winxp_perf_builder)
c['builders'].append(firefox_trunk_winxp_perf_builder)
c['builders'].append(win32_trunk_mini_builder)
c['builders'].append(linux_trunk_builder)
c['builders'].append(linux_branch_builder)
c['builders'].append(win32_branch_builder)
