/* 
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the mozilla.org LDAP XPCOM component.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are 
 * Copyright (C) 2000 Netscape Communications Corporation.  All
 * Rights Reserved.
 * 
 * Contributor(s): Dan Mosedale <dmose@mozilla.org>
 * 
 * Alternatively, the contents of this file may be used under the
 * terms of the GNU General Public License Version 2 or later (the
 * "GPL"), in which case the provisions of the GPL are applicable 
 * instead of those above.  If you wish to allow use of your 
 * version of this file only under the terms of the GPL and not to
 * allow others to use your version of this file under the MPL,
 * indicate your decision by deleting the provisions above and
 * replace them with the notice and other provisions required by
 * the GPL.  If you do not delete the provisions above, a recipient
 * may use your version of this file under either the MPL or the
 * GPL.
 */

#include "nsISupports.idl"
#include "nsILDAPMessage.idl"

// a callback interface to be implemented by any objects that want to 
// receive results from an nsILDAPOperation (ie nsILDAPMessages) as they
// come in.
//
[scriptable, uuid(dc721d4b-3ff2-4387-a80c-5e29545f774a)]
interface nsILDAPMessageListener : nsISupports
{
    // when ldap_result() returns, one of these routines is called, depending
    // on the return value

    // return value = LDAP_RES_SEARCH_ENTRY 
    // 
    void onLDAPSearchEntry(in nsILDAPMessage aMessage);

    // return value = LDAP_RES_SEARCH_REFERENCE
    //
    void onLDAPSearchReference(in nsILDAPMessage aMessage);

    // return value = LDAP_RES_SEARCH_RESULT
    //
    void onLDAPSearchResult(in nsILDAPMessage aMessage);

    // return value of -1
    //
    // XXX should have an arg?
    //
    void onLDAPError();

    // return value of 0
    //	
    void onLDAPTimeout();

    // XXX need to add other possible ldap_result return values 
};

