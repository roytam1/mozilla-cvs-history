/* 
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the mozilla.org LDAP XPCOM component.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are 
 * Copyright (C) 2000 Netscape Communications Corporation.  All
 * Rights Reserved.
 * 
 * Contributor(s): Dan Mosedale <dmose@mozilla.org>
 * 
 * Alternatively, the contents of this file may be used under the
 * terms of the GNU General Public License Version 2 or later (the
 * "GPL"), in which case the provisions of the GPL are applicable 
 * instead of those above.  If you wish to allow use of your 
 * version of this file only under the terms of the GPL and not to
 * allow others to use your version of this file under the MPL,
 * indicate your decision by deleting the provisions above and
 * replace them with the notice and other provisions required by
 * the GPL.  If you do not delete the provisions above, a recipient
 * may use your version of this file under either the MPL or the
 * GPL.
 */

#include "nsIURI.idl"

[scriptable, uuid(7310562d-1567-43c7-a123-633c1ba3663e)]
interface nsILDAPURL : nsIURI {

    /**
     * the distinguished name of the URL (ie the base DN for the search)
     *
     * XXXdmose NS_ERROR_NOT_INITIALIZED may become unneccessary once
     * it becomes possible to build up the URL by using the setters for its
     * constituent parts
     *
     * for the getter:
     *
     * @exception NS_ERROR_ILLEGAL_VALUE	null pointer passed in
     * @exception NS_ERROR_NOT_INITIALIZED	URL spec not set
     * @exception NS_ERROR_OUT_OF_MEMORY	ran out of memory
     */
    attribute string dn;

    /**
     * the LDAP attributes to return.  defaults to all attributes.
     *
     * XXXdmose - there should be a setter for this too
     */
    void getAttributes(out unsigned long count, 
		       [retval, array, size_is(count)] out string values);

    /**
     * the scope of the search.  defaults to NS_LDAP_SCOPE_BASE. 
     */
    attribute long scope;

    /**
     * search just the base object
     */
    const long NS_LDAP_SCOPE_BASE = 0;
    
    /** 
     * search only the children of the base object
     */
    const long NS_LDAP_SCOPE_ONELEVEL = 1;

    /**
     * search the entire subtree under and including the base object
     */
    const long NS_LDAP_SCOPE_SUBTREE = 2;

    /**
     * the search filter. "(objectClass=*)" is the default.
     */
    attribute string filter;

    /**
     * any options defined for this URL (check options using a bitwise and)
     */
    attribute unsigned long options;

    /**
     * if this is set, this is an ldaps: URL, not an ldap: URL
     */
    const unsigned long NS_LDAP_URL_OPT_SECURE = 0x01;

};
