/* 
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the mozilla.org LDAP XPCOM component.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are 
 * Copyright (C) 2000 Netscape Communications Corporation.  All
 * Rights Reserved.
 * 
 * Contributor(s): Dan Mosedale <dmose@mozilla.org>
 * 
 * Alternatively, the contents of this file may be used under the
 * terms of the GNU General Public License Version 2 or later (the
 * "GPL"), in which case the provisions of the GPL are applicable 
 * instead of those above.  If you wish to allow use of your 
 * version of this file only under the terms of the GPL and not to
 * allow others to use your version of this file under the MPL,
 * indicate your decision by deleting the provisions above and
 * replace them with the notice and other provisions required by
 * the GPL.  If you do not delete the provisions above, a recipient
 * may use your version of this file under either the MPL or the
 * GPL.
 */

#include "nsISupports.idl"
#include "nsILDAPConnection.idl"

interface nsILDAPMessage;

[scriptable, uuid(fd3d413b-14b0-49c4-8348-a4fc0edba9ff)]
interface nsILDAPOperation : nsISupports
{
    // the connection this operation is on.  this MUST be set before 
    // initiating any actual operations.
    //
    attribute nsILDAPConnection connection;
    
    // wrapper for ldap_simple_bind()
    //
    void simpleBind(in string binddn, in string passwd);

    // wrapper for ldap_search_url()
    //
    void urlSearch(in string url, in boolean attrsonly);

    // wrapper for ldap_result()
    // XXX - timeout currently ignored
    // XXX - should add consts for all param
    //
    long result(in long all, in PRTime timeout, out nsILDAPMessage message);
};
