DEPTH		= ../../../../..
NS_DEPTH	= ../../../..
MOD_DEPTH       = ../../../../../nsprpub
NSPR_TREE	= ../../../../../nsprpub
LDAP_SRC	= ../..
NSCP_DISTDIR	= ../../../../../dist

include		$(NSPR_TREE)/config/rules.mk
include		../../../build.mk

SRCS		= clientinit.c \
		  ldapsinit.c \
		  errormap.c

REALOBJS	= $(SRCS:.c=.o)

SSLOBJDEST	= $(OBJDIR_NAME)
OBJS		= $(addprefix $(SSLOBJDEST)/, $(REALOBJS))

HDIR		= $(LDAP_SRC)/include

LIBSSLDAP	= $(addprefix $(SSLOBJDEST)/, \
			lib$(SSLDAP_LIBNAME).$(DLL_SUFFIX))
INSTALLDIR      = $(DEPTH)/dist/$(OBJDIR_NAME)

LOCAL_INCLUDES  = -I$(PUBLIC)/nspr
INCLUDES	+= -I$(HDIR) -I$(INSTALLDIR)/include \
		   -I../../../../../dist/include \
		   -I../../../../../dist/public/security
DEFINES		+= $(DEFS)

PLATFORMCFLAGS	= -DUSE_WAITPID -DNEEDPROTOS
PLATFORMLIBS	=
THREADS		=
THREADSLIB	=

#
# shared library symbol export definitions
#
ifeq ($(USE_DLL_EXPORTS_FILE), 1)
ifeq ($(OS_ARCH), WINNT)
GENEXPORTS=cmd /c  $(PERL) $(LDAP_SRC)/build/genexports.pl
else
GENEXPORTS=$(PERL) $(LDAP_SRC)/build/genexports.pl
endif

# XXXXX fixme
# variable definitions for exported symbols
ifeq ($(OS_ARCH), WINNT)
        SSLDAP_EXPORT_DEFS=../msdos/winsock/ns??ldap32.def
else
        SSLDAP_EXPORT_DEFS= $(SSLOBJDEST)/libldap_ssl.exp
endif

SSLDAP_EXPORT_FLAGS=$(addprefix $(DLLEXPORTS_PREFIX), $(SSLDAP_EXPORT_DEFS))

GENEXPARGS=$(BUILD_DEBUG) $(SSLDAPVERS_SUFFIX) $(SSLDAPVERS)
endif # USE_DLL_EXPORTS_FILE

ifeq ($(OS_ARCH), SunOS)
EXTRA_LIBS = -L$(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib -l$(LDAP_LIBNAME) \
	     -L$(NSCP_DISTDIR)/lib
EXTRA_LIBS += -L$(NSCP_DISTDIR)/lib $(DYNAMICNSPR)
endif

ifeq ($(OS_ARCH), AIX)
EXTRA_LIBS = -L$(NSCP_DISTDIR)/$(OBJDIR_NAME)/lib -l$(LDAP_LIBNAME) \
	     -L$(NSCP_DISTDIR)/lib
EXTRA_LIBS += -L$(NSCP_DISTDIR)/lib $(DYNAMICNSPR) -l$(NSS_LIBNAME)
EXTRA_LIBS += -l$(SSL_LIBNAME) -l $(PRLDAP_LIBNAME)
EXTRA_LIBS += -ldl -brtl -lpthreads -lc_r -lm
endif

#ifeq ($(OS_ARCH), AIX)
#    EXTRA_LIBS += $(LIBNSPR) -l$(LDAP_LIBNAME)
#else
#ifneq ($(OS_ARCH), OSF1)
#ifeq ($(OS_ARCH), WINNT)
#    EXTRA_LIBS = $(LIBNSPR)  -l$(LDAP_LIBNAME)
#else
#    EXTRA_LIBS = $(DYNAMICNSPR) -l$(LDAP_LIBNAME)
#endif
#endif
#endif

OBJDEST = $(OBJDIR_NAME)

###########################################################################

ifeq ($(USE_DLL_EXPORTS_FILE), 1)
# recursive gmake rule to create exported symbols file
$(SSLOBJDEST)/libldap_ssl.exp:: ../libldap_ssl.ex
	$(GENEXPORTS) $(OS_ARCH) Standard $< $(GENEXPARGS) > $@
endif # USE_DLL_EXPORTS_FILE

versiont.c:	Makefile.client Version.c
	@$(RM) $@
	@(u="$${USER-root}" v="$(shell cat ../../build/version)" d="$(shell pwd)" \
	h="$(shell hostname)" t="$(shell date)"; $(SED) -e "s|%WHEN%|$${t}|" \
	-e "s|%WHOANDWHERE%|$${u}@$${h}:$${d}|" \
	-e "s|%VERSION%|$${v}|" \
	< Version.c > $@)

all::    $(OBJDEST) $(LIBDIR) $(OBJS) $(LIBSSLDAP)

$(LIBDIR):
	$(MKDIR) $(LIBDIR)

$(LIBSSLDAP): $(OBJS) $(LIBDIR) $(SSLDAP_EXPORT_DEFS)
	@echo ======= making $(LIBSSLDAP)
ifdef SO_FILES_TO_REMOVE
	-$(RM) $(SO_FILES_TO_REMOVE)
endif
	$(LINK_DLL) $(DSO_LDOPTS) $(SSLDAP_EXPORT_FLAGS) $(EXTRA_LIBS)

veryclean:: clean

clean::
	$(RM) $(OBJS) $(LIBSSLDAP)

$(OBJDEST):
	$(MKDIR) $(OBJDEST)

install:: $(LIBSSLDAP)
ifdef MKSHLIB
	$(INSTALL) -m 555 $(LIBSSLDAP) $(INSTALLDIR)/lib
endif
