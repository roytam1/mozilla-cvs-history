#!nmake
#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 

DEPTH=..\..\..

LIBRARY_NAME=raptorlayout_s 
DEFINES=-D_IMPL_NS_LAYOUT -DWIN32_LEAN_AND_MEAN
!if defined(XP_NEW_SELECTION)
DEFINES = $(DEFINES) -DXP_NEW_SELECTION
!endif

CPPSRCS =				\
	nsAutoCopy.cpp			\
	nsCommentNode.cpp		\
	nsGenericElement.cpp		\
	nsGenericDOMDataNode.cpp	\
	nsGenericDOMNodeList.cpp	\
	nsContentList.cpp		\
	nsContentIterator.cpp		\
	nsContentPolicy.cpp \
	nsDocument.cpp			\
	nsDocumentEncoder.cpp		\
	nsDocumentFragment.cpp		\
	nsDocumentViewer.cpp		\
	nsDOMAttribute.cpp		\
	nsDOMAttributeMap.cpp		\
	nsDOMDocumentType.cpp		\
	nsFrameImageLoader.cpp		\
	nsFrameList.cpp                 \
	nsFrameTraversal.cpp            \
	nsFrameUtil.cpp			\
	nsGalleyContext.cpp		\
	nsGeneratedIterator.cpp		\
	nsNameSpaceManager.cpp		\
	nsNodeInfo.cpp			\
	nsNodeInfoManager.cpp		\
	nsPluginViewer.cpp		\
	nsPresContext.cpp		\
	nsPresState.cpp			\
	nsPrintContext.cpp		\
	nsPrintPreviewContext.cpp	\
	nsSpaceManager.cpp		\
	nsStyleContext.cpp		\
	nsStyleChangeList.cpp		\
	nsStyleCoord.cpp		\
	nsStyleSet.cpp			\
	nsTextFragment.cpp		\
	nsXIFConverter.cpp		\
	nsSelection.cpp			\
	nsLayoutAtoms.cpp		\
	nsLayoutDebugger.cpp		\
	nsLayoutUtils.cpp		\
	nsCaret.cpp			\
	nsRange.cpp			\
	nsTextContentChangeData.cpp	\
	nsTextNode.cpp			\
	nsLayoutHistoryState.cpp	\
	$(NULL)

MODULE=raptor 
REQUIRES=xpcom raptor dom 
# EXPORTS=

CPP_OBJS=					\
	.\$(OBJDIR)\nsAutoCopy.obj		\
	.\$(OBJDIR)\nsCommentNode.obj		\
	.\$(OBJDIR)\nsGenericDOMDataNode.obj	\
	.\$(OBJDIR)\nsGenericDOMNodeList.obj	\
	.\$(OBJDIR)\nsGenericElement.obj 	\
	.\$(OBJDIR)\nsContentList.obj 	 	\
	.\$(OBJDIR)\nsContentIterator.obj 	\
	.\$(OBJDIR)\nsContentPolicy.obj         \
	.\$(OBJDIR)\nsDocument.obj		\
	.\$(OBJDIR)\nsDocumentEncoder.obj	\
	.\$(OBJDIR)\nsDocumentFragment.obj	\
	.\$(OBJDIR)\nsDocumentViewer.obj	\
	.\$(OBJDIR)\nsDOMAttribute.obj		\
	.\$(OBJDIR)\nsDOMAttributeMap.obj	\
	.\$(OBJDIR)\nsDOMDocumentType.obj	\
	.\$(OBJDIR)\nsFrameImageLoader.obj	\
	.\$(OBJDIR)\nsFrameList.obj		\
	.\$(OBJDIR)\nsFrameTraversal.obj        \
	.\$(OBJDIR)\nsFrameUtil.obj		\
	.\$(OBJDIR)\nsGalleyContext.obj		\
	.\$(OBJDIR)\nsGeneratedIterator.obj 	\
	.\$(OBJDIR)\nsNameSpaceManager.obj	\
	.\$(OBJDIR)\nsNodeInfo.obj		\
	.\$(OBJDIR)\nsNodeInfoManager.obj	\
	.\$(OBJDIR)\nsPluginViewer.obj		\
	.\$(OBJDIR)\nsPresContext.obj		\
	.\$(OBJDIR)\nsPresState.obj		\
	.\$(OBJDIR)\nsPrintContext.obj		\
	.\$(OBJDIR)\nsPrintPreviewContext.obj	\
	.\$(OBJDIR)\nsSpaceManager.obj		\
	.\$(OBJDIR)\nsStyleContext.obj		\
	.\$(OBJDIR)\nsStyleChangeList.obj	\
	.\$(OBJDIR)\nsStyleCoord.obj		\
	.\$(OBJDIR)\nsStyleSet.obj		\
	.\$(OBJDIR)\nsTextFragment.obj		\
	.\$(OBJDIR)\nsXIFConverter.obj		\
	.\$(OBJDIR)\nsSelection.obj		\
	.\$(OBJDIR)\nsLayoutAtoms.obj		\
	.\$(OBJDIR)\nsLayoutDebugger.obj	\
	.\$(OBJDIR)\nsLayoutUtils.obj		\
	.\$(OBJDIR)\nsCaret.obj			\
	.\$(OBJDIR)\nsRange.obj			\
	.\$(OBJDIR)\nsTextContentChangeData.obj	\
	.\$(OBJDIR)\nsTextNode.obj		\
	.\$(OBJDIR)\nsLayoutHistoryState.obj	\
	$(NULL)

LINCS=-I$(PUBLIC)\xpcom -I$(PUBLIC)\raptor \
    -I$(PUBLIC)\dom -I$(PUBLIC)\js -I$(PUBLIC)\netlib \
    -I$(PUBLIC)\pref -I..\..\html\base\src -I..\..\html\style\src \
    -I..\..\xul\base\src \
    -I$(PUBLIC)\lwbrk -I$(PUBLIC)\plugin

LCFLAGS = \
        $(LCFLAGS) \
        $(DEFINES) \
        $(NULL)

include <$(DEPTH)\config\rules.mak>

install:: $(LIBRARY)
	$(MAKE_INSTALL) $(LIBRARY) $(DIST)\lib

clobber::
	rm -f $(DIST)\lib\$(LIBRARY_NAME).lib
	rm -f $(PDBFILE).pdb
