/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 * Sammy Ford
 */


#include "nsISupports.idl"
#include "domstubs.idl"


%{C++

class nsIDOMSelection;
typedef short SelectionType;
typedef short SelectionRegion;
%}


[scriptable, uuid(D2D1D179-85A7-11d3-9932-00108301233C)]
interface nsISelectionController : nsISupports
{
   const short SELECTION_NONE=0;
   const short SELECTION_NORMAL=1;
   const short SELECTION_SPELLCHECK=2;
   const short SELECTION_IME_RAWINPUT=4;
   const short SELECTION_IME_SELECTEDRAWTEXT=8;
   const short SELECTION_IME_CONVERTEDTEXT=16;
   const short SELECTION_IME_SELECTEDCONVERTEDTEXT=32;
   const short NUM_SELECTIONTYPES=6;


   const short SELECTION_ANCHOR_REGION = 0;
   const short SELECTION_FOCUS_REGION = 1;
   const short NUM_SELECTION_REGIONS = 2;

   const short SELECTION_OFF = 0;
   const short SELECTION_HIDDEN =1;//>HIDDEN displays selection
   const short SELECTION_ON = 2;
   const short SELECTION_DISABLED = 3;

   /**
   * SetDisplaySelection will set the display mode for the selection. OFF,ON,DISABLED
   */
    void    setDisplaySelection(in short toggle);

   /**
   * GetDisplaySelection will get the display mode for the selection. OFF,ON,DISABLED
   */
    short   getDisplaySelection();

   /**
   * GetSelection will return the selection that the presentation
   *  shell may implement.
   *
   * @param aType will hold the type of selection //SelectionType
   * @param _return will hold the return value
   */
    nsIDOMSelection getSelection(in short type);

   /**
   * ScrollSelectionIntoView scrolls a region of the selection,
   * so that it is visible in the scrolled view.
   *
   * @param aType the selection to scroll into view. //SelectionType
   * @param aRegion the region inside the selection to scroll into view. //SelectionRegion
   */
    void scrollSelectionIntoView(in short type, in short region);
   /**
   * RepaintSelection repaints the selection specified by aType.
   *
   * @param aType specifies the selection to repaint.
   */
    void repaintSelection(in short type);

   /**
   * Set the caret as enabled or disabled. An enabled caret will
   * draw or blink when made visible. A disabled caret will never show up.
   * Can be called any time.
   * @param aEnable PR_TRUE to enable caret.  PR_FALSE to disable.
   * @return always NS_OK
   */
    void setCaretEnabled(in boolean enabled);

   /**
   * Set the caret readonly or not. An readonly caret will
   * draw but not blink when made visible. 
   * @param aReadOnly PR_TRUE to enable caret.  PR_FALSE to disable.
   * @return always NS_OK
   */
    void setCaretReadOnly(in boolean readOnly);

   /**
   * Gets the current state of the caret.
   * @param aEnabled  [OUT] set to the current caret state, as set by SetCaretEnabled
   * @return   if aOutEnabled==null, returns NS_ERROR_INVALID_ARG
   *           else NS_OK
   */
    boolean getCaretEnabled();

   /** CharacterMove will move the selection one character forward/backward in the document.
   *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
   *  the "point" of selection that is extended is considered the "focus" point. 
   *  or the last point adjusted by the selection.
   *  @param aForward forward or backward if PR_FALSE
   *  @param aExtend  should it collapse the selection of extend it?
   */
    void characterMove(in boolean forward, in boolean extend);

   /** WordMove will move the selection one word forward/backward in the document.
   *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
   *  the "point" of selection that is extended is considered the "focus" point. 
   *  or the last point adjusted by the selection.
   *  @param aForward forward or backward if PR_FALSE
   *  @param aExtend  should it collapse the selection of extend it?
   */

    void wordMove(in boolean forward, in boolean extend);

    /** LineMove will move the selection one line forward/backward in the document.
   *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
   *  the "point" of selection that is extended is considered the "focus" point. 
   *  or the last point adjusted by the selection.
   *  @param aForward forward or backward if PR_FALSE
   *  @param aExtend  should it collapse the selection of extend it?
   */
    void lineMove(in boolean forward, in boolean extend);

  /** IntraLineMove will move the selection to the front of the line or end of the line
   *  in the document.
   *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
   *  the "point" of selection that is extended is considered the "focus" point. 
   *  or the last point adjusted by the selection.
   *  @param aForward forward or backward if PR_FALSE
   *  @param aExtend  should it collapse the selection of extend it?
   */
    void intraLineMove(in boolean forward, in boolean extend);

  /** PageMove will move the selection one page forward/backward in the document.
   *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
   *  the "point" of selection that is extended is considered the "focus" point. 
   *  or the last point adjusted by the selection.
   *  @param aForward forward or backward if PR_FALSE
   *  @param aExtend  should it collapse the selection of extend it?
   */
    void pageMove(in boolean forward, in boolean extend);

  /** CompleteScroll will move page view to the top or bottom of the document
   *  @param aForward forward or backward if PR_FALSE
   */
    void completeScroll(in boolean forward);

  /** CompleteMove will move page view to the top or bottom of the document
   *  this will also have the effect of collapsing the selection if the aExtend = PR_FALSE
   *  the "point" of selection that is extended is considered the "focus" point. 
   *  or the last point adjusted by the selection.
   *  @param aForward forward or backward if PR_FALSE
   *  @param aExtend  should it collapse the selection of extend it?
   */
    void completeMove(in boolean forward, in boolean extend);


  /** ScrollPage will scroll the page without affecting the selection.
   *  @param aForward scroll forward or backwards in selection
   */
    void scrollPage(in boolean forward);

  /** ScrolLine will scroll line up or down dependent on the boolean
   *  @param aForward scroll forward or backwards in selection
   */
	  void scrollLine(in boolean forward);

  /** ScrolHorizontal will scroll left or right dependent on the boolean
   *  @param aLeft if true will scroll left. if not will scroll right.
   */
	  void scrollHorizontal(in boolean left);
  /** SelectAll will select the whole page
   */
    void selectAll();

};
%{ C++
   #define NS_ISELECTIONCONTROLLER_CID \
   { 0xd2d1d179, 0x85a7, 0x11d3, \
   { 0x99, 0x32, 0x0, 0x10, 0x83, 0x1, 0x23, 0x3c }}
%}
