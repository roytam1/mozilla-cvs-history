
/*
** This is a generated file, do not edit it. This file is created by
** genhash.pl
*/

#include "plstr.h"
#include "nsCSSProps.h"
#define TOTAL_KEYWORDS 142
#define MIN_WORD_LENGTH 3
#define MAX_WORD_LENGTH 21
#define MIN_HASH_VALUE 193
#define MAX_HASH_VALUE 1155
/* maximum key range = 963, duplicates = 0 */


struct StaticNameTable {
  char* tag;
  PRInt32 id;
};

static const unsigned char kLowerLookup[256] = {
  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,
  16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,
  32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,
  48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,
  64,
    97,98,99,100,101,102,103,104,105,106,107,108,109,
    110,111,112,113,114,115,116,117,118,119,120,121,122,

   91, 92, 93, 94, 95, 96, 97, 98, 99,100,101,102,103,104,105,106,107,108,109,110,111,
  112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,

  128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,
  144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,
  160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,
  176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,
  192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,
  208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
  224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,
  240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
};

#define MYLOWER(x) kLowerLookup[((x) & 0x7f)]

/**
 * Map a name to an ID or -1
 */
PRInt32 nsCSSProps::LookupName(const char* str)
{
  static unsigned short asso_values[] =
    {
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156,  215, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156,  161,  214,  250,
      226,  174,  146,  217,  246,  141, 1156,   69,  102,   94,
      144,   30,    7,  185,    4,  194,  153,   32,   89,  212,
      176,  245,   60, 1156, 1156, 1156, 1156, 1156,
    };
  static unsigned char lengthtable[] =
    {
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,
      0,  0,  6,  0,  0,  0,  0,  6,  0,  5,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  5,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  4,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  7,  0,  0,  0,  0,  0,  0,  0,  7,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,
      5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10,  0,
      0,  0,  0,  0,  0,  0,  0, 18,  0,  0,  0,  0,  0,  4,
      0,  0,  0,  0,  6,  0,  0,  0,  7,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,  3,  0,  0,
      0,  0,  0,  0,  0,  0, 13,  0,  0,  0,  0,  6,  8,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  4, 11, 19,  0,  0,
     12,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,  0,  0,
      0,  0,  0,  0,  7,  0,  0,  0,  0,  0,  0,  0, 11, 11,
      0,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0, 11,  0, 10, 12,  0,  0,  0,
      0,  0,  0,  0, 17,  0,  0, 19,  0,  0,  7, 17, 17, 12,
      0,  0,  0,  0,  0,  0,  0,  0, 11, 18,  0, 13,  0,  0,
      0,  0,  5,  0,  0,  0,  0,  0, 12,  6,  9,  9,  0,  9,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7,  0, 13,
      0,  0,  7,  0,  0,  0, 11,  0,  0,  0,  0, 17,  0,  0,
      0,  0,  0, 10,  0,  0,  0,  0,  0,  8,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0, 11,  0,  0,  0, 18, 10, 16,
     11,  0,  0,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0, 19,
      0,  0,  0,  0,  0,  0,  0, 11,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  9,  0,  0,  0,  0,  0, 11, 13,  0,  0,  0,
      0,  8,  0,  0,  0,  0,  0, 12,  0,  0, 13,  0,  0,  0,
      0,  0,  0,  0,  6,  0,  0,  0, 10, 16,  0,  0,  0,  6,
     16,  0,  0,  0, 21,  6,  0,  0, 13,  0, 21,  0,  0,  0,
     17, 19,  0,  0,  0,  0,  9,  0,  0, 17,  0, 10,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0, 14,  7,  0,  0, 10,
      9, 16,  0,  0, 14, 10,  0,  0,  0,  0, 11,  0,  0,  0,
      0, 10,  0,  0, 12,  0,  9,  0,  0,  0,  0, 10,  0,  0,
      0,  0, 14,  0,  0,  0, 16,  0,  0, 21,  0,  0, 11, 16,
      0,  0, 17,  0,  0,  0,  0, 13,  0,  0,  0,  0,  0,  0,
      0,  0,  0, 17,  0, 12, 14,  0, 15,  0,  0,  0, 19,  0,
      0,  0,  0,  0, 11,  0,  0,  0, 11,  0,  0, 11, 10,  0,
      0,  0,  0,  0,  0,  0,  0, 16,  0,  0, 12,  0,  0,  0,
      0,  0,  0,  0, 11, 16, 17,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0, 11,  0,  0,  0,  0,
      0, 12,  0,  0, 14,  0,  0, 12, 17,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0, 13,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0, 17,  0,  0, 12,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0, 12,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     12, 13,  0,  0,  0, 16,  0,  0, 12,  0,  0,  0,  0, 12,
      0,  0, 15,  0,  0,  0,  0, 10,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0, 12,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0, 13,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0, 18,  0,  0,  0,  0,  0, 15,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0, 13,
    };
  static struct StaticNameTable wordlist[] =
    {
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, 
      {"top",  131},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, 
      {"border",  10},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"speak",  115},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, 
      {"color",  42},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"cursor",  49},
      {"",}, {"",}, {"",}, {"",}, 
      {"filter",  54},
      {"",}, 
      {"right",  111},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"font",  56},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, 
      {"page",  95},
      {"pause",  99},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, 
      {"clear",  36},
      {"",}, 
      {"clip",  37},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"orphans",  84},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"outline",  85},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"pitch",  102},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"float",  55},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"border-top",  27},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"border-right-color",  22},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"left",  65},
      {"",}, {"",}, {"",}, {"",}, 
      {"bottom",  34},
      {"",}, {"",}, {"",}, 
      {"opacity",  83},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"marks",  78},
      {"",}, {"",}, {"",}, {"",}, 
      {"cue",  46},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"outline-color",  86},
      {"",}, {"",}, {"",}, {"",}, 
      {"volume",  136},
      {"position",  106},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"size",  112},
      {"border-left",  17},
      {"border-bottom-color",  12},
      {"",}, {"",}, 
      {"border-color",  16},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"clip-top",  41},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"padding",  90},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"pause-after",  100},
      {"padding-top",  94},
      {"",}, {"",}, {"",}, 
      {"margin",  72},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"play-during",  104},
      {"",}, 
      {"margin-top",  76},
      {"border-right",  21},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"background-filter",  4},
      {"",}, {"",}, 
      {"background-position",  6},
      {"",}, {"",}, 
      {"content",  43},
      {"background-repeat",  7},
      {"border-left-color",  18},
      {"font-variant",  62},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"quotes-open",  109},
      {"border-right-style",  23},
      {"",}, 
      {"border-bottom",  11},
      {"",}, {"",}, {"",}, {"",}, 
      {"width",  139},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"speak-header",  116},
      {"quotes",  107},
      {"elevation",  52},
      {"font-size",  58},
      {"",}, 
      {"cue-after",  47},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"azimuth",  0},
      {"",}, 
      {"marker-offset",  77},
      {"",}, {"",}, 
      {"z-index",  141},
      {"",}, {"",}, {"",}, 
      {"speech-rate",  119},
      {"",}, {"",}, {"",}, {"",}, 
      {"speak-punctuation",  118},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"background",  1},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"overflow",  89},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"margin-left",  74},
      {"",}, {"",}, {"",}, 
      {"border-right-width",  24},
      {"cue-before",  48},
      {"border-top-color",  28},
      {"font-family",  57},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"background-color",  3},
      {"",}, {"",}, {"",}, 
      {"border-bottom-style",  13},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"font-weight",  63},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"direction",  50},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"pitch-range",  103},
      {"outline-style",  87},
      {"",}, {"",}, {"",}, {"",}, 
      {"richness",  110},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"margin-right",  75},
      {"",}, {"",}, 
      {"speak-numeral",  117},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"height",  64},
      {"",}, {"",}, {"",}, 
      {"clip-right",  40},
      {"page-break-after",  96},
      {"",}, {"",}, {"",}, 
      {"stress",  120},
      {"background-image",  5},
      {"",}, {"",}, {"",}, 
      {"background-attachment",  2},
      {"widows",  138},
      {"",}, {"",}, 
      {"margin-bottom",  73},
      {"",}, 
      {"background-x-position",  8},
      {"",}, {"",}, {"",}, 
      {"border-left-style",  19},
      {"border-bottom-width",  14},
      {"",}, {"",}, {"",}, {"",}, 
      {"clip-left",  39},
      {"",}, {"",}, 
      {"play-during-flags",  105},
      {"",}, 
      {"visibility",  134},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"text-transform",  130},
      {"display",  51},
      {"",}, {"",}, 
      {"text-align",  122},
      {"min-width",  82},
      {"border-top-style",  29},
      {"",}, {"",}, 
      {"padding-bottom",  91},
      {"min-height",  81},
      {"",}, {"",}, {"",}, {"",}, 
      {"line-height",  67},
      {"",}, {"",}, {"",}, {"",}, 
      {"font-style",  61},
      {"",}, {"",}, 
      {"border-style",  26},
      {"",}, 
      {"max-width",  80},
      {"",}, {"",}, {"",}, {"",}, 
      {"max-height",  79},
      {"",}, {"",}, {"",}, {"",}, 
      {"border-spacing",  25},
      {"",}, {"",}, {"",}, 
      {"border-x-spacing",  32},
      {"",}, {"",}, 
      {"background-y-position",  9},
      {"",}, {"",}, 
      {"clip-bottom",  38},
      {"font-size-adjust",  59},
      {"",}, {"",}, 
      {"border-left-width",  20},
      {"",}, {"",}, {"",}, {"",}, 
      {"outline-width",  88},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"counter-increment",  44},
      {"",}, 
      {"padding-left",  92},
      {"letter-spacing",  66},
      {"",}, 
      {"border-collapse",  15},
      {"",}, {"",}, {"",}, 
      {"list-style-position",  70},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"text-indent",  124},
      {"",}, {"",}, {"",}, 
      {"empty-cells",  53},
      {"",}, {"",}, 
      {"white-space",  137},
      {"list-style",  68},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"border-top-width",  30},
      {"",}, {"",}, 
      {"font-stretch",  60},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"size-height",  113},
      {"border-y-spacing",  33},
      {"page-break-inside",  98},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"text-shadow",  125},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"unicode-bidi",  132},
      {"",}, {"",}, 
      {"vertical-align",  133},
      {"",}, {"",}, 
      {"pause-before",  101},
      {"text-shadow-color",  126},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, 
      {"padding-right",  93},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, 
      {"page-break-before",  97},
      {"",}, {"",}, 
      {"border-width",  31},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"voice-family",  135},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, 
      {"table-layout",  121},
      {"counter-reset",  45},
      {"",}, {"",}, {"",}, 
      {"list-style-image",  69},
      {"",}, {"",}, 
      {"caption-side",  35},
      {"",}, {"",}, {"",}, {"",}, 
      {"quotes-close",  108},
      {"",}, {"",}, 
      {"list-style-type",  71},
      {"",}, {"",}, {"",}, {"",}, 
      {"size-width",  114},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, 
      {"word-spacing",  140},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"text-shadow-x",  128},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, 
      {"text-shadow-radius",  127},
      {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"text-decoration",  123},
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, {"",}, 
      {"",}, {"",}, {"",}, {"text-shadow-y",  129},
    };

  if (str != NULL) {
    int len = PL_strlen(str);
    if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH) {
  register int hval = len;

  switch (hval)
    {
      default:
      case 12:
        hval += asso_values[MYLOWER(str[11])];
      case 11:
      case 10:
      case 9:
      case 8:
        hval += asso_values[MYLOWER(str[7])];
      case 7:
      case 6:
        hval += asso_values[MYLOWER(str[5])];
      case 5:
      case 4:
      case 3:
      case 2:
        hval += asso_values[MYLOWER(str[1])];
      case 1:
        hval += asso_values[MYLOWER(str[0])];
        break;
    }
  hval += asso_values[MYLOWER(str[len - 1])];
      if (hval <= MAX_HASH_VALUE && hval >= MIN_HASH_VALUE) {
        if (len == lengthtable[hval]) {
          register const char *tag = wordlist[hval].tag;

          /*
          ** While not at the end of the string, if they ever differ
          ** they are not equal.  We know "tag" is already lower case.
          */
          while ((*tag != '\0')&&(*str != '\0')) {
            if (*tag != (char) MYLOWER(*str)) {
              return -1;
            }
            tag++;
            str++;
          }

          /*
          ** One of the strings has ended, if they are both ended, then they
          ** are equal, otherwise not.
          */
          if ((*tag == '\0')&&(*str == '\0')) {
            return wordlist[hval].id;
          }
        }
      }
    }
  }
  return -1;
}

const nsCSSProps::NameTableEntry nsCSSProps::kNameTable[] = {
  { "azimuth", 0 }, 
  { "background", 1 }, 
  { "background-attachment", 2 }, 
  { "background-color", 3 }, 
  { "background-filter", 4 }, 
  { "background-image", 5 }, 
  { "background-position", 6 }, 
  { "background-repeat", 7 }, 
  { "background-x-position", 8 }, 
  { "background-y-position", 9 }, 
  { "border", 10 }, 
  { "border-bottom", 11 }, 
  { "border-bottom-color", 12 }, 
  { "border-bottom-style", 13 }, 
  { "border-bottom-width", 14 }, 
  { "border-collapse", 15 }, 
  { "border-color", 16 }, 
  { "border-left", 17 }, 
  { "border-left-color", 18 }, 
  { "border-left-style", 19 }, 
  { "border-left-width", 20 }, 
  { "border-right", 21 }, 
  { "border-right-color", 22 }, 
  { "border-right-style", 23 }, 
  { "border-right-width", 24 }, 
  { "border-spacing", 25 }, 
  { "border-style", 26 }, 
  { "border-top", 27 }, 
  { "border-top-color", 28 }, 
  { "border-top-style", 29 }, 
  { "border-top-width", 30 }, 
  { "border-width", 31 }, 
  { "border-x-spacing", 32 }, 
  { "border-y-spacing", 33 }, 
  { "bottom", 34 }, 
  { "caption-side", 35 }, 
  { "clear", 36 }, 
  { "clip", 37 }, 
  { "clip-bottom", 38 }, 
  { "clip-left", 39 }, 
  { "clip-right", 40 }, 
  { "clip-top", 41 }, 
  { "color", 42 }, 
  { "content", 43 }, 
  { "counter-increment", 44 }, 
  { "counter-reset", 45 }, 
  { "cue", 46 }, 
  { "cue-after", 47 }, 
  { "cue-before", 48 }, 
  { "cursor", 49 }, 
  { "direction", 50 }, 
  { "display", 51 }, 
  { "elevation", 52 }, 
  { "empty-cells", 53 }, 
  { "filter", 54 }, 
  { "float", 55 }, 
  { "font", 56 }, 
  { "font-family", 57 }, 
  { "font-size", 58 }, 
  { "font-size-adjust", 59 }, 
  { "font-stretch", 60 }, 
  { "font-style", 61 }, 
  { "font-variant", 62 }, 
  { "font-weight", 63 }, 
  { "height", 64 }, 
  { "left", 65 }, 
  { "letter-spacing", 66 }, 
  { "line-height", 67 }, 
  { "list-style", 68 }, 
  { "list-style-image", 69 }, 
  { "list-style-position", 70 }, 
  { "list-style-type", 71 }, 
  { "margin", 72 }, 
  { "margin-bottom", 73 }, 
  { "margin-left", 74 }, 
  { "margin-right", 75 }, 
  { "margin-top", 76 }, 
  { "marker-offset", 77 }, 
  { "marks", 78 }, 
  { "max-height", 79 }, 
  { "max-width", 80 }, 
  { "min-height", 81 }, 
  { "min-width", 82 }, 
  { "opacity", 83 }, 
  { "orphans", 84 }, 
  { "outline", 85 }, 
  { "outline-color", 86 }, 
  { "outline-style", 87 }, 
  { "outline-width", 88 }, 
  { "overflow", 89 }, 
  { "padding", 90 }, 
  { "padding-bottom", 91 }, 
  { "padding-left", 92 }, 
  { "padding-right", 93 }, 
  { "padding-top", 94 }, 
  { "page", 95 }, 
  { "page-break-after", 96 }, 
  { "page-break-before", 97 }, 
  { "page-break-inside", 98 }, 
  { "pause", 99 }, 
  { "pause-after", 100 }, 
  { "pause-before", 101 }, 
  { "pitch", 102 }, 
  { "pitch-range", 103 }, 
  { "play-during", 104 }, 
  { "play-during-flags", 105 }, 
  { "position", 106 }, 
  { "quotes", 107 }, 
  { "quotes-close", 108 }, 
  { "quotes-open", 109 }, 
  { "richness", 110 }, 
  { "right", 111 }, 
  { "size", 112 }, 
  { "size-height", 113 }, 
  { "size-width", 114 }, 
  { "speak", 115 }, 
  { "speak-header", 116 }, 
  { "speak-numeral", 117 }, 
  { "speak-punctuation", 118 }, 
  { "speech-rate", 119 }, 
  { "stress", 120 }, 
  { "table-layout", 121 }, 
  { "text-align", 122 }, 
  { "text-decoration", 123 }, 
  { "text-indent", 124 }, 
  { "text-shadow", 125 }, 
  { "text-shadow-color", 126 }, 
  { "text-shadow-radius", 127 }, 
  { "text-shadow-x", 128 }, 
  { "text-shadow-y", 129 }, 
  { "text-transform", 130 }, 
  { "top", 131 }, 
  { "unicode-bidi", 132 }, 
  { "vertical-align", 133 }, 
  { "visibility", 134 }, 
  { "voice-family", 135 }, 
  { "volume", 136 }, 
  { "white-space", 137 }, 
  { "widows", 138 }, 
  { "width", 139 }, 
  { "word-spacing", 140 }, 
  { "z-index", 141 }, 
};
