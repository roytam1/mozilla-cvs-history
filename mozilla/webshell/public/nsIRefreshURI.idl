/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla browser.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications, Inc.  Portions created by Netscape are
 * Copyright (C) 1999, Mozilla.  All Rights Reserved.
 * 
 * Contributor(s):
 */

#include "nsISupports.idl"
#include "nsIURI.idl"
interface nsIChannel;

[scriptable, uuid(69EFC430-2EFE-11d2-9E5D-006008BF092E)]
interface nsIRefreshURI : nsISupports {
    /**
      * Reloads a uri after waiting millis milliseconds.
      *
      * @param uri The uri to refresh.
      * @param millis The number of milliseconds to wait.
      * @param repeat Do you want the uri to be repeatedly refreshed every millis milliseconds.
      * @param flag to check if this is for a META refresh
      */
    void refreshURI(in nsIURI aURI, in long aMillis, in boolean aRepeat, in boolean aMetaRefresh);

    /**
      * Checks the passed in channel to see if there is a refresh header, if there is, 
      * will setup a refreahURI by calling refreshURI
      */
    void setupRefreshURI(in nsIChannel aChannel); 

    /**
      * Parses the passed in header string and will call refreshURI with
      * the parsed values
      *
      * @param aBaseURI base URI to resolve refresh uri against
      * @param aHeader  The meta refresh header string
      */
    void refreshURIFromHeader(in nsIURI aBaseURI, in AString aHeader);
      
    /**
      * Cancels all timer loads.
      */
    void cancelRefreshURITimers();
};
