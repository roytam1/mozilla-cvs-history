#
# The contents of this file are subject to the Netscape Public License
# Version 1.0 (the "NPL"); you may not use this file except in
# compliance with the NPL.  You may obtain a copy of the NPL at
# http://www.mozilla.org/NPL/
#
# Software distributed under the NPL is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
# for the specific language governing rights and limitations under the
# NPL.
#
# The Initial Developer of this code under the NPL is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation.  All Rights
# Reserved.
#

if {#} != 2
	echo "CopyList requires 2 parameters:"
	echo "Parameter 1: path relative to {SourceRootDir} of the file which contains"
	echo "             the list of files to be copied, one per line.  This path"
	echo "             may not begin with a colon"
	echo
	echo "Parameter 2: path relative to {DestRootDir} of the directory where all the"
	echo "             files are to be copied.  No initial colons!"
	echo
	Exit 1
end if

set debugEcho "" # This setting will actually duplicate the files
#set debugEcho "echo" # This setting will merely print the "duplicate" commands.

set sourceList "{SourceRootDir}{1}"
set targetDir "{DestRootDir}{2}"

# targetDir may not end in a colon for this script to work.
if `Evaluate "{targetDir}" =~ /(┼)е1:/`
	#echo "Removed a colon"
	set targetDir "{е1}"
end if

#Ensure the target hierarchy exists
# Volume name
(Evaluate "{TargetDir}" =~ /([┬:]+)е1:┼/) ии dev:null
Set PartialPath "{е1}"
Loop
	(Evaluate "{TargetDir}" =~ /("{PartialPath}":[┬:]+)е1([:]*)е2┼/) ии dev:null
	Set PartialPath "{е1}"
	Set Exit 0
	(NewFolder "{PartialPath}") ии dev:null
	Set Exit 1
	break if "{е2}" == ""
End Loop

#Calculate the source directory by stripping off the leaf name.
(Evaluate "{SourceList}" =~ /(┼:)е1([┬:]+)е2/) #ии dev:null
Set SourceDir "{е1}"

if {verbose}
	echo "Source list is in file Х"{sourceList}Х""
	echo "Source directory is  Х"{SourceDir}Х""
	echo "Target directory is Х"{targetDir}Х""
end if

#delete -i temp1

#Strip all comment lines
#streamedit "{sourceList}" -e '/#┼/ Delete' > temp1

#Strip all comment lines, pipe the stripped lines into this "for" loop:
for f in `streamedit "{sourceList}" -e '/#┼/ Delete'`
	if `Newer "{sourceDir}{f}" "{targetDir}:{f}"` #|| !`Exists "{targetDir}:{f}"`
		if {verbose} ; echo "{sourceDir}{f} is newer than {targetDir}:{f}" ; end if
		{debugEcho} duplicate -y "{sourceDir}{f}" "{targetDir}"
	end if
end for

#delete -i temp1
