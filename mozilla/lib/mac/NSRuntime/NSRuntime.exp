__dc_arr
__del_arr
__new_arr
__init_arr
__copy
__som_check_ev
__som_check_new
__vt__13bad_exception		# bad_exception::__vt
what__13bad_exceptionCFv		# bad_exception::what() const
__end__catch
__throw
__unexpected
__dt__13bad_exceptionFv		# bad_exception::~bad_exception()
__unregister_fragment
__register_fragment
__global_destructor_chain
__destroy_global_chain
__register_global_object
__destroy_new_array
__destroy_arr
__construct_array
__dt__26__partial_array_destructorFv		# __partial_array_destructor::~__partial_array_destructor()
__construct_new_array
__throw_catch_compare
unexpected__Fv		# unexpected()
set_unexpected__FPFv_v		# set_unexpected(void (*)(void))
terminate__Fv		# terminate()
set_terminate__FPFv_v		# set_terminate(void (*)(void))
__vt__10bad_typeid		# bad_typeid::__vt
__vt__9type_info		# type_info::__vt
__dt__9type_infoFv		# type_info::~type_info()
__dynamic_cast
__get_typeid
__dt__10bad_typeidFv		# bad_typeid::~bad_typeid()
__as__9type_infoFRC9type_info		# type_info::operator =(const type_info&)
__ct__9type_infoFRC9type_info		# type_info::type_info(const type_info&)
name__9type_infoCFv		# type_info::name() const
before__9type_infoCFRC9type_info		# type_info::before(const type_info&) const
__ne__9type_infoCFRC9type_info		# type_info::operator !=(const type_info&) const
__eq__9type_infoCFRC9type_info		# type_info::operator ==(const type_info&) const
__dl__FPv		# operator delete(void*)
#__nw__FUlRC9nothrow_t		# operator new(unsigned long,const nothrow_t&)
__nw__FUl		# operator new(unsigned long)
#_prealloc_newpool__FUl		# _prealloc_newpool(unsigned long)
#_set_newnonptrmax__FUl		# _set_newnonptrmax(unsigned long)
#_set_newpoolsize__FUl		# _set_newpoolsize(unsigned long)
__new_handler
__throws_bad_alloc
__del_hdl
__new_hdl
set_new_handler__FPFv_v		# set_new_handler(void (*)(void))
__throw_bad_alloc__Fv		# __throw_bad_alloc()
__dt__9bad_allocFv		# bad_alloc::~bad_alloc()
qd
__vt__14overflow_error		# overflow_error::__vt
__vt__11range_error		# range_error::__vt
__vt__13runtime_error		# runtime_error::__vt
__vt__12out_of_range		# out_of_range::__vt
__vt__12length_error		# length_error::__vt
__vt__16invalid_argument		# invalid_argument::__vt
__vt__12domain_error		# domain_error::__vt
__vt__11logic_error		# logic_error::__vt
__vt__8bad_cast		# bad_cast::__vt
__vt__9bad_alloc		# bad_alloc::__vt
__vt__9exception		# exception::__vt
#npos__47basic_string<c,14char_traits<c>,12allocator<c>>		# basic_string<char, char_traits<char>, allocator<char>>::npos
alloc_msg__9bad_alloc		# bad_alloc::alloc_msg
#destroy__FP51basic_string_ref<c,14char_traits<c>,12allocator<c>>		# destroy(basic_string_ref<char, char_traits<char>, allocator<char>>*)
__as__9bad_allocFRC9bad_alloc		# bad_alloc::operator =(const bad_alloc&)
__dt__14overflow_errorFv		# overflow_error::~overflow_error()
__dt__11range_errorFv		# range_error::~range_error()
__dt__13runtime_errorFv		# runtime_error::~runtime_error()
__dt__12length_errorFv		# length_error::~length_error()
__dt__16invalid_argumentFv		# invalid_argument::~invalid_argument()
__dt__12domain_errorFv		# domain_error::~domain_error()
__dt__11logic_errorFv		# logic_error::~logic_error()
__priv_throwbadcast__Fv		# __priv_throwbadcast()
__dt__8bad_castFv		# bad_cast::~bad_cast()
#__dt__47basic_string<c,14char_traits<c>,12allocator<c>>Fv		# basic_string<char, char_traits<char>, allocator<char>>::~basic_string()
__ct__10bad_typeidFv		# bad_typeid::bad_typeid()
what__9bad_allocCFv		# bad_alloc::what() const
what__9exceptionCFv		# exception::what() const
__dt__9exceptionFv		# exception::~exception()
__as__9exceptionFRC9exception		# exception::operator =(const exception&)
__ct__9exceptionFPCc		# exception::exception(const char*)
__ct__9exceptionFRC9exception		# exception::exception(const exception&)
#__dt__12allocator<c>Fv		# allocator<char>::~allocator()
#__dt__64allocator<51basic_string_ref<c,14char_traits<c>,12allocator<c>>>Fv		# allocator<basic_string_ref<char, char_traits<char>, allocator<char>>>::~allocator()
#__dt__10null_mutexFv		# null_mutex::~null_mutex()
__ct__9exceptionFRC47basic_string<c,14char_traits<c>,12allocator<c>>		# exception::exception(const basic_string<char, char_traits<char>, allocator<char>>&)
__dt__12out_of_rangeFv		# out_of_range::~out_of_range()
