/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *      Simon Fraser <sfraser@netscape.com>
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "domstubs.idl"

interface nsIEditor;
interface nsIEditingShell;

[scriptable, uuid(D3B0AA04-F221-11D4-A73C-EAA4BAA8B4FC)]

interface nsIEditingSession : nsISupports
{

  /*  Init the editing session, passing the window that will be the root of
      the session (usually the content root frame.
  */
  void          init(in nsIDOMWindow aWindow);

  /*  Make this window editable
   *  @param aWindow nsIDOMWindow, the window the embedder needs to make editable
   *  @param aEditorType string, "html" "htmlsimple" "text" "textsimple"
   */
  void          makeWindowEditable(in nsIDOMWindow aWindow, in string aEditorType, in boolean inDoAfterUriLoad);
  
  /*  Test whether a specific window has had its editable flag set; it may have an editor
      now, or will get one after the uri load.
      
      Use this, passing the content root window, to test if we've set up editing
      for this content.
  */
  boolean       windowIsEditable(in nsIDOMWindow aWindow);
  
  /*  Get the editor for this window. May return null */
	nsIEditor     getEditorForWindow(in nsIDOMWindow aWindow);	

  /*  lower level */
  void          setupEditorOnWindow(in nsIDOMWindow aWindow);
  void          tearDownEditorOnWindow(in nsIDOMWindow aWindow);

};

