nsCOMPtr_base::assign_assuming_AddRef ; 23595
TypeInState::AddRef ; 10847
nsReadingIterator<unsigned short>::normalize_forward ; 10572
nsEditorController::AddRef ; 8391
nsEditorController::Release ; 8290
basic_nsAReadableString<unsigned short>::BeginReading ; 6508
nsEditorController::QueryInterface ; 6437
nsReadingIterator<unsigned short>::advance ; 5464
basic_nsAReadableString<unsigned short>::CharAt ; 5464
nsInterfaceState::AddRef ; 3796
nsEditor::IsTextNode ; 3398
nsEditor::GetSelection ; 3386
nsEditor::Release ; 3382
nsHTMLEditor::AddRef ; 3382
nsHTMLEditor::Release ; 3382
nsEditor::NotifyDocumentListeners ; 3352
nsEditor::GetRootElement ; 2810
nsBaseComposerCommand::Release ; 2714
nsPlaintextEditor::QueryInterface ; 2027
nsTextEditorMouseListener::QueryInterface ; 2018
nsTextEditorKeyListener::QueryInterface ; 1987
nsTextEditorFocusListener::QueryInterface ; 1919
nsTextEditorDragListener::QueryInterface ; 1910
nsTextEditorCompositionListener::QueryInterface ; 1909
nsTextEditorTextListener::QueryInterface ; 1909
nsPlaintextEditor::SetWrapWidth ; 1905
nsEditor::QueryInterface ; 1894
nsEditor::GetPresShell ; 1617
nsEditor::GetDocument ; 1590
nsEditor::IsMozEditorBogusNode ; 1558
nsHTMLEditor::GetFlags ; 1518
nsTextEditRules::GetFlags ; 1518
nsEditor::GetTag ; 1493
nsEditor::GetTagString ; 1478
nsEditor::IsEditable ; 1477
nsPromiseSubstring<unsigned short>::GetReadableFragment ; 1461
nsEditorService::AddRef ; 1453
EditTxn::Release ; 1453
nsEditorController::SupportsCommand ; 1386
nsTextEditorMouseListener::Release ; 1383
nsTextEditorKeyListener::Release ; 1352
nsTextEditRules::CreateBogusNodeIfNeeded ; 1325
nsInternetCiter::Release ; 1284
nsTextEditorDragListener::Release ; 1275
nsHTMLEditor::GetDOMEventReceiver ; 1274
nsTextEditorCompositionListener::Release ; 1274
nsEditorController::SetCommandRefCon ; 1272
nsTextEditRules::QueryInterface ; 1270
nsQueryReferent::nsQueryReferent ; 1018
JoinElementTxn::GetIsTransient ; 972
EditTxn::SetTransactionDescriptionID ; 884
nsHTMLEditUtils::IsBody ; 870
nsEditorShell::QueryInterface ; 837
TransactionFactory::GetNewTransaction ; 825
EditTxn::EditTxn ; 825
EditTxn::~EditTxn ; 825
nsEditor::DoAfterDoTransaction ; 804
nsEditor::IncDocModCount ; 804
nsEditor::Do ; 804
nsEditor::GetDocModCount ; 804
nsTextRulesInfo::nsTextRulesInfo ; 775
nsSelectionState::MakeEmpty ; 769
nsSelectionState::nsSelectionState ; 743
nsSelectionState::~nsSelectionState ; 743
nsTextEditRules::SetFlags ; 743
nsTextEditRules::WillDoAction ; 742
nsEditor::ShouldTxnSetSelection ; 723
nsHTMLEditorLog::Release ; 715
nsHTMLEditorLog::AddRef ; 715
nsHTMLEditor::QueryInterface ; 713
nsHTMLEditorLog::QueryInterface ; 713
nsEditor::EnableUndo ; 703
nsEditor::StartOperation ; 690
nsEditor::EndOperation ; 690
nsPlaintextEditor::OutputToString ; 688
nsTextEditRules::WillOutputText ; 688
nsTextEditRules::Release ; 668
nsRangeUpdater::SelAdjCreateNode ; 665
InsertElementTxn::`scalar deleting destructor' ; 665
nsEditor::MarkNodeDirty ; 665
InsertElementTxn::InsertElementTxn ; 665
nsRangeUpdater::SelAdjInsertNode ; 665
InsertElementTxn::Init ; 665
InsertElementTxn::Do ; 665
nsEditor::InsertNode ; 665
nsEditor::CreateTxnForInsertElement ; 665
InsertElementTxn::~InsertElementTxn ; 665
nsTextEditRules::ReplaceNewlines ; 663
nsTextEditRules::AfterEdit ; 662
nsPlaintextEditor::StartOperation ; 662
nsTextEditRules::BeforeEdit ; 662
nsPlaintextEditor::EndOperation ; 662
nsEditor::ForceCompositionEnd ; 644
nsEditor::RemoveEditActionListener ; 641
nsPlaintextEditor::BeginEditorInit ; 639
nsPlaintextEditor::EndEditorInit ; 639
nsPlaintextEditor::~nsPlaintextEditor ; 637
nsEditProperty::Release ; 637
nsEditor::nsEditor ; 637
nsPlaintextEditor::InstallEventListeners ; 637
nsTextEditorFocusListener::nsTextEditorFocusListener ; 637
nsTextEditorMouseListener::nsTextEditorMouseListener ; 637
NS_NewEditorDragListener ; 637
nsTextEditorTextListener::nsTextEditorTextListener ; 637
nsEditor::PreDestroy ; 637
NS_NewEditProperty ; 637
nsEditor::PostCreate ; 637
nsTextEditorFocusListener::~nsTextEditorFocusListener ; 637
nsTextEditorCompositionListener::SetEditor ; 637
nsTextEditorTextListener::~nsTextEditorTextListener ; 637
nsTextEditorDragListener::`scalar deleting destructor' ; 637
InsertTextTxn::ClassInit ; 637
nsTextEditRules::~nsTextEditRules ; 637
nsTextEditorDragListener::~nsTextEditorDragListener ; 637
InsertTextTxn::ClassShutdown ; 637
nsTextEditorCompositionListener::`vector deleting destructor' ; 637
NS_NewEditorTextListener ; 637
nsTextEditorDragListener::nsTextEditorDragListener ; 637
nsTextEditorKeyListener::nsTextEditorKeyListener ; 637
nsTextEditorKeyListener::`vector deleting destructor' ; 637
nsPlaintextEditor::nsPlaintextEditor ; 637
nsTextEditorCompositionListener::~nsTextEditorCompositionListener ; 637
nsTextEditorMouseListener::~nsTextEditorMouseListener ; 637
nsRangeUpdater::~nsRangeUpdater ; 637
nsTextEditorTextListener::`vector deleting destructor' ; 637
nsTextEditorMouseListener::`vector deleting destructor' ; 637
nsPlaintextEditor::PostCreate ; 637
nsEditor::Init ; 637
nsTextEditorFocusListener::`vector deleting destructor' ; 637
NS_NewEditorFocusListener ; 637
nsPlaintextEditor::Init ; 637
NS_NewEditorMouseListener ; 637
IMETextTxn::ClassShutdown ; 637
nsEditor::GetTransactionManager ; 637
nsEditor::~nsEditor ; 637
nsTextEditRules::Init ; 637
nsEditor::ResetDocModCount ; 637
IMETextTxn::ClassInit ; 637
NS_NewEditorCompositionListener ; 637
nsTextEditorKeyListener::~nsTextEditorKeyListener ; 637
nsTextEditorCompositionListener::nsTextEditorCompositionListener ; 637
NS_NewEditorKeyListener ; 637
nsTextEditRules::nsTextEditRules ; 637
nsRangeUpdater::nsRangeUpdater ; 637
nsEditor::CreateHTMLContent ; 636
nsPlaintextEditor::InitRules ; 635
nsTextEditRules::`scalar deleting destructor' ; 635
NS_NewTextEditRules ; 635
nsEditorParserObserver::Release ; 635
nsPlaintextEditor::`vector deleting destructor' ; 635
nsEditorController::Init ; 616
nsEditorController::nsEditorController ; 616
nsEditorController::~nsEditorController ; 616
nsEditorController::GetEditorCommandManager ; 616
nsEditorController::`vector deleting destructor' ; 613
nsEditorController::IsCommandEnabled ; 611
nsEditorShell::Release ; 602
nsEditorShell::AddRef ; 602
nsEditor::GetChildOffset ; 591
nsEditor::GetNodeLocation ; 587
nsEditor::IsDescendantOfBody ; 530
Compare ; 522
nsHTMLEditor::IsEmptyNode ; 499
nsEditor::IsInlineNode ; 491
nsEditor::IsNodeInline ; 491
nsEditor::IsNodeBlock ; 491
nsPromiseSubstring<unsigned short>::Length ; 487
basic_nsAReadableString<unsigned short>::Mid ; 487
nsHTMLEditRules::ConvertWhitespace ; 487
nsPromiseSubstring<unsigned short>::Promises ; 487
nsPromiseSubstring<unsigned short>::nsPromiseSubstring<unsigned short> ; 487
basic_nsAWritableString<unsigned short>::AssignFromPromise ; 487
nsEditor::IsBlockNode ; 486
EditAggregateTxn::Release ; 414
EditAggregateTxn::AddRef ; 414
nsInterfaceState::Release ; 413
nsBaseStateUpdatingCommand::AddRef ; 406
nsBaseStateUpdatingCommand::Release ; 406
PlaceholderTxn::AddRef ; 360
PlaceholderTxn::Release ; 360
nsEditorShell::GetEditor ; 322
nsEditor::GetRightmostChild ; 311
nsEditor::GetPriorNode ; 310
nsEditorShellMouseListener::HandleEvent ; 297
nsEmptyFunctor::operator() ; 277
nsPlaintextEditor::SetMaxTextLength ; 275
nsEditor::SetShouldTxnSetSelection ; 274
TypeInState::Release ; 260
PlaceholderTxn::QueryInterface ; 242
EditTxn::QueryInterface ; 229
nsEditor::GetNextNode ; 227
nsEditor::GetLeftmostChild ; 223
nsEditor::GetBlockNodeParent ; 211
nsEditableTextFunctor::operator() ; 210
nsEditor::GetStartNodeAndOffset ; 209
nsEditor::IsContainer ; 208
nsHTMLEditUtils::IsAnchor ; 198
nsEditor::IsPreformatted ; 197
nsString::`vector deleting destructor' ; 185
nsEditProperty::nsEditProperty ; 185
nsEditProperty::~nsEditProperty ; 185
nsEditProperty::`scalar deleting destructor' ; 185
nsEditorShell::GetDocumentEditable ; 166
nsEditor::GetLengthOfDOMNode ; 159
nsHTMLEditRules::IsLastNode ; 149
nsEditor::GetSelectionController ; 146
nsBaseStateUpdatingCommand::IsCommandEnabled ; 142
nsEditor::GetShouldTxnSetSelection ; 140
nsEditor::EndPlaceHolderTransaction ; 139
nsEditor::BeginPlaceHolderTransaction ; 139
nsAutoPlaceHolderBatch::nsAutoPlaceHolderBatch ; 139
nsAutoTxnsConserveSelection::nsAutoTxnsConserveSelection ; 137
nsHTMLEditUtils::IsTableCell ; 137
nsInterfaceState::QueryInterface ; 135
nsEditor::IsEmptyTextContent ; 133
nsBaseEditorCommand::nsBaseEditorCommand ; 130
nsBaseEditorCommand::`vector deleting destructor' ; 130
TypeInState::QueryInterface ; 130
nsRangeStore::StoreRange ; 129
nsSelectionState::SaveSelection ; 129
nsHTMLEditUtils::InBody ; 129
TypeInState::Reset ; 128
TypeInState::NotifySelectionChanged ; 126
nsInterfaceState::NotifySelectionChanged ; 124
nsInterfaceState::PrimeUpdateTimer ; 124
nsRangeStore::GetRange ; 120
TypeInState::FindPropInList ; 108
nsEditor::GetDocumentModified ; 107
nsPlaintextEditor::SetFlags ; 106
nsRangeStore::nsRangeStore ; 105
nsRangeStore::~nsRangeStore ; 105
nsEditorShellMouseListener::QueryInterface ; 103
nsHTMLEditRules::IsFirstNode ; 101
nsEditorShellMouseListener::Release ; 101
nsBaseComposerCommand::nsBaseComposerCommand ; 96
EditAggregateTxn::AppendChild ; 94
nsHTMLEditRules::GetPromotedPoint ; 92
nsHTMLEditor::GetInlinePropertyWithAttrValue ; 90
nsHTMLEditUtils::IsListItem ; 89
EditAggregateTxn::QueryInterface ; 89
nsInterfaceState::DidDo ; 87
nsInterfaceState::WillDo ; 87
PlaceholderTxn::Merge ; 86
nsInterfaceState::WillMerge ; 86
nsInterfaceState::DidMerge ; 86
nsBaseStateUpdatingCommand::UpdateCommandState ; 85
nsEditorShell::IsHTMLSourceMode ; 85
nsHTMLEditor::GetInlineProperty ; 80
nsSelectionState::IsEmpty ; 78
StCaretHider::StCaretHider ; 77
nsEditor::EndUpdateViewBatch ; 77
StCaretHider::~StCaretHider ; 77
nsEditor::BeginUpdateViewBatch ; 77
nsDOMIterator::~nsDOMIterator ; 75
nsStyleUpdatingCommand::GetCurrentState ; 75
nsDOMIterator::nsDOMIterator ; 75
nsDOMIterator::AppendList ; 75
nsEditor::GetEndNodeAndOffset ; 72
nsHTMLEditor::GetNextHTMLNode ; 71
nsEditor::GetChildAt ; 70
nsHTMLEditUtils::IsBreak ; 69
InsertTextTxn::QueryInterface ; 66
EditAggregateTxn::EditAggregateTxn ; 65
nsHTMLEditRules::DoTextNodeWhitespace ; 65
EditAggregateTxn::~EditAggregateTxn ; 65
nsSelectionState::IsCollapsed ; 62
nsHTMLEditor::GetPriorHTMLNode ; 62
nsTextEditRules::DidDoAction ; 58
nsBaseStateUpdatingCommand::`vector deleting destructor' ; 57
ChangeAttributeTxn::Write ; 57
nsBaseStateUpdatingCommand::nsBaseStateUpdatingCommand ; 57
nsBaseStateUpdatingCommand::~nsBaseStateUpdatingCommand ; 57
nsHTMLEditRules::ConfirmSelectionInBody ; 56
nsDOMIterator::MakeList ; 55
nsDOMIterator::Init ; 54
TypeInState::IsPropSet ; 54
TypeInState::GetTypingState ; 54
TypeInState::IsPropCleared ; 54
TypeInState::IsPropCleared ; 54
TypeInState::IsPropSet ; 54
PlaceholderTxn::PlaceholderTxn ; 53
PlaceholderTxn::`vector deleting destructor' ; 53
nsTextEditRules::WillInsert ; 53
PlaceholderTxn::Init ; 53
nsPlaintextEditor::InsertText ; 53
nsEditor::InsertTextImpl ; 53
nsEditor::NotifyEditorObservers ; 53
PlaceholderTxn::~PlaceholderTxn ; 53
nsEditor::ArePreservingSelection ; 52
nsTextEditRules::DidInsertText ; 51
nsHTMLEditUtils::IsTableElement ; 50
PlaceholderTxn::RememberEndingSelection ; 50
nsEditor::NodeIsType ; 48
nsHTMLEditRules::PromoteRange ; 46
nsStyleUpdatingCommand::nsStyleUpdatingCommand ; 45
nsHTMLEditor::IsTextPropertySetByContent ; 42
nsTrivialFunctor::operator() ; 41
DeleteElementTxn::Do ; 40
DeleteElementTxn::~DeleteElementTxn ; 40
DeleteElementTxn::DeleteElementTxn ; 40
DeleteElementTxn::Init ; 40
DeleteElementTxn::`vector deleting destructor' ; 40
nsCOMPtr<nsIEnumerator>::operator-> ; 39
PlaceholderTxn::EndPlaceHolderBatch ; 38
nsHTMLEditorLog::Unlock ; 36
nsHTMLEditorLog::Lock ; 36
nsCOMPtr<nsIDOMRange>::~nsCOMPtr<nsIDOMRange> ; 36
nsPlaintextEditor::GetAndInitDocEncoder ; 34
nsPlaintextEditor::DeleteSelection ; 34
nsPlaintextEditor::GetBodyStyleContext ; 34
nsPlaintextEditor::GetWrapWidth ; 34
nsEditor::CreateTxnForDeleteElement ; 33
nsHTMLEditRules::AddRef ; 33
nsRangeUpdater::SelAdjDeleteNode ; 33
InsertTextTxn::Init ; 33
nsHTMLEditRules::Release ; 33
InsertTextTxn::`scalar deleting destructor' ; 33
InsertTextTxn::InsertTextTxn ; 33
nsEditor::CreateTxnForInsertText ; 33
nsEditor::DeleteNode ; 33
nsHTMLEditRules::WillDoAction ; 33
InsertTextTxn::~InsertTextTxn ; 33
InsertTextTxn::Do ; 33
nsHTMLEditRules::WillCreateNode ; 32
nsHTMLEditRules::DidDoAction ; 31
nsHTMLEditRules::QueryInterface ; 31
nsEditor::CanContainTag ; 29
nsHTMLEditUtils::IsDiv ; 29
nsDecreaseFontSizeCommand::IsCommandEnabled ; 29
nsEditor::TagCanContainTag ; 29
nsHTMLEditRules::AdjustSpecialBreaks ; 28
nsHTMLEditor::StartOperation ; 28
nsHTMLEditRules::BeforeEdit ; 28
nsHTMLEditRules::AfterEdit ; 28
nsHTMLEditor::EndOperation ; 28
nsHTMLEditRules::AfterEditInner ; 28
nsDeleteCommand::IsCommandEnabled ; 27
nsTextEditRules::TruncateInsertionIfNeeded ; 27
nsTextEditRules::WillDeleteSelection ; 27
nsTextEditRules::WillInsertText ; 27
nsRangeUpdater::RegisterRangeItem ; 26
nsEditor::StopPreservingSelection ; 26
nsEditor::RestorePreservedSelection ; 26
nsRangeUpdater::DropSelectionState ; 26
nsRangeUpdater::RegisterSelectionState ; 26
TypeInState::TakeSetProperty ; 26
nsAutoSelectionReset::~nsAutoSelectionReset ; 26
nsHTMLEditRules::RemoveEmptyNodes ; 26
nsEditor::PreserveSelectionAcrossActions ; 26
nsHTMLEditRules::CreateStyleForInsertText ; 26
nsHTMLEditorLog::InsertText ; 26
nsHTMLEditRules::WillInsert ; 26
TypeInState::TakeRelativeFontSize ; 26
nsHTMLEditRules::AdjustWhitespace ; 26
nsSelectionState::RestoreSelection ; 26
nsHTMLEditRules::WillInsertText ; 26
nsPlaintextEditor::TypedText ; 26
TypeInState::TakeClearProperty ; 26
nsEditor::GetPriorNode ; 26
nsHTMLEditRules::AdjustSelection ; 26
nsRangeUpdater::DropRangeItem ; 26
nsTextEditorKeyListener::KeyPress ; 26
nsAutoSelectionReset::nsAutoSelectionReset ; 26
nsHTMLEditor::HandleKeyPress ; 26
nsHTMLEditor::TypedText ; 26
nsMultiStateCommand::IsCommandEnabled ; 25
nsHTMLEditUtils::IsMozBR ; 25
nsMultiStateCommand::UpdateCommandState ; 25
nsBaseComposerCommand::GetInterfaceNode ; 24
basic_nsLiteralString<unsigned short>::GetReadableFragment ; 24
nsInterfaceState::CallUpdateCommands ; 24
nsEditor::InsertTextIntoTextNodeImpl ; 24
nsCopyCommand::IsCommandEnabled ; 24
nsEditorShell::GetWebShellWindow ; 24
nsHTMLEditRules::DidInsertText ; 24
nsCutCommand::IsCommandEnabled ; 24
nsTextEditorKeyListener::ProcessShortCutKeys ; 24
nsBaseComposerCommand::SetCommandNodeState ; 24
nsBaseComposerCommand::`vector deleting destructor' ; 24
nsDOMSubtreeIterator::Init ; 21
PlaceholderTxn::GetTxnName ; 21
PlaceholderTxn::StartSelectionEquals ; 21
nsDOMSubtreeIterator::~nsDOMSubtreeIterator ; 21
EditAggregateTxn::GetName ; 21
nsDOMSubtreeIterator::nsDOMSubtreeIterator ; 21
nsHTMLEditRules::GetPromotedRanges ; 20
nsHTMLEditRules::GetNodesForOperation ; 20
nsRedoCommand::IsCommandEnabled ; 20
nsUndoCommand::IsCommandEnabled ; 20
DeleteTextTxn::DeleteTextTxn ; 19
DeleteTextTxn::Init ; 19
nsSelectAllCommand::IsCommandEnabled ; 19
DeleteTextTxn::`scalar deleting destructor' ; 19
DeleteTextTxn::Do ; 19
nsPasteCommand::IsCommandEnabled ; 19
DeleteTextTxn::~DeleteTextTxn ; 19
nsPlaintextEditor::CanCut ; 18
nsEditorShell::GetString ; 17
nsSelectionState::IsEqual ; 16
nsHTMLEditor::IsModifiable ; 16
nsEditorShell::GetEditorDocument ; 16
nsEditorShell::GetEditorSelection ; 15
nsMultiStateCommand::`scalar deleting destructor' ; 15
nsMultiStateCommand::~nsMultiStateCommand ; 15
nsMultiStateCommand::nsMultiStateCommand ; 15
nsEditorShell::GetDocumentModified ; 15
nsHTMLEditRules::GetListActionNodes ; 15
nsHTMLEditRules::UpdateDocChangeRange ; 14
nsHTMLEditUtils::IsList ; 13
nsEditorShell::GetListState ; 13
nsEditorController::RegisterEditorCommands ; 13
nsInterfaceState::SelectionIsCollapsed ; 13
nsInterfaceState::Notify ; 13
nsInterfaceState::TimerCallback ; 13
nsHTMLEditor::GetFirstSelectedCell ; 12
nsTextEditRules::DeleteEmptyTextNode ; 12
nsHTMLEditor::GetCellFromRange ; 12
nsEditorParserObserver::QueryInterface ; 12
PlaceholderTxn::ForwardEndBatchTo ; 12
EditAggregateTxn::Do ; 12
nsEditor::CreateTxnForDeleteText ; 11
nsPlaintextEditor::GetAbsoluteOffsetsForPoints ; 10
nsTextEditRules::DocumentIsEmpty ; 10
nsEditorShell::OnStateChange ; 10
nsPlaintextEditor::GetTextSelectionOffsets ; 10
nsHTMLEditor::GetListState ; 10
nsHTMLEditRules::GetListState ; 10
nsPlaintextEditor::GetTextLength ; 10
nsListCommand::GetCurrentState ; 10
nsPlaintextEditor::GetDocumentIsEmpty ; 10
nsPrintingCommands::IsCommandEnabled ; 9
nsEditorShellMouseListener::MouseDown ; 9
nsOutdentCommand::IsCommandEnabled ; 8
do_QueryInterface ; 8
basic_nsLiteralString<unsigned short>::Length ; 8
nsPlaintextEditor::CanCopy ; 8
nsEditorShell::DoEditorMode ; 8
nsHTMLEditor::CanPaste ; 7
nsHTMLEditorLog::DeleteSelection ; 7
nsHTMLEditRules::WillDeleteSelection ; 7
nsTextEditorMouseListener::MouseClick ; 7
nsTextEditRules::DidDeleteSelection ; 7
nsTextEditorFocusListener::Blur ; 6
nsEditorShell::StartPageLoad ; 6
dont_AddRef ; 6
nsEditorShell::StartPageLoad ; 6
EditAggregateTxn::`vector deleting destructor' ; 6
DeleteRangeTxn::`scalar deleting destructor' ; 6
nsListCommand::nsListCommand ; 6
nsInterfaceState::DidBeginBatch ; 6
nsCOMPtr<nsIDOMNode>::nsCOMPtr<nsIDOMNode> ; 6
nsListItemCommand::nsListItemCommand ; 6
DeleteRangeTxn::Init ; 6
nsPasteQuotationCommand::IsCommandEnabled ; 6
DeleteRangeTxn::Do ; 6
nsEditor::DeleteSelectionImpl ; 6
nsHTMLEditRules::WillDeleteNode ; 6
nsEditor::CreateTxnForDeleteSelection ; 6
nsHTMLEditUtils::IsHeader ; 6
nsEditor::CanUndo ; 6
DeleteRangeTxn::DeleteRangeTxn ; 6
nsHTMLEditRules::WillDeleteSelection ; 6
DeleteRangeTxn::~DeleteRangeTxn ; 6
nsEditor::CanRedo ; 6
DeleteRangeTxn::CreateTxnsToDeleteContent ; 6
nsAlignCommand::GetCurrentState ; 5
nsFontColorStateCommand::GetCurrentState ; 5
nsHTMLEditor::GetParagraphState ; 5
nsHTMLEditRules::DeleteNonTableElements ; 5
nsHTMLEditor::GetElementOrParentByTagName ; 5
nsHTMLEditor::GetBackgroundColorState ; 5
nsHTMLEditUtils::IsBlockquote ; 5
nsHTMLEditRules::GetAlignment ; 5
nsHTMLEditRules::GetParagraphFormatNodes ; 5
nsCOMPtr<nsIDOMNode>::operator= ; 5
nsHTMLEditRules::GetParagraphState ; 5
nsHTMLEditor::GetAlignment ; 5
nsBackgroundColorStateCommand::GetCurrentState ; 5
nsCOMPtr<nsISupports>::operator= ; 5
nsHTMLEditor::GetFontFaceState ; 5
nsHTMLEditRules::GetIndentState ; 5
nsParagraphStateCommand::GetCurrentState ; 5
nsHTMLEditor::GetSelectedOrParentTableElement ; 5
nsHTMLEditor::GetIndentState ; 5
nsHTMLEditor::GetFontColorState ; 5
nsFontFaceStateCommand::GetCurrentState ; 5
nsTextEditorFocusListener::Focus ; 4
nsEditor::HasSameBlockNodeParent ; 4
nsGetInterface::nsGetInterface ; 4
nsVoidArray::`scalar deleting destructor' ; 4
do_GetIOService ; 4
nsEditor::AddDocumentStateListener ; 4
nsHTMLEditor::ApplyDocumentOrOverrideStyleSheet ; 4
nsEditorParserObserver::GetTagNameAt ; 4
NS_NewURI ; 4
nsHTMLEditor::ApplyOverrideStyleSheet ; 4
do_GetService ; 4
do_GetService ; 4
nsEditorShell::GetDocumentEventReceiver ; 4
nsEditor::JoinNodesImpl ; 3
nsEditor::JoinNodes ; 3
nsEditor::RemoveEditorObserver ; 3
nsEditorShell::GetBundleString ; 3
nsParagraphStateCommand::nsParagraphStateCommand ; 3
JoinElementTxn::Do ; 3
nsEditorShell::GetSelectedElement ; 3
nsEditorController::GetInterface ; 3
nsEditorShell::HandleMouseClickOnElement ; 3
nsEditor::NodesSameType ; 3
nsHTMLEditRules::DidJoinNodes ; 3
DeleteRangeTxn::CreateTxnsToDeleteBetween ; 3
nsFontFaceStateCommand::nsFontFaceStateCommand ; 3
nsBackgroundColorStateCommand::nsBackgroundColorStateCommand ; 3
nsComposerController::~nsComposerController ; 3
nsAlignCommand::nsAlignCommand ; 3
nsFontColorStateCommand::nsFontColorStateCommand ; 3
nsComposerController::nsComposerController ; 3
nsEditor::BeginningOfDocument ; 3
JoinElementTxn::`vector deleting destructor' ; 3
nsComposerController::`vector deleting destructor' ; 3
nsInterfaceState::NotifyDocumentStateChanged ; 3
nsComposerController::RegisterComposerCommands ; 3
JoinElementTxn::Init ; 3
basic_nsAWritableString<unsigned short>::Assign ; 3
JoinElementTxn::JoinElementTxn ; 3
DeleteRangeTxn::CreateTxnsToDeleteNodesBetween ; 3
nsEditor::CreateTxnForJoinNode ; 3
nsHTMLEditorLog::BeginningOfDocument ; 3
JoinElementTxn::~JoinElementTxn ; 3
nsHTMLEditRules::WillJoinNodes ; 3
nsRemoveListCommand::IsCommandEnabled ; 3
nsInterfaceState::UpdateDirtyState ; 3
nsEditor::GetFirstEditableNode ; 3
nsHTMLEditor::GetSelectedElement ; 3
nsRangeUpdater::SelAdjJoinNodes ; 3
nsComposerController::Init ; 3
TypeInState::~TypeInState ; 2
nsEditorParserObserver::`vector deleting destructor' ; 2
basic_nsAWritableString<unsigned short>::AppendFromReadable ; 2
nsHTMLEditorLog::StopLogging ; 2
nsHTMLEditRules::Init ; 2
nsEditorShell::SetDisplayMode ; 2
nsHTMLEditRules::DidInsertNode ; 2
nsEditorShell::~nsEditorShell ; 2
nsHTMLEditor::CacheInlineStyles ; 2
nsEditorShell::LoadUrl ; 2
nsHTMLEditorLog::~nsHTMLEditorLog ; 2
nsEditorShell::DoControllerCommand ; 2
nsEditorParserObserver::nsEditorParserObserver ; 2
nsHTMLEditRules::`scalar deleting destructor' ; 2
nsEditorShell::EndDocumentLoad ; 2
nsEditorShell::StartDocumentLoad ; 2
nsEditorShell::InstantiateEditor ; 2
nsEditorParserObserver::End ; 2
nsEditor::AddEditorObserver ; 2
nsInterfaceState::NotifyDocumentWillBeDestroyed ; 2
nsEditorShellMouseListener::~nsEditorShellMouseListener ; 2
nsCOMPtr<nsIDOMCharacterData>::operator= ; 2
nsEditorShell::PrepareDocumentForEditing ; 2
nsEditorParserObserver::Start ; 2
nsEditor::DeleteText ; 2
nsHTMLEditorLog::nsHTMLEditorLog ; 2
NS_NewEditorShellMouseListener ; 2
nsEditorShell::GetDocumentTitleString ; 2
nsEditorShell::SetWebShellWindow ; 2
nsHTMLEditUtils::IsTableCellOrCaption ; 2
nsHTMLEditRules::~nsHTMLEditRules ; 2
nsEditorShell::StartPageLoad ; 2
nsHTMLEditor::TagCanContainTag ; 2
nsEditorShell::SetContentWindow ; 2
TypeInState::`scalar deleting destructor' ; 2
nsEditorShell::SetEditorType ; 2
nsInterfaceState::Init ; 2
nsHTMLEditor::~nsHTMLEditor ; 2
nsEditorParserObserver::~nsEditorParserObserver ; 2
nsHTMLEditor::ClearInlineStylesCache ; 2
nsEditorParserObserver::RegisterTagToWatch ; 2
TypeInState::TypeInState ; 2
nsHTMLEditor::InitRules ; 2
nsEditorShell::Shutdown ; 2
nsEditorShellMouseListener::nsEditorShellMouseListener ; 2
nsEditorController::DoCommand ; 2
nsEditorShell::`scalar deleting destructor' ; 2
nsHTMLEditUtils::IsParagraph ; 2
nsHTMLEditorLog::`vector deleting destructor' ; 2
nsEditorShell::nsEditorShell ; 2
nsEditorShell::ResetEditingState ; 2
nsHTMLEditor::nsHTMLEditor ; 2
nsEditorShellMouseListener::`vector deleting destructor' ; 2
nsInterfaceState::nsInterfaceState ; 2
nsEditorShell::EndPageLoad ; 2
nsEditorShell::Init ; 2
nsHTMLEditor::Init ; 2
nsHTMLEditRules::DidDeleteText ; 2
nsEditor::GetNextNode ; 2
nsEditorShell::UpdateWindowTitleAndRecentMenu ; 2
nsEditor::AddEditActionListener ; 2
nsEditorParserObserver::Release ; 2
nsEditorShell::TransferDocumentStateListeners ; 2
nsEditorShell::RegisterDocumentStateListener ; 2
nsHTMLEditRules::nsHTMLEditRules ; 2
NS_NewHTMLEditRules ; 2
nsGetterAddRefs<nsISupports>::operator nsISupports * * ; 1
nsEditorShell::GetEditorType ; 1
nsEditorController::OnEvent ; 1
nsTextEditorDragListener::DragGesture ; 1
nsHTMLEditor::CollapseSelectionToDeepestNonTableFirstChild ; 1
nsEditorController::OnEvent ; 1
nsHTMLEditor::CollapseSelectionToStart ; 1
NSGetModule ; 1
nsInterfaceState::~nsInterfaceState ; 1
nsHTMLEditUtils::IsPre ; 1
nsEditorShell::SetDocumentCharacterSet ; 1
address_of ; 1
nsHTMLEditUtils::IsAddress ; 1
nsTrivialFunctor::nsTrivialFunctor ; 1
nsInterfaceState::`scalar deleting destructor' ; 1
nsEditor::ScrollIntoView ; 1
nsHTMLEditUtils::IsTable ; 1
nsEditor::JoinNodeDeep ; 1
nsEditorController::OnEvent ; 1
nsHTMLEditor::CanDrag ; 1
nsEditorController::OnEvent ; 1
nsCOMPtr<nsIDOMRange>::nsCOMPtr<nsIDOMRange> ; 1
nsPlaintextEditor::CanPaste ; 1
