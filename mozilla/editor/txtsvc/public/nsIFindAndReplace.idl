/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
 
#include "nsISupports.idl"

interface nsITextServicesDocument;

%{ C++
#define NS_FINDANDREPLACE_CONTRACTID "@mozilla.org/textservices/findandreplace;1"
%} C++

[scriptable, uuid(E0178A21-B9A2-11d4-A3FF-000064657374)]
interface nsIFindAndReplace : nsISupports
{
  [noscript] attribute nsITextServicesDocument tsDoc;
  attribute boolean findBackwards;
  attribute boolean caseSensitive;
  attribute boolean wrapFind;
  attribute boolean entireWord;
  readonly attribute boolean replaceEnabled;

  /**
   * Find some text in the current context. The implementation is
   * responsible for performing the find and highliting the text.
   * @param aFindText The text to search for.
   * @retval Returns true if an instance of aFindText was found.
   */
  boolean Find(in wstring aFindText);

  /**
   * Finds the text specified by aFindText and replaces it with
   * the text specified by aReplaceText. The implementation is responsible
   * for performing the find, replacing the text, and finding the
   * next instance.
   * @param aFindText The text to search for.
   * @param aReplaceText The text to replace aFindText with.
   * @param aAllOccurrences If true, the Replace() call will replace all
   * instances of aFindText in the document with a ReplaceText.
   * @retval Returns true if another instance of aFindText was found.
   */
  boolean Replace(in wstring aFindText, in wstring aReplaceText, in boolean aAllOccurrences);
};
