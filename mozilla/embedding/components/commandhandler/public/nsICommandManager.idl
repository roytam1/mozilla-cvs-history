/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 *      Simon Fraser <sfraser@netscape.com>
 *
 */

#include "nsISupports.idl"
#include "nsIObserver.idl"

[scriptable, uuid(080D2001-F91E-11D4-A73C-F9242928207C)]
interface nsICommandManager : nsISupports
{

  void        addCommandObserver(in nsIObserver aCommandObserver, in wstring aCommandToObserve);
  void        removeCommandObserver(in nsIObserver aCommandObserver, in wstring aCommandObserved);

  boolean     isCommandSupported(in wstring aCommandName);

  boolean     isCommandEnabled(in wstring aCommandName);
  
  wstring     getCommandState(in wstring aCommandName);
  
  void        doCommand(in wstring aCommandName, in wstring aCommandParams);

};


/*
[scriptable, uuid()]
interface nsIObserver : nsISupports
{
  void Observe(   in nsISupports aSubject,           // The nsICommandManager calling this Observer
                  in wstring     aTopic,             // Name of the command being updated
                  in wstring     someData );         // Command state (if available)
};
*/


