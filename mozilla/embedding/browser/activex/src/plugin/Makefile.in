#!nmake
#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 

###############################################################################
# CUSTOMISE SETTINGS IN THIS SECTION AS APPROPRIATE FOR YOUR BUILD SYSTEM!

DEPTH           = ../../../../..
topsrcdir       = @top_srcdir@
srcdir          = @srcdir@
VPATH           = @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE          = npmozax
LIBRARY_NAME    = npmozax
RESFILE         = MozActiveX.res
DEFFILE         = npmozax.def
REQUIRES = \
    xpcom \
    java \
    plugin \
    string \
    dom \
    content \
    widget \
    gfx \
    js \
    pref \
    $(NULL)
XPIFILE         = mozactivex.xpi

FORCE_SHARED_LIB = 1
NO_DIST_INSTALL	= 1
NO_INSTALL = 1

# Path to the Mozilla ActiveX control (some files are copied from there)
MOZCTLSRC=$(srcdir)/../control

############
# LiveConnect settings

# MOZ_ACTIVEX_PLUGIN_LIVECONNECT = 1

# Settings that specify where the PluginSDK, Java compiler (javac or oldjavac),
# Java header file generator (javah) and classes live.
#
# You need the Netscape PluginSDK:
#
#   http://home.netscape.com/comprod/development_partners/plugin_api/index.html
#
# You also need a JDK with the old java compiler. Anything from 1.3
# downwards should do. See here for various JDK releases:
#
#   http://java.sun.com/products/archive/index.html
#
# You should use the javah found in the plugin SDK because this generates
# the JRI stubs.

ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
PLUGINSDK = c:/m/PluginSDK
SDK_JAVADIR = c:/jdk1.02
SDK_JAVAH = $(PLUGINSDK)/bin/win32/javah
SDK_JAVAC = $(SDK_JAVADIR)/bin/javac
SDK_CLASSES = $(PLUGINSDK)/classes/java_30.zip
SDK_CLASSPATH = "$(subst /,\,$(SDK_CLASSES));."
endif

############
# XPConnect settings

MOZ_ACTIVEX_PLUGIN_XPCONNECT = 1

# XPConnect support in (Netscape 6.1+/Mozilla)

############
# Windows Media Player settings

# IMPORTANT NOTE - WMP is being used as a real world test harness to exercise
#                  some of the site-side interfaces. Don't enable this option 
#                  in normal use.

# WMP support needs XPConnect
ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
# MOZ_ACTIVEX_PLUGIN_WMPSUPPORT = 1

# Path to the WMP SDK
ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
WMP_SDK = C:/m/WMSDK/WMPSDK9
endif

endif


###############################################################################

ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
XPIDLSRCS = \
    ./nsIMozAxPlugin.idl \
    $(NULL)
endif

ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
XPIDLSRCS += nsWMP.idl
endif

_CONTROL_CPPSRCS = \
    ActiveScriptSite.cpp \
    ControlEventSink.cpp \
    ControlSite.cpp \
    ControlSiteIPFrame.cpp \
    ItemContainer.cpp \
    PropertyBag.cpp \
    $(NULL)

GARBAGE	+= $(addprefix $(srcdir)/,$(_CONTROL_CPPSRCS)) $(DEFFILE)

CPPSRCS = \
    StdAfx.cpp             \
    LegacyPlugin.cpp       \
    MozActiveX.cpp         \
    PrefObserver.cpp       \
    npwin.cpp              \
    $(_CONTROL_CPPSRCS)    \
    $(NULL)

ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
CPPSRCS += XPConnect.cpp XPCDocument.cpp XPCBrowser.cpp
endif

ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
CPPSRCS += LiveConnect.cpp
CSRCS += javastubs.c
endif

ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
CPPSRCS += XPCMediaPlayer.cpp
endif

LOCAL_INCLUDES = -I$(MOZCTLSRC)

ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
LOCAL_INCLUDES += -I./_java
endif

ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
LOCAL_INCLUDES += -I$(XPIDL_GEN_DIR)
endif

ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
LOCAL_INCLUDES += -I$(WMP_SDK)/include
DEFINES += -DMOZ_ACTIVEX_PLUGIN_WMPSUPPORT
endif

OS_LIBS += \
    comdlg32.lib                   \
    ole32.lib                      \
    oleaut32.lib                   \
    uuid.lib                       \
    shell32.lib                    \
    $(NULL)

ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
DEFINES += -DMOZ_ACTIVEX_PLUGIN_LIVECONNECT
endif

ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
DEFINES += -DMOZ_ACTIVEX_PLUGIN_XPCONNECT -DXPCOM_GLUE

ifdef XPC_IDISPATCH_SUPPORT
DEFINES += -DXPC_IDISPATCH_SUPPORT
endif

EXTRA_DSO_LDOPTS = \
    $(DIST)/lib/$(LIB_PREFIX)string_s.$(LIB_SUFFIX) \
    $(DIST)/lib/$(LIB_PREFIX)string_obsolete_s.$(LIB_SUFFIX) \
    $(DIST)/lib/$(LIB_PREFIX)xpcomglue.$(LIB_SUFFIX) \
    $(MOZ_COMPONENT_LIBS) \
    $(NSPR_LIBS) \
    $(NULL)

LIBS = \
    $(DIST)/lib/$(LIB_PREFIX)string_s.$(LIB_SUFFIX) \
    $(DIST)/lib/$(LIB_PREFIX)string_obsolete_s.$(LIB_SUFFIX) \
    $(DIST)/lib/$(LIB_PREFIX)xpcomglue.$(LIB_SUFFIX) \
    $(NSPR_LIBS) \
    $(NULL)
endif

include $(topsrcdir)/config/rules.mk

CXXFLAGS += -GX

copy-sources: $(addprefix $(MOZCTLSRC)/,$(_CONTROL_CPPSRCS))
	$(INSTALL) $^ $(srcdir)

export:: copy-sources

install-plugin: $(SHARED_LIBRARY)
ifdef SHARED_LIBRARY
	$(INSTALL) $< $(DIST)/bin/plugins
endif

install-class: MozAxPlugin.class
	$(INSTALL) $< $(DIST)/bin/plugins

install-typelib: $(XPIDL_GEN_DIR)/nsIMozAxPlugin.xpt
	$(INSTALL) $< $(DIST)/bin/plugins

ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
install-wmp-typelib: $(XPIDL_GEN_DIR)/nsWMP.xpt
	$(INSTALL) $< $(DIST)/bin/plugins
endif

libs:: install-plugin

ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
libs:: install-class
endif

ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
libs:: install-typelib
endif

ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
libs:: install-wmp-typelib
endif

## Note: Ensure you create the redist dir containing the correct runtime dlls

xpi:: install.js $(SHARED_LIBRARY)
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) $<
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) $(SHARED_LIBRARY)
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) $(topsrcdir)/../redist/microsoft/system/msvcrt.dll
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) $(topsrcdir)/../redist/microsoft/system/msvcp60.dll
ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) MozAxPlugin.class
endif
ifdef MOZ_ACTIVEX_PLUGIN_XPCONNECT
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) $(XPIDL_GEN_DIR)/nsIMozAxPlugin.xpt
endif
ifdef MOZ_ACTIVEX_PLUGIN_WMPSUPPORT
	$(ZIP_PROG) -9 -j $(DIST)/bin/$(XPIFILE) $(XPIDL_GEN_DIR)/nsWMP.xpt
endif

$(SHARED_LIBRARY) : $(DEFFILE) copy-sources

$(DEFFILE):
	-rm -f $@
	@echo "; npmozax.def : Declares the module parameters." >> $@
	@echo "; This file was autogenerated by mkctldef.bat!" >> $@
	@echo "" >> $@
	@echo "LIBRARY      "npmozax.DLL"" >> $@
	@echo "EXPORTS" >> $@
	@echo "; Plugin exports" >> $@
	@echo "NP_GetEntryPoints   @1" >> $@
	@echo "NP_Initialize       @2" >> $@
	@echo "NP_Shutdown         @3" >> $@

ifdef MOZ_ACTIVEX_PLUGIN_LIVECONNECT
./MozAxPlugin.class: ./MozAxPlugin.java
	$(SDK_JAVAC) -classpath $(SDK_CLASSPATH) MozAxPlugin.java

./_java/MozAxPlugin.h \
./_java/MozAxPlugin.c: ./MozAxPlugin.class
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java MozAxPlugin
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java MozAxPlugin

./_java/java_lang_Object.h \
./_java/java_lang_Object.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Object
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Object

./_java/java_lang_Error.h \
./_java/java_lang_Error.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Error
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Error

./_java/java_lang_Throwable.h \
./_java/java_lang_Throwable.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Throwable
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Throwable

./_java/java_lang_String.h \
./_java/java_lang_String.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.String
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.String

./_java/java_lang_Boolean.h \
./_java/java_lang_Boolean.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Boolean
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Boolean

./_java/java_lang_Number.h \
./_java/java_lang_Number.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Number
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Number

./_java/java_lang_Integer.h \
./_java/java_lang_Integer.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Integer
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Integer

./_java/java_lang_Short.h \
./_java/java_lang_Short.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Short
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Short

./_java/java_lang_Long.h \
./_java/java_lang_Long.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Long
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Long

./_java/java_lang_Double.h \
./_java/java_lang_Double.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Double
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Double

./_java/java_lang_Float.h \
./_java/java_lang_Float.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Float
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Float

./_java/java_lang_Byte.h \
./_java/java_lang_Byte.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Byte
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Byte

./_java/java_lang_Character.h \
./_java/java_lang_Character.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java java.lang.Character
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java java.lang.Character

./_java/netscape_plugin_Plugin.h \
./_java/netscape_plugin_Plugin.c : $(SDK_CLASSES)
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -d _java netscape.plugin.Plugin
	$(SDK_JAVAH) -classpath $(SDK_CLASSPATH) -jri -stubs -d _java netscape.plugin.Plugin

javastubs.c : \
    ./MozAxPlugin.class             \
    ./_java/MozAxPlugin.c \
    ./_java/netscape_plugin_Plugin.c \
    ./_java/java_lang_Object.c     \
    ./_java/java_lang_Throwable.c  \
    ./_java/java_lang_Error.c      \
    ./_java/java_lang_String.c     \
    ./_java/java_lang_Boolean.c    \
    ./_java/java_lang_Number.c     \
    ./_java/java_lang_Integer.c    \
    ./_java/java_lang_Long.c       \
    ./_java/java_lang_Double.c     \
    ./_java/java_lang_Float.c      \
    ./_java/java_lang_Character.c  \
    $(NULL)

LiveConnect.cpp: StdAfx.h \
    ./MozAxPlugin.class             \
    ./_java/MozAxPlugin.h \
    ./_java/netscape_plugin_Plugin.h \
    ./_java/java_lang_Object.h       \
    ./_java/java_lang_Throwable.h    \
    ./_java/java_lang_Error.h        \
    ./_java/java_lang_String.h       \
    ./_java/java_lang_Boolean.h      \
    ./_java/java_lang_Number.h       \
    ./_java/java_lang_Integer.h      \
    ./_java/java_lang_Long.h         \
    ./_java/java_lang_Double.h       \
    ./_java/java_lang_Float.h        \
    ./_java/java_lang_Character.h    \
    $(NULL)
endif

