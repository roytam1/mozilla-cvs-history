# 
# The contents of this file are subject to the Mozilla Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
# 
# The Original Code is the Mozilla browser.
# 
# The Initial Developer of the Original Code is Christopher
# Blizzard. Portions created by Christopher Blizzard are
# Copyright (C) 1999, Mozilla.  All Rights Reserved.
# 
# Contributor(s):
#   Christopher Blizzard <blizzard@mozilla.org>

DEPTH		= ../../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= gtkembedmoz
LIBRARY_NAME	= gtkembedmoz
REQUIRES	= xpcom \
		  string \
		  docshell \
		  webshell \
		  necko \
		  widget \
		  dom \
		  js \
		  gfx \
		  layout \
		  content \
		  uriloader \
		  webbrwsr \
		  shistory \
		  embed_base \
		  pref \
		  windowwatcher \
		  profdirserviceprovider \
		  $(NULL)

ifdef ACCESSIBILITY
REQUIRES        += accessibility
endif

CPPSRCS		= \
		gtkmozembed2.cpp \
		EmbedPrivate.cpp \
		EmbedWindow.cpp \
		EmbedProgress.cpp \
		EmbedContentListener.cpp \
		EmbedEventListener.cpp \
		EmbedWindowCreator.cpp \
		EmbedStream.cpp

ifdef MOZ_ENABLE_GTK2
CSRCS           = \
		gtkmozembedmarshal.c
CPPSRCS         += \
		EmbedPrompter.cpp \
		GtkPromptService.cpp
endif

# Force applications to be built non-statically
# when building the mozcomps meta component
ifneq (,$(filter mozcomps,$(MOZ_META_COMPONENTS)))
BUILD_STATIC_LIBS=
BUILD_SHARED_LIBS=1
endif

ifdef BUILD_STATIC_LIBS
# Static build stuff
DEFINES         += -D_BUILD_STATIC_BIN=1
CPPSRCS		+= EmbedComponents.cpp

XP_LIBS		+= \
		$(PNG_LIBS) \
		$(JPEG_LIBS) \
		$(ZLIB_LIBS) \
		$(MOZ_GDK_PIXBUF_LIBS) \
		$(MOZ_XIE_LIBS) \
		$(MOZ_XPRINT_LDFLAGS) \
		$(NULL)

ifdef MOZ_PSM
XP_LIBS		+= \
		$(NSS_LIBS) \
		$(NULL)
endif

endif

SHARED_LIBRARY_LIBS= \
		$(DIST)/lib/libembed_base_s.$(LIB_SUFFIX) \
		$(DIST)/lib/libprofdirserviceprovider_s.$(LIB_SUFFIX) \
		$(NULL)

EXPORTS		= \
		gtkmozembed.h \
		gtkmozembed_internal.h

ifdef MOZ_ENABLE_GTK
EXTRA_DSO_LDOPTS = \
		$(MOZ_COMPONENT_LIBS) \
		$(XPCOM_GLUE_LIBS) \
		-lgtksuperwin \
		$(NULL)
endif

ifdef MOZ_ENABLE_GTK2
EXTRA_DSO_LDOPTS = \
		$(MOZ_COMPONENT_LIBS) \
		$(NULL)
endif

EXTRA_DSO_LDOPTS += $(MOZ_GTK_LDFLAGS) $(MOZ_GTK2_LIBS)

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_ARCH), SunOS)
ifndef GNU_CC
# When using Sun's WorkShop compiler, including
# /wherever/workshop-5.0/SC5.0/include/CC/std/time.h
# causes most of these compiles to fail with:
# line 29: Error: Multiple declaration for std::tm.
# So, this gets around the problem.
DEFINES         += -D_TIME_H=1
endif
endif

CXXFLAGS        += $(MOZ_GTK_CFLAGS) $(MOZ_GTK2_CFLAGS)
CFLAGS          += $(MOZ_GTK_CFLAGS) $(MOZ_GTK2_CFLAGS)

ifdef BUILD_STATIC_LIBS

ifdef MOZ_FAT_EMBED
EMBED_LINK_COMP_NAMES=$(FINAL_LINK_COMP_NAMES)
else
EMBED_LINK_COMP_NAMES=embed-link-comp-names
endif

# We need to get a list of modules to include as static components,
# from the packaging system.
embed-link-comp-names:
	$(PERL) $(topsrcdir)/build/package/static-comps.pl -o $(DEPTH) -l $(topsrcdir)/build/package/packages.list -vv -m $@ -i embed-link-comps gtkembed
	sed -i -e 's/^$(LIB_PREFIX)//' -e 's/\.$(LIB_SUFFIX)$$//' embed-link-comps

EmbedComponents.cpp: EmbedComponents.cpp.in Makefile Makefile.in $(EMBED_LINK_COMP_NAMES)
	cat $< | \
	sed -e "s|%DECL_NSGETMODULES%|$(foreach m,$(shell cat $(EMBED_LINK_COMP_NAMES)),DECL_NSGETMODULE($(m)))|" | \
	sed -e "s|%MODULE_LIST%|$(foreach m, $(shell cat $(EMBED_LINK_COMP_NAMES)),MODULE($(m)),)|" \
	> $@

GARBAGE += EmbedComponents.cpp embed-link-comp-names
endif
