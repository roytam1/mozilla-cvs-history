<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<title> nsIAccessible Interface Test Case </title>
<!-- Descrpt: Test nsIAccessible Interface methods for HTML Button Text Node
     Author: dsirnapalli@netscape.com
     Revs: 01.08.02 - Created
     Last Run On:01.23.02.

   - The contents of this file are subject to the Mozilla Public
   - License Version 1.1 (the "License"); you may not use this file
   - except in compliance with the License. You may obtain a copy of
   - the License at http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS
   - IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
   - implied. See the License for the specific language governing
   - rights and limitations under the License.
   -
   - The Original Code is Mozilla Communicator Test Cases.
   -
   - The Initial Developer of the Original Code is Netscape Communications
   - Corp.  Portions created by Netscape Communications Corp. are
   - Copyright (C) 1999 Netscape Communications Corp.  All
   - Rights Reserved.
   -
   - Contributor(s):
  -->
<head>

<!-- script below is ngdriverspecific  -->
<script type="text/javascript" src="http://bubblegum/ngdriver/suites/testlib.js">
</script>

<script type="text/javascript" src="accessibility.js"></script>

<script type="text/javascript">

function getDomNodeButtonText()
{
 try{
  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

  var node = document.getElementsByTagName("button").item(0);
  return node;
 }
 catch(e){
  alert("Exception: " + e);
 }
}

function executeTestCase()
{
  var domNode = getDomNodeButtonText();
  accNode = getAccessibleNode(domNode);
  try{
   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

   accNode.accTakeFocus();
   domNode = domNode.firstChild;
   accNode = getAccessibleNode(domNode);

   setTimeout("constructResults();", 2000);
  }
  catch(e){
   alert("Exception**: " + e);
  }
}

function constructResults()
{
  try{
   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

   var name = getName(accNode);
   var role = getRole(accNode);
   var state = getState(accNode);
   var value = getValue(accNode);
   var newvalue = value.toString();
  }
  catch(e){
   alert("Exception**: " + e);
  }

  var expectedName   = " Submit ";
  var expectedRole   = "42";
  var expectedState  = "2097216";
  var expectedValue  = "NS_ERROR_NOT_IMPLEMENTED";

  var row0 = new Array("Property/Method", "Expected Values", "Actual Values", "Result");
  var row1 = new Array("Name->", expectedName, name);
  var row2 = new Array("Role->", expectedRole, role);
  var row3 = new Array("State->", expectedState, state);
  var row4 = new Array("Value->", expectedValue, value);

  if (name == expectedName)      row1[3] = "PASS"; else row1[3] = "FAIL";
  if (role == expectedRole)      row2[3] = "PASS"; else row2[3] = "FAIL";
  if (state == expectedState)    row3[3] = "PASS"; else row3[3] = "FAIL";
  if (newvalue.search("NS_ERROR_NOT_IMPLEMENTED"))
                                 row4[3] = "PASS"; else row4[3] = "FAIL";

  res += "<table border cols=4 width='70%'>";
  res += "<tr>";
  for(col=0; col<4; col++)
    res += "<td><b>" + row0[col] + "</b></td>";
  res += "</tr>";
  res += "<tr>";
  for(col=0; col<4; col++)
  {
   if(row1[col] == "FAIL")
    res += "<td bgcolor='#FF0000'>" + row1[col] + "</td>";
   else
    res += "<td>" + row1[col] + "</td>";
  }
  res += "</tr>";
  res += "<tr>";
  for(col=0; col<4; col++)
  {
   if(row2[col] == "FAIL")
    res += "<td bgcolor='#FF0000'>" + row2[col] + "</td>";
   else
    res += "<td>" + row2[col] + "</td>";
  }
  res += "</tr>";
  res += "<tr>";
  for(col=0; col<4; col++)
  {
   if(row3[col] == "FAIL")
    res += "<td bgcolor='#FF0000'>" + row3[col] + "</td>";
   else
    res += "<td>" + row3[col] + "</td>";
  }
  res += "</tr>";
  res += "<tr>";
  for(col=0; col<4; col++)
  {
   if(row4[col] == "FAIL")
    res += "<td bgcolor='#FF0000'>" + row4[col] + "</td>";
   else
    res += "<td>" + row4[col] + "</td>";
  }
  res += "</tr>";
  res += "</table>";

  submitToCookie();
}

function submitToCookie()
{
  createCookie("nsIAccessibleTestButtonNodeText", res, 14);
  setTimeout("window.location.reload();", 2000);
}

</script>
</head>
<body>

<!-- form below is ngdriverspecific  -->
<form name="results" action="/ngdriver/cgi-bin/writeresults.cgi" method="post">
<script type="text/javascript">
document.write('<input name="resultsfile" type="hidden" value="' + window.opener.document.resultsform.resultsfile.value + '">');
</script>
<input type="hidden" name="textarea">
</form>

<script type="text/javascript">

var res = "<b><u> Results for HTML Button Text Node:</u></b><br><br>";
if(readCookie("nsIAccessibleTestButtonNodeText") == null)
{
  <!-- Test Button -->

  document.write('<br>');
  document.write('Testing Button..<br><br>');
  document.write('<button value="submit"> Submit </button>');

  setTimeout("executeTestCase();", 2000);
}
else
{
  var cookieValue = readCookie("nsIAccessibleTestButtonNodeText");
  eraseCookie("nsIAccessibleTestButtonNodeText");
  displayResults(cookieValue);
}

</script>
</body>
</html>
