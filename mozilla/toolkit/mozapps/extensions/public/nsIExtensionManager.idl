/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Extension Manager.
 *
 * The Initial Developer of the Original Code is Ben Goodger.
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Ben Goodger <ben@bengoodger.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

interface nsIInputStream;
interface nsIRDFDataSource;
interface nsIVariant;

[scriptable, uuid(37648f86-0f77-4007-929e-673a75d5438f)]
interface nsIExtensionItem : nsISupports
{
  readonly attribute string   id;
  readonly attribute string   version;
  readonly attribute wstring  name;
  readonly attribute long     row;
  readonly attribute wstring  xpiURL;

  const unsigned short TYPE_EXTENSION   = 0x01;
  const unsigned short TYPE_THEME       = 0x02;
  const unsigned short TYPE_LOCALE      = 0x04;

  readonly attribute long     type;

  void init(in string aID, in string aVersion, in wstring aName, 
            in long aRow, in wstring aXPIURL, in long aType);

  readonly attribute wstring objectSource;
};

[scriptable, uuid(c3515b0f-99f4-453b-805e-1fdf5724d6d9)]
interface nsIExtensionManager : nsISupports
{
  void installExtensionFromStream(in nsIInputStream aStream, in boolean aUseProfile);
  void uninstallExtension(in string aExtensionID);
  void enableExtension(in string aExtensionID);
  void disableExtension(in string aExtensionID);

  void installTheme(in string aThemeID);
  void uninstallTheme(in string aThemeID);

  const unsigned short UPDATE_TYPE_MISMATCH = 0x01;
  const unsigned short UPDATE_TYPE_USERINVOKED = 0x02;
  const unsigned short UPDATE_TYPE_BACKGROUND = 0x04;

  const unsigned short UPDATE_RESULT_OK = 0x00;
  const unsigned short UPDATE_RESULT_RESTART = 0x01;

  unsigned short update([array, size_is(aItemCount)] in nsIExtensionItem aItems,
                        in unsigned long aItemCount,
                        in unsigned short aUpdateType);

  readonly attribute nsIRDFDataSource datasource;
};

[scriptable, uuid(c0b7517f-0b3a-41a2-bde8-ba3ac8a5af47)]
interface nsIExtensionItemUpdater : nsISupports
{
  void checkForUpdates();
};

