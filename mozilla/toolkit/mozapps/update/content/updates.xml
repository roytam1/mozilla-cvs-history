<?xml version="1.0"?>

<!DOCTYPE bindings SYSTEM "chrome://mozapps/locale/update/updates.dtd">

<bindings id="updatesBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="link" extends="chrome://global/content/bindings/text.xml#text-base">
    <content>
      <xul:label xbl:inherits="value=label,crop" class="linkLabel" flex="1"/>
    </content>
    <implementation>
      <property name="href"
                onget="return this.getAttribute('href');"
                onset="this.setAttribute('href', val); return val;"/>
    </implementation>
    <handlers>
      <handler event="keypress" keycode="VK_ENTER" action="this.click()" />
      <handler event="keypress" keycode="VK_RETURN" action="this.click()" />
      <handler event="click">
      <![CDATA[
        if (event.button != 0)
          return;
          
# If we're not a browser, use the external protocol service to load the URI.
#ifndef MOZ_PHOENIX
        var uri = Components.classes["@mozilla.org/network/io-service;1"]
                            .getService(Components.interfaces.nsIIOService)
                            .newURI(this.getAttribute("href"), null, null);

        var protocolSvc = Components.classes["@mozilla.org/uriloader/external-protocol-service;1"]
                                    .getService(Components.interfaces.nsIExternalProtocolService);
        if (protocolSvc.isExposedProtocol(uri.scheme))
          protocolSvc.loadUrl(uri);
# If we're a browser, open a new browser window instead.    
#else
        var ww = Components.classes["@mozilla.org/embedcomp/window-watcher;1"]
                           .getService(Components.interfaces.nsIWindowWatcher);
        var ary = Components.classes["@mozilla.org/supports-array;1"]
                            .createInstance(Components.interfaces.nsISupportsArray);
        var url = Components.classes["@mozilla.org/supports-string;1"]
                            .createInstance(Components.interfaces.nsISupportsString);
        url.data = this.getAttribute("href")
        ary.AppendElement(url);
        
        ww.openWindow(null, "chrome://browser/content/browser.xul",
                      "_blank", "chrome,all,dialog=no", ary);
#endif
      ]]>
      </handler>
    </handlers>
  </binding>
  
  <binding id="update-info">
    <resources>
      <stylesheet src="chrome://mozapps/content/update/updates.css"/>
    </resources>
    <content>
      <xul:hbox flex="1" align="center">
        <xul:image class="updateImage" src="chrome://branding/content/icon64.png"/>
        <xul:vbox flex="1">
          <xul:label class="updateType" xbl:inherits="value=displayType"/>
          <xul:label class="updateName" flex="1" crop="right" xbl:inherits="value=name"/>
          <xul:description class="updateForMoreInfo">&forMoreInfo.label;
            <xul:link class="updateMoreInfoURL" xbl:inherits="value=url">&clickHere.label;</xul:link>
          </xul:description>
        </xul:vbox>
      </xul:hbox>
    </content>
    <implementation>
      <method name="_item">
        <parameter name="class"/>
        <body><![CDATA[
          return document.getAnonymousElementByAttribute(this, "class", class);
        ]]></body>
      </method>
      <property name="name" 
                onget="return this._item('updateName').value;"
                onset="this._item('updateName').value = val; return val;"/>
      <property name="type" 
                onget="return this._item('updateType').getAttribute('type');"
                onset="this._item('updateType').setAttribute('type', val); return val;"/>
      <property name="displayType" 
                onget="return this._item('updateType').value;"
                onset="this._item('updateType').value = val; return val;"/>
      <property name="url" 
                onget="return this._item('updateMoreInfoURL').href;"
                onset="this._item('updateMoreInfoURL').href = val; return val;"/>
    </implementation>
  </binding>
  
  <binding id="compatibility-alert">
  
  </binding>
</bindings>

