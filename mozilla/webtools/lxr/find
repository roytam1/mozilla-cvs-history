#!/usr/bin/perl
# $Id$

# find   --	Find files
#
#	Arne Georg Gleditsch <argggh@ifi.uio.no>
#	Per Kristian Gjermshus <pergj@ifi.uio.no>
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

######################################################################

use lib 'lib';
use LXR::Common;
use LXR::Config;

sub find {
    print(qq{
<p align=center>
Search for files (by name) using <a href="search-help.html">regular expressions</a>.
</p>
});
print (qq#
<script>
function changetarget() {
 if (document.getElementById) {
  var form = document.getElementById('find');
  var target = document.getElementById('tree');
  form.action='../'+target.value+'/find';
 }
}
</script>
#);

    print ("<form name=find id=find method=get action=\"find\">\n");

    foreach ($Conf->allvariables) {
	if ($Conf->variable($_) ne $Conf->vardefault($_)) {
	    print("<input type=hidden name=\"",$_, "\" ",
		  "value=\"", $Conf->variable($_), "\">\n");
	}
    }			       
    
    $searchtext =~ s/\+/ /g;
    $searchtext =~ s/%2b/+/ig;
    print(qq{
<b>Find file: </b><input type=text name="string"
value="$searchtext" size=50>
in <select name=tree id=tree onchange='changetarget()'>
});
my @treelist = @{$Conf->{'trees'}};
print "<!-- ".$Conf->{'treename'}." -->";
foreach my $othertree (@treelist) {
my $default=$othertree eq $Conf->{'treename'} ? ' selected=1' : '';
print "<option$default value='$othertree'>$othertree</option>
";
}
print (qq{</select>
<input type=submit value="search">
</form>
});
if (0) {
print "Research using ";
foreach my $othertree (@treelist) {
print "<a href='../$othertree/find?string=$searchtext'>$othertree</a> ";
}
print "<br>";
}
    $searchtext =~ s/\+/\\+/g;

    if ($searchtext ne "") {
	my $filename = $Conf->dbdir."/.glimpse_filenames";
	unless (open(FILELLISTING,$filename)) {
	    &warning("Could not open $filename");
	    return;
	}
	print("<P><hr>\n");
        print("<p><i>If you can't find what you're looking for, you can always <a href='search?string=$searchtext&regexp=on'>search</a> for it.</i></p>"); 
	$sourceroot = $Conf->sourceroot;
	$file = <FILELLISTING>;
	if ($file !~ /^\d+$/) {
	    &warning("glimpse file format doesn't match expectations.");
	    return;
	}
	while($file = <FILELLISTING>) {
	    $file =~ s/^$sourceroot//;
	    if($file =~ /$searchtext/i) {
		my $filepath='';
		my $filename;
		($file,$filename)=split m|/(?!.*/)|, $file;
                if (length $file) {
		    foreach my $filepart (split m|/|, $file) {
			$filepath .= "$filepart/";
			print(&fileref($filepart ? $filepart : '/', "$filepath"),
				$filepart && '/');
		    }
                } else {
		    $filepath = '/';
		    print(&fileref('/', "/"));
		}
		$filepath.=$filename;
		print(&fileref("$filename", "$filepath"),
		      "<br>\n");
	    }
	}
    }
}


($Conf, $HTTP, $Path, $head) = &init;
$searchtext = $HTTP->{'param'}->{'string'};
my $tree = $HTTP->{'param'}->{'tree'};
if ($tree && ($tree ne $Conf->{'treename'})) {
$head .= "Refresh: 0; url=../$tree/find?string=$searchtext
";
}
print "$head
";

&makeheader('find');
&find;
&makefooter('find');

