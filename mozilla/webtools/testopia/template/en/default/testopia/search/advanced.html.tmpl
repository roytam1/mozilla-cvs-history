[%# 1.0@bugzilla.org %]
[%# The contents of this file are subject to the Mozilla Public
  # License Version 1.1 (the "License"); you may not use this file
  # except in compliance with the License. You may obtain a copy of
  # the License at http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS
  # IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  # implied. See the License for the specific language governing
  # rights and limitations under the License.
  #
  # The Original Code is the Bugzilla Test Runner System.
  #
  # The Initial Developer of the Original Code is Maciej Maczynski.
  # Portions created by Maciej Maczynski are Copyright (C) 2001
  # Maciej Maczynski. All Rights Reserved.
  #
  # Contributor(s): Greg Hendricks <ghendricks@novell.com>
  #%]

[%# INTERFACE:
  # ...
  #%]

[%############################################################################%]
[%# Template Initialization                                                  #%]
[%############################################################################%]

[% PROCESS global/variables.none.tmpl %]

[%############################################################################%]
[%# Page Header                                                              #%]
[%############################################################################%]

[% PROCESS global/header.html.tmpl %]
[% PROCESS testopia/messages.html.tmpl %]
[% PROCESS testopia/style.none.tmpl %]
[% PROCESS testopia/blocks.html.tmpl %]


[% tabs = [ { name => 'case', description => "Find Test Cases" },
            { name => 'run',  description => "Find Test Runs"  },
            { name => 'plan', description => "Find Test Plans" },
            { name => 'case_run', description => "Find Test Case-Runs" },
            { name => 'environment', description => "Find Test Run Environments" }, ] %]
            
<script src="testopia/dojo/dojo.js" type="text/javascript"></script>
<script src="testopia/js/util.js" type="text/javascript"></script>

<script type="text/javascript">
    function fillSelects (data){
        var xmldocroot = data.documentElement;
        var tab = '[% current_tab FILTER none %]';
        
        if (tab == 'run' || tab == 'plan'){
          var versions   = xmldocroot.getElementsByTagName('version');
          var selVersion = document.getElementById("default_product_version");
          selVersion.options.length = 0;
          for (i=0; i< versions.length; i++){
            var id = versions[i].firstChild.nodeValue;
            var name = versions[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selVersion,myOp);
          }
        }
        if (tab == 'run'){
          var milestones = xmldocroot.getElementsByTagName('milestone');
          var builds     = xmldocroot.getElementsByTagName('build');
          var environment  = xmldocroot.getElementsByTagName('environment');

          var selMilestone = document.getElementById("milestone");
          var selBuild     = document.getElementById("build");
          var selEnv       = document.getElementById("environment");

          selBuild.options.length = 0;
          selMilestone.options.length = 0;
          for (i=0; i< milestones.length; i++){
            var id = milestones[i].firstChild.nodeValue;
            var name = milestones[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selMilestone,myOp);
          }
          for (i=0; i< builds.length; i++){
            var id = builds[i].firstChild.nodeValue;
            var name = builds[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selBuild,myOp);
          }
          for (i=0; i< environment.length; i++){
            var id = environment[i].firstChild.nodeValue;
            var name = environment[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selEnv,myOp);
          }

        }
        if (tab == 'case_run'){
          var milestones = xmldocroot.getElementsByTagName('milestone');
          var builds     = xmldocroot.getElementsByTagName('build');
          var components = xmldocroot.getElementsByTagName('component');
          var categories = xmldocroot.getElementsByTagName('category');
          var environment = xmldocroot.getElementsByTagName('environment');

          var selMilestone = document.getElementById("milestone");
          var selBuild     = document.getElementById("build");
          var selComponent = document.getElementById("component");
          var selCategory  = document.getElementById("category");
          var selEnv       = document.getElementById("environment");
                    
          selComponent.options.length = 0;
          selCategory.options.length = 0;
          selBuild.options.length = 0;
          selMilestone.options.length = 0;
          
          for (i=0; i< milestones.length; i++){
            var id = milestones[i].firstChild.nodeValue;
            var name = milestones[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selMilestone,myOp);
          }
          for (i=0; i< builds.length; i++){
            var id = builds[i].firstChild.nodeValue;
            var name = builds[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selBuild,myOp);
          }
          for (i=0; i< components.length; i++){
            var id = components[i].firstChild.nodeValue;
            var name = components[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selComponent,myOp);
          }
          for (i=0; i< categories.length; i++){
            var id = categories[i].firstChild.nodeValue;
            var name = categories[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selCategory,myOp);
          }
          for (i=0; i< environment.length; i++){
            var id = environment[i].firstChild.nodeValue;
            var name = environment[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selEnv,myOp);
          }
        
        }
        if (tab == 'case' || tab == ''){
          var components = xmldocroot.getElementsByTagName('component');
          var categories = xmldocroot.getElementsByTagName('category');
          var selComponent = document.getElementById("component");
          var selCategory  = document.getElementById("category");
          selComponent.options.length = 0;
          selCategory.options.length = 0;
          for (i=0; i< components.length; i++){
            var id = components[i].firstChild.nodeValue;
            var name = components[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selComponent,myOp);
          }
          for (i=0; i< categories.length; i++){
            var id = categories[i].firstChild.nodeValue;
            var name = categories[i].firstChild.nodeValue;
            var myOp = new Option(name, id);
            addOption(selCategory,myOp);
          }
        }
    }

  function onProductSelection(){
    var prod = document.getElementById("product_id");
    var ids = new Array;
    for (var i=0; i<prod.options.length; i++){
      if (prod.options[i].selected == true)
        ids.push(prod.options[i].value);
    }
    dojo.require("dojo.io");
    dojo.io.bind({
        url:     "tr_query.cgi",
        content: {  current_tab: "[% current_tab FILTER none %]", prod_ids: ids.join(","), action: "getversions" },
        load:    function(type, data, evt){ fillSelects(data);},
        error:   function(type, error){ alert("ERROR");},
        mimetype: "text/xml"
    });

  }
  
</script>
<table cellspacing="0" cellpadding="10" border="0" width="100%">
  <tr>
    <td class="spacer">&nbsp;</td>
    [% FOREACH tab = tabs %]
      [% IF tab.name == current_tab %]
        <td align="center" bgcolor="lightblue" class="selected_tab">
          [% tab.description %]
        </td>
      [% ELSE %]
        <td align="center" bgcolor="#BBBBEE" class="unselected_tab">
          <a href="tr_query.cgi?current_tab=[% tab.name %][% '&report=1' IF report %]" >
            [% tab.description %]
          </a>
        </td>
      [% END %]
     [% END %]
    <td class="spacer">&nbsp;</td>
  </tr>
</table>

[% PROCESS testopia/search/variables.none.tmpl %]
        
[% IF current_tab == 'plan' %]
  [% PROCESS testopia/search/plan.html.tmpl %]
[% ELSIF current_tab == 'run' %]
  [% PROCESS testopia/search/run.html.tmpl %]
[% ELSIF current_tab == 'case_run' %]
  [% PROCESS testopia/search/caserun.html.tmpl %]
[% ELSIF current_tab == 'environment' %]
  [% PROCESS testopia/search/environment.html.tmpl %]
[% ELSE %]
  [% PROCESS testopia/search/case.html.tmpl %]
[% END %]

[% PROCESS global/footer.html.tmpl %]
