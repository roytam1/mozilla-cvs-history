<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><title /><meta name="generator" content="StarOffice/OpenOffice.org XSLT (http://xml.openoffice.org/sx2ml)" /><meta name="created" content="2006-05-18T09:00:03" /><meta name="changedby" content="Greg Hendricks" /><meta name="changed" content="2006-10-26T11:54:49" /><base href="." /><style type="text/css">
	@page { size: 8.5inch 11inch; margin-top: 1inch; margin-bottom: 1inch; margin-left: 1.25inch; margin-right: 1.25inch }
	table { border-collapse:collapse; border-spacing:0; empty-cells:show }
	td, th { vertical-align:top; }
	h1, h2, h3, h4, h5, h6 { clear:both }
	ol, ul { padding:0; }
	* { margin:0; }
	*.fr1 { vertical-align:top; text-align:center; }
	*.fr2 { vertical-align:top; text-align:center; }
	*.Graphics { vertical-align:top; text-align:center; }
	*.Caption { font-family:'Bitstream Vera Serif'; font-size:10pt; margin-top:0.0835in; margin-bottom:0.0835in; font-style:italic; }
	*.Contents1 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0in; margin-right:0in; text-indent:0inch; }
	*.Contents10 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:1.7689in; margin-right:0in; text-indent:0inch; }
	*.Contents2 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.1965in; margin-right:0in; text-indent:0inch; }
	*.Contents3 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.3929in; margin-right:0in; text-indent:0inch; }
	*.Contents4 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.5898in; margin-right:0in; text-indent:0inch; }
	*.Contents5 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.7862in; margin-right:0in; text-indent:0inch; }
	*.Contents6 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.9827in; margin-right:0in; text-indent:0inch; }
	*.Contents7 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:1.1791in; margin-right:0in; text-indent:0inch; }
	*.Contents8 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:1.3756in; margin-right:0in; text-indent:0inch; }
	*.Contents9 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:1.572in; margin-right:0in; text-indent:0inch; }
	*.ContentsHeading { font-family:Arial; font-size:16pt; margin-top:0.1665in; margin-bottom:0.0835in; margin-left:0in; margin-right:0in; text-indent:0inch; font-weight:bold; }
	*.Heading { font-family:Arial; font-size:14pt; margin-top:0.1665in; margin-bottom:0.0835in; }
	*.Heading1 { font-family:Arial; font-size:115%; margin-top:0.1665in; margin-bottom:0.0835in; font-weight:bold; }
	*.Heading2 { font-family:Arial; font-size:14pt; margin-top:0.1665in; margin-bottom:0.0835in; font-style:italic; font-weight:bold; }
	*.Heading3 { font-family:Arial; font-size:14pt; margin-top:0.1665in; margin-bottom:0.0835in; font-weight:bold; }
	*.Heading4 { font-family:Arial; font-size:85%; margin-top:0.1665in; margin-bottom:0.0835in; font-style:italic; font-weight:bold; }
	*.Index { font-family:'Bitstream Vera Serif'; font-size:12pt; }
	*.IndexHeading { font-family:Arial; font-size:16pt; margin-top:0.1665in; margin-bottom:0.0835in; margin-left:0in; margin-right:0in; text-indent:0inch; font-weight:bold; }
	*.List { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-top:0in; margin-bottom:0.0835in; }
	*.P1 { font-family:Arial; font-size:115%; margin-top:0.1665in; margin-bottom:0.0835in; font-weight:bold; }
	*.P10 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-top:0in; margin-bottom:0.0835in; }
	*.P11 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-top:0in; margin-bottom:0.0835in; font-style:normal; }
	*.P12 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-top:0in; margin-bottom:0.0835in; }
	*.P2 { font-family:'Bitstream Vera Serif'; font-size:40pt; margin-top:0in; margin-bottom:0.0835in; text-align:center ! important; }
	*.P3 { font-family:'Bitstream Vera Serif'; font-size:16pt; margin-top:0in; margin-bottom:0.0835in; text-align:center ! important; }
	*.P4 { font-family:Arial; font-size:16pt; margin-top:0.1665in; margin-bottom:0.0835in; margin-left:0in; margin-right:0in; text-indent:0inch; font-weight:bold; }
	*.P5 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0in; margin-right:0in; text-indent:0inch; }
	*.P6 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.3929in; margin-right:0in; text-indent:0inch; }
	*.P7 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.1965in; margin-right:0in; text-indent:0inch; }
	*.P8 { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-left:0.5898in; margin-right:0in; text-indent:0inch; }
	*.P9 { font-family:Arial; font-size:115%; margin-top:0.1665in; margin-bottom:0.0835in; font-weight:bold; }
	*.PreformattedText { font-family:'Courier New'; font-size:10pt; margin-top:0in; margin-bottom:0in; }
	*.Standard { font-family:'Bitstream Vera Serif'; font-size:12pt; }
	*.TableContents { font-family:'Bitstream Vera Serif'; font-size:12pt; }
	*.TableHeading { font-family:'Bitstream Vera Serif'; font-size:12pt; text-align:center ! important; font-style:italic; font-weight:bold; }
	*.Textbody { font-family:'Bitstream Vera Serif'; font-size:12pt; margin-top:0in; margin-bottom:0.0835in; }
	*.Sect1 { }
	*.Table1 { width:6in; float:none; }
	*.Table1A1 { padding:0.0382in; border-left-width:0.0133cm; border-left-style:solid; border-left-color:#000000; border-right-style:none; border-top-width:0.0133cm; border-top-style:solid; border-top-color:#000000; border-bottom-width:0.0133cm; border-bottom-style:solid; border-bottom-color:#000000; }
	*.Table1A2 { padding:0.0382in; border-left-width:0.0133cm; border-left-style:solid; border-left-color:#000000; border-right-style:none; border-top-style:none; border-bottom-width:0.0133cm; border-bottom-style:solid; border-bottom-color:#000000; }
	*.Table1B1 { padding:0.0382in; border-width:0.0133cm; border-style:solid; border-color:#000000; }
	*.Table1B2 { padding:0.0382in; border-left-width:0.0133cm; border-left-style:solid; border-left-color:#000000; border-right-width:0.0133cm; border-right-style:solid; border-right-color:#000000; border-top-style:none; border-bottom-width:0.0133cm; border-bottom-style:solid; border-bottom-color:#000000; }
	*.Table1A { width:1.6056in; }
	*.Table1B { width:4.3944in; }
	*.BulletSymbols { font-family:StarSymbol; font-size:9pt; }
	*.EndnoteSymbol { }
	*.FootnoteSymbol { }
	*.Internetlink { color:#000080; text-decoration:underline; }
	*.NumberingSymbols { }
	*.SourceText { font-family:'Cumberland AMT'; }
	*.T1 { font-style:italic; }
	*.T2 { font-style:normal; }
	*.VisitedInternetLink { color:#800000; text-decoration:underline; }
	</style></head><body dir="ltr"><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><div class="Textbody"><img width="480" height="592" alt="" src="file:///home/ghendricks/workspace/bnc-2.22/testopia/doc/" class="fr1" /></div><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="Textbody"> </p><p class="P2">Bugzilla Testopia </p><p class="P3"><a href="http://www.mozilla.org/projects/testopia">http://www.mozilla.org/projects/testopia</a></p><p class="P4">Table of Contents </p><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Introduction</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Test Plans</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Test Cases</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Test Runs</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Installation</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Requirements</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Steps</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>The Big Picture</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Test Plans</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Fields</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Name</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Product</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Product Version</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Type</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Plan Document</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Commands</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Archive</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Print</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>History</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Cloning a Plan</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Link vs Copy</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Categories</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Name</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Description</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Builds</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Name</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Milestone</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Description</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Test Cases</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Fields</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Summary</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Alias</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Status</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Proposed</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Confirmed</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Disabled</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Priority</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Category</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Components</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Default Tester</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Requirement</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Automatic</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Script</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Arguments</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Dependencies</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Depends On</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P8"><colgroup><col style="width: 5.4102in" /></colgroup><tr><td>Blocks</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Action</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Expected Results</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Commands</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>History</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Clone</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Overview</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Case Run History</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Attachments</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Test Runs</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Creating a Run</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Fields</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>CC List</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Product Version</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Plan Version</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Manager</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Status</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Build</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Environment</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Summary</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Notes</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Overview</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Commands</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>History</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Clone</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P7"><colgroup><col style="width: 5.8035in" /></colgroup><tr><td>Running a Run</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Tags</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Environments</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Searching</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>The Testing Life Cycle</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Create a Test Plan</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Create or Select Test Cases</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Start a Test Run</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P6"><colgroup><col style="width: 5.6071in" /></colgroup><tr><td>Cleaning Up</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Glossary</td></tr></table><table border="0" cellspacing="0" cellpadding="0" class="P5"><colgroup><col style="width: 6in" /></colgroup><tr><td>Getting Help</td></tr></table><h1 class="P9"><a name="Introduction" />Introduction</h1><p class="Standard">Welcome to Bugzilla Testopia, the place where all tests are happy. :-) </p><p class="Standard">Testopia is an extension to the Bugzilla bug tracking system designed to track testing efforts for products. Though it is designed with software testing in mind, it can be used to track testing on virtually anything in the engineering process.  </p><p class="Standard"> </p><p class="Standard">As an extension to Bugzilla it integrates closely with bug tracking every step of the way. Testopia provides the ability to link your bugs with the tests that verify those bugs are addressed and vice versa. </p><p class="Standard"> </p><p class="Standard">Testopia takes a standard black box testing approach. The major objects of testopia are divided into three classes.  </p><h3 class="Heading3"><a name="Test_Plans" />Test Plans</h3><p class="Textbody">Test plans are the top level documents that lay out a testing procedure. In Testopia. plans are used to organize test cases and test runs.  </p><h3 class="Heading3"><a name="Test_Cases" />Test Cases</h3><p class="Textbody">Test cases are the meat of any testing process. These detail the steps to verify that the subject passes muster as well as the expected results.  </p><h3 class="Heading3"><a name="Test_Runs" />Test Runs</h3><p class="Textbody">Test runs are the cumulative results of running a course of test cases against a particular version or build of a product.  </p><p class="Textbody"> </p><p class="Textbody">Each of these objects is set within the framework of Bugzilla (i.e. Products, Components, Milestones etc) and Testopia relies heavily upon them. </p><p class="Textbody">There are also a number of other objects in Testopia that support the big three. We will look at each in turn as we progress through the tour.  </p><p class="Textbody"> </p><p class="Textbody">So, shall we get started? </p><h1 class="P9"><a name="Installation" />Installation</h1><p class="Textbody">Testopia is an extension to Bugzilla. It goes without saying then that you should have Bugzilla up and running first. Instructions for installing Bugzilla can be found at bugzilla.org as well as in the package you downloaded. Basically all you need is to unzip the package and run checksetup.pl and follow any instructions that come up. </p><p class="Textbody">You can run Bugzilla on either Linux or Windows operating systems, though Testopia has not been thoroughly tested on Windows yet. </p><p class="Textbody">Beyond the required packages for Bugzilla, in order to install Testopia you should first make sure you have the following requirements met. </p><h3 class="Heading3"><a name="Requirements" />Requirements</h3><p class="Textbody">Bugzilla 2.20 (Currently the only version tested with Testopia 1.0, however this does not mean it won't work with other versions) </p><p class="Textbody">Text::Diff Latest version should work </p><p class="Textbody">As far as databases are concerned, Testopia just adds a number of tables to the existing Bugzilla database. Currently Testopia only supports Mysql as a database. By this we mean it is the only one tested as of version 1.0 although there is no real reason it shouldn't work with PostGres (the other database engine officially supported by Bugzilla). We just don't have any table creation scripts for it yet.  </p><p class="Textbody">Testopia has been tested on Mysql 4.1 and 5.0. Bugzilla requires 4.1 as of 2.20. </p><h3 class="Heading3"><a name="Steps" />Steps</h3><ol style="margin-left:1.25cm;list-style-type:decimal; "><li class="P10" style="margin-left:0cm;"><p class="P10" style="margin-left:0.25cm;">Copy the testopia tar ball into your bugzilla's root directory. </p></li><li class="P10" style="margin-left:0cm;"><p class="P10" style="margin-left:0.25cm;">Untar  </p><ol style="margin-left:0.75cm;list-style-type:decimal; "><li class="P10" style="margin-left:0cm;"><p class="P10" style="margin-left:0.25cm;"><span class="SourceText">tar xzvf testopia-&lt;release&gt;.tar.gz</span></p></li></ol></li><li class="P10" style="margin-left:0cm;"><p class="P10" style="margin-left:0.25cm;">Run tr_install.pl  </p><ol style="margin-left:0.75cm;list-style-type:decimal; "><li class="P10" style="margin-left:0cm;"><p class="P10" style="margin-left:0.25cm;"><span class="SourceText">perl tr_install.pl</span></p></li></ol></li></ol><p class="Textbody">The install script sets up the database tables, patches your code, and sets up three new groups: managetestplans, edittestcases, and runtests. </p><p class="Textbody">If the patch fails, you may want to patch the files by hand. There are only 4 small changes to the Bugzilla 2.20 code. </p><p class="Textbody">You should now be able to See the testopia links in the Bugzilla footer. Make sure you update the new testopia user groups to include whomever is going to need access to test cases.  </p><h1 class="P9"><a name="The_Big_Picture" />The Big Picture</h1><p class="Textbody">We will start with the 10,000 foot view and zoom in from there. This section is called the big picture since, well, it is a big picture. </p><p class="Textbody"> </p><div class="Textbody"><img width="735" height="571" alt="" src="file:///home/ghendricks/workspace/bnc-2.22/testopia/doc/" class="fr2" /></div><p class="Textbody"> </p><p class="Textbody">As you can see, Testopia objects are arranged in a hierarchy under products.  At the top are test plans. From a test plan it is possible to create test cases and test runs. Test cases are broken up by categories which are associated with products. Test cases can also be associated with one or more components.  Test runs are classified by builds which are in turn broken into target milestones. Runs also have an associated environment which can include a platform and an operating system. We will take a look at each of these in turn starting from the top.</p><h1 class="P9"><a name="Test_Plans" />Test Plans</h1><p class="Textbody">Let's take it from the top. </p><p class="Textbody">As mentioned earlier, test plans are kind of the filing cabinet for everything in Testopia.  Test plans are divided by product and act as the dashboard for everything you will do as a tester. </p><p class="Textbody">To create a new test plan, click the New Plan link in the Bugzilla footer. You will be taken to a page where you will be prompted to fill in a few fields, Lets take a look at those fields. </p><h2 class="Heading2"><a name="Fields" />Fields</h2><h3 class="Heading3"><a name="Name" />Name</h3><p class="Textbody">The plan name is a simple text field. Plan names can consist of any combination of letters, numbers and other characters and do not have to be unique. In fact you can have two plans of the exact same name if you like. This may actually be desirable as we will see later. </p><h3 class="Heading3"><a name="Product" />Product</h3><p class="Textbody">Each plan must have one and only one product. This comes from the Bugzilla product list. As a tester you must have access to the product (i.e be a member of the product group) to be able to see and create plans for the product.  </p><h3 class="Heading3"><a name="Product_Version" />Product Version</h3><p class="Textbody">Once you choose a product, the product version list will show you available versions for that product (Javascript must be enabled to have the magic happen). This will be used as the default for setting up runs, which we will see later.  </p><h3 class="Heading3"><a name="Type" />Type</h3><p class="Textbody">This is where you choose which type of testing this plan should represent. the default list consists of such things as Unit, System, Integration, Acceptance, and Performance, however system administrators can customize this list to meet their needs. Each plan type will represent a different mode of testing. </p><h3 class="Heading3"><a name="Plan_Document" />Plan Document</h3><p class="Textbody">This is a place to write up the test plan's procedure document. Depending on your organization and requirements, this can be very detailed. or not. This area shows up with a WYSIWYG editor to allow you to include formatting easily. Again, Javascript is required. </p><p class="Textbody"> </p><p class="Textbody">Once you hit submit, you will be taken to the plan view for your newly created plan. </p><p class="Textbody">At the top of the plan page is a table containing an overview of the fields contained in a plan. You will also notice some buttons. </p><h2 class="Heading2"><a name="Commands" />Commands</h2><h3 class="Heading3"><a name="Archive" />Archive</h3><p class="Textbody">As products move through their lifespan you will often find plans associated with earlier versions to be obsolete. Plans can therefore be archived to hide them from your basic searches. </p><p class="Textbody">To archive a plan, click the Archive button at the top of the plan page. </p><p class="Textbody">If a plan is already archived the button will Unarchive the plan instead. </p><h3 class="Heading3"><a name="Print" />Print</h3><p class="Textbody">If you would like to see a printable version of the plan document, click the Print button. </p><h3 class="Heading3"><a name="History" />History</h3><p class="Textbody">You can view the history of changes to a plan, as well as view unified diff comparisons of versions of a plan's text by clicking the History Button. </p><h3 class="Heading3"><a name="Cloning_a_Plan" />Cloning a Plan</h3><p class="Textbody">Plans can be cloned or copied. This is especially useful as you move from one version of a product to the next. You will likely need to carry forward many of the attributes and test cases that you created for an earlier version. Cloning allows you to do this in a few mouse clicks. </p><p class="Textbody">When you click the Clone button, you are presented with some options for cloning your plan.  </p><p class="Textbody">The first couple are pretty straightforward. Give your copy of a plan a name. There is nothing preventing you from using the exact same name, though it might be harder to distinguish from earlier versions if you don't give it something at least a little unique. </p><p class="Textbody">Second, choose a product version for this plan. </p><p class="Textbody">Next you have the option of copying the plan document. If you select NO you will have a clean slate for your new plan. </p><p class="Textbody">You also have the option of pointing any tags you have set to this plan to the new plan as well. We will cover tags later. </p><h3 class="Heading3"><a name="Link_vs_Copy" />Link vs Copy</h3><p class="Textbody">Lastly you have the option of moving your test cases forward. You have two options here. If you choose to copy the test cases you will, in essence, be cloning those just like you are the plan. They will be exact replicas except they will not have the same ID.  </p><p class="Textbody">The benefits of copies are that they are now unique test cases which can be edited at will without the fear of messing up other plans that might have been linked to them. However this means you now have two test cases where one existed before. This will increase the workload if you need to update test cases across versions of a product. </p><p class="Textbody">If you instead choose to link your test cases, what you get is the equivalent of a symbolic link in Unix. That one test case will now be pointed at more than one plan. This makes updating your test cases across plans a breeze. However if you need to branch information in a test case for a different plan, you should clone it. You will see that you can clone a case just as easily as a plan from the case page. </p><p class="Textbody">If you choose to copy or link the test cases as you clone your plan, you have the option of only taking those cases that match a certain category or categories. </p><p class="Textbody">Once you have selected all the options for your copy, click Clone to be taken to your new plan. </p><h1 class="P9"><a name="Categories" />Categories</h1><p class="Textbody">Before setting up a test case you need to have at least one category defined to put it in. </p><p class="Textbody">Categories are buckets for test cases. Each test case can belong to only one category at a time. They are here to help you organize your test cases into useful groups.  </p><p class="Textbody">Categories are actually defined by product, meaning if you define a category in a plan for a given product, it will become available for all plans in that product. </p><p class="Textbody">To create a category. Click the add link under the categories list in your test plan. You can also click the Categories header and then click add on the page that comes up. </p><p class="Textbody">A category is very simple, It consists of Two fields, only one of which is required. </p><h3 class="Heading3"><a name="Name" />Name</h3><p class="Textbody">A category must have a name. It can consist of any combination of letters and numbers and must be unique inside the product you are creating it for. </p><h3 class="Heading3"><a name="Description" />Description</h3><p class="Textbody">This optional field is for you to provide a verbose description of your category if you like. </p><p class="Textbody"> </p><h1 class="P9"><a name="Builds" />Builds</h1><p class="Textbody">Builds are similar to categories but they apply to runs.  </p><p class="Textbody">A build is a particular iteration of a product. In software a build is often something that represents the compiled results of all the source code committed during an interval of development. That interval can be as frequent as every hour or as little as once a week, Regardless of how often a build is done, the main thing we want to track here is which builds get tested.  </p><p class="Textbody">Like categories, builds are product specific and will show up in any plan for that product.  Since builds can happen very frequently, you may wish to automate build creation using whatever build system you have devised.</p><p class="Textbody">To create a new build manually click the add link under the build list in your plan, You can also click the build header and click the add new link on the page that appears. </p><p class="Textbody">There are three fields for builds </p><h3 class="Heading3"><a name="Name" />Name</h3><p class="Textbody">The name can consist of any letters or numbers and special characters. It must be unique within the product. </p><h3 class="Heading3"><a name="Milestone" />Milestone</h3><p class="Textbody">This is the target milestone from the product.  Many builds can use the same target milestone.</p><h3 class="Heading3"><a name="Description" />Description</h3><p class="Textbody">This area can be used to put notes or a description about the build. It is optional. </p><p class="Textbody"> </p><h1 class="P9"><a name="Test_Cases" />Test Cases</h1><p class="Textbody">Test cases are the heart of Testopia. A test case is a set of steps and expected results that should be applied to a subject in order to find out if a product is sound.  </p><p class="Textbody">All test cases need to be associated (linked) to at least one test plan. The easiest way to go about creating a test case then, is to click the Create Test Case link on the plan page.  </p><p class="Textbody">Let's take a look at the fields of a test case. </p><h2 class="Heading2"><a name="Fields" />Fields</h2><h3 class="Heading3"><a name="Summary" />Summary</h3><p class="Textbody">The summary is a short description of the test case. It can contain any combination of characters and does not need to be unique. This will allow you to quickly identify test cases in a list. </p><h3 class="Heading3"><a name="Alias" />Alias</h3><p class="Textbody">Like a summary, Aliases are used to help you quickly identify a test case. Unlike summaries however, they must be unique in the system, meaning no two test cases, regardless of product, can have the same alias. Aliases can be used in place of ID's in linking up test cases. Their main purpose is as an aid for automations that would like to refer to a test case by name rather than number. </p><h3 class="Heading3"><a name="Status" />Status</h3><p class="Textbody">The status field for test cases helps you determine which test cases are actively being used for testing versus those that are only in development or are no longer relevant. Status can be one of three options. </p><h4 class="Heading4"><a name="Proposed" />Proposed</h4><p class="Textbody">Test cases with a status of proposed are currently being defined. They should not yet be used for testing as they are in flux.  </p><h4 class="Heading4"><a name="Confirmed" />Confirmed</h4><p class="Textbody">Confirmed test cases are those that are actively being used in testing.  </p><h4 class="Heading4"><a name="Disabled" />Disabled</h4><p class="Textbody">Disabled test cases are either no longer relevant to a current version of a product or have been taken out of the current testing loop for whatever reason. </p><h3 class="Heading3"><a name="Priority" />Priority</h3><p class="Textbody">The test case priority is determined by how important a test case is in relation to others in a product. It can also refer to the priority of any bugs that are identified by the test case or for which the test case is designed to check. This list is identical to that of bug priority.  </p><h3 class="Heading3"><a name="Category" />Category</h3><p class="Textbody">As mentioned above, categories are buckets for subdividing test cases. They work in tandem with product components to allow you to quickly find test cases. </p><h3 class="Heading3"><a name="Components" />Components</h3><p class="Textbody">Once you have created your test case, you have the option of associating one or more Bugzilla components with it. The list of components comes from the products that this case is associated with via the plans it is linked to. This is optional as some test cases will be independent of component.  </p><h3 class="Heading3"><a name="Default_Tester" />Default Tester</h3><p class="Textbody">This person will be the default assignee for the created case-runs. </p><h3 class="Heading3"><a name="Requirement" />Requirement</h3><p class="Textbody">This field is optional and is used for tracking a requirement number if one exists for this test case. </p><h3 class="Heading3"><a name="Automatic" />Automatic</h3><p class="Textbody">If this test case is meant to be used with a script or automated system then choose automatic. This then allows you to set the path or URL for the script that is used. The default however is manual.  </p><p class="Textbody">It is important to note that Testopia does not automate any tests of its own accord. This field is just to help you classify which of your test cases are automated versus which are manual. </p><h4 class="Heading4"><a name="Script" />Script</h4><p class="Textbody">This field is only available if Automatic is chosen above. This is a place to store a path or URL to an automated script. Testopia does not run the script for you however, this is just to display where a user would look to find the script. </p><h4 class="Heading4"><a name="Arguments" />Arguments</h4><p class="Textbody">If your automated script takes any arguments you can store which ones apply to this test case in this field. Again, this is only active if Automatic is set to Automatic. </p><h3 class="Heading3"><a name="Dependencies" />Dependencies</h3><p class="Textbody">Like bugs, test cases have a concept of dependencies. If a test case depends on another test case it would be prevented from being passed if that prerequisite case fails. Dependencies set up an order of operations for running test cases.  </p><p class="Standard">If test case B “depends on” test case A, then whenever test case A</p><p class="Standard">fails, test case B will be blocked from passing (it will receive a status of BLOCKED). So, A should run before B, and B should not be run if A fails. At some point this will be automatic, meaning failing a test case that blocks other test cases will automatically apply the BLOCKED status to those dependent test cases. </p><p class="Textbody">Testopia will check that there are no loops in your dependencies.  </p><h4 class="Heading4"><a name="Depends_On" />Depends On</h4><p class="Standard">Makes another test case a prerequisite for this test case.  </p><h4 class="Heading4"><a name="Blocks" />Blocks</h4><p class="Standard">Makes this test case a prerequisite for another. </p><h3 class="Heading3"><a name="Action" />Action</h3><p class="Textbody">The action is the list of steps to confirm that the subject under scrutiny passes inspection. The successful completion of which would earn a PASSED status in a run. This should follow general testing guidelines and be concise, checking the smallest unit possible.  An example might be to “click the file menu and choose save”.</p><p class="Textbody">In the case of performance testing this might detail the list of conditions the test was run under. </p><h3 class="Heading3"><a name="Expected_Results" />Expected Results</h3><p class="Textbody">The Expected Results is the list of successful outcomes that the action should produce in order for a test case to be considered passed. Meeting these objectives would produce a passed result where failing to meet them would produced a failed result. To extend our example above, an expected result might be “check that the file is saved on the file system”. </p><p class="Textbody">In performance testing this might contain the list of acceptable parameters. </p><h2 class="Heading2"><a name="Commands" />Commands</h2><h3 class="Heading3"><a name="History" />History</h3><p class="Textbody">Just as with test plans, it is possible to view the history of changes to a test case by clicking the History button. You can also take a unified diff of any two versions of the action and Expected Results on the history page. </p><h3 class="Heading3"><a name="Clone" />Clone</h3><p class="Textbody">You can clone a test case in much the same way you clone a test plan. By clicking the clone button you have several options.  </p><p class="Textbody">First you must choose whether you are making a copy of a case or just linking an existing case to another plan. </p><p class="Textbody">If creating a copy, you have the option of copying just to the existing plans or a list of different plans or both. You can choose to copy the document (action and Expected Results) or leave it blank on your copy. You can copy the tags and components as well. </p><h3 class="Heading3"><a name="Overview" />Overview</h3><p class="Textbody">Once you have set up a test case you will notice at the top of the screen an overview section that details many of the fields you saw while setting up your test case as well as a few others. This will contain such information as the author of the test case and when it was created as well as links to the test plans it is linked to. </p><h3 class="Heading3"><a name="Case_Run_History" />Case Run History</h3><p class="Textbody">Included in the view of each test case is a table with the history of test runs that it has been run in. You will see the status it received and who it was assigned to as well as who actually ran it if it has been completed. There is also a link to a bug list of any bugs that were identified during the run. You can click on the run number to be taken to the test run page. </p><h1 class="Heading1"><a name="Attachments" />Attachments</h1><p class="Textbody">Both test plans and test cases can support attachments. You will find the attachments table near the bottom of both of these pages. To create an attachment, simply click the browse button and locate the file you wish to attach, type a description in the Description field and click the attach button.  </p><p class="Textbody">Attachments are treated very much the same as they are in Bugzilla. The size limit will be determined by the max-attachment-size parameter the same as it is for Bugzilla </p><p class="Textbody">To edit an attachment click the edit link. This takes you to a page where you can set the description, filename, and mime-type for the attachment as well as view it if it is a viewable type or download it otherwise. </p><h1 class="P9"><a name="Test_Runs" />Test Runs</h1><p class="Textbody">Test runs are the work horse of Testopia. A test run is the application of a list of test cases against the subject to determine if the subject meets the standards laid out by the test case. Each test run is associated with a single plan and a list of test cases.  </p><h3 class="Heading3"><a name="Creating_a_Run" />Creating a Run</h3><p class="Textbody">To create a test run, click the Create a New Test Run link in the plan you are creating the run for.  You are taken to a page with a list of test cases that are associated with this plan. You can select all, part, or none of the test cases to be included in this run. Later you can search for specific test cases to add to the run if you like.</p><p class="Textbody">For each test case associated with a run a record is created for the history in the test case for the result of this run against that case.  </p><h2 class="Heading2"><a name="Fields" />Fields</h2><h3 class="Heading3"><a name="CC_List" />CC List</h3><p class="Textbody">Once you complete the creation process you will have the option of adding and removing people from the CC list for the run. These people will eventually receive notification of changes to a test run in addition to the manager and testers. Notification is currently not working as of 1.0 </p><h3 class="Heading3"><a name="Product_Version" />Product Version</h3><p class="Textbody">Though a plan has this information, you may wish to mix test runs of other product versions for comparison. This allows you to set the actual product version used for testing in this run. </p><h3 class="Heading3"><a name="Plan_Version" />Plan Version</h3><p class="Textbody">It is possible to set which version of the plan document you mean to run this test against. The default is the latest version </p><h3 class="Heading3"><a name="Manager" />Manager</h3><p class="Textbody">The run manager will usually be the person responsible for running the test cases.  </p><h3 class="Heading3"><a name="Status" />Status</h3><p class="Textbody">There are two options here: Running and Stopped. If a test run is stopped, none of the test cases in the run can be passed or failed.  </p><p class="Textbody">The default is running. </p><h3 class="Heading3"><a name="Build" />Build</h3><p class="Textbody">This allows you to set the default build for the case-runs. This list comes from the builds defined for the product on the test plan pages. </p><h3 class="Heading3"><a name="Environment" />Environment</h3><p class="Textbody">Choose from the list of defined environments the one used for this run. Environments will be explained in detail later. </p><h3 class="Heading3"><a name="Summary" />Summary</h3><p class="Textbody">This is a short description of the run. Much the same as that of a case summary. </p><h3 class="Heading3"><a name="Notes" />Notes</h3><p class="Textbody">This is an area for you to make any notes about this run. This field is fully editable meaning that if you remove text it will be deleted.  </p><h3 class="Heading3"><a name="Overview" />Overview</h3><p class="Textbody">Once you have created your run, you will see an overview section detailing such things as, which plan this run belongs to, when it was started, which product and product version as well as who the manager and default tester is. </p><p class="Textbody">Below the overview section you will notice a table of numbers detailing how many test cases have been completed and what their total outcomes have been. There is also a percentage bar showing the completion rate. </p><h2 class="Heading2"><a name="Commands" />Commands</h2><h3 class="Heading3"><a name="History" />History</h3><p class="Textbody">Just as with plans and cases, you can view a history of changes to the run. This does not include changes to the notes however. </p><h3 class="Heading3"><a name="Clone" />Clone</h3><p class="Textbody">You can clone a run the same as with other objects. When you clone a run you can choose to copy over the test cases from the run that meet the criteria you specify. </p><h2 class="Heading2"><a name="Running_a_Run" />Running a Run</h2><p class="Textbody">A test run is the area that most testers will spend most of their time in. This is where you will pass and fail test cases and log bugs against them. </p><p class="Textbody">When you set up the run, you selected which test cases will be included. You will see one entry per test case in the Test Case Run Table in your run. By clicking on the black triangle next to the case ID you can expand the case run form. </p><p class="Textbody">The first step in running a test case is to set the build if it is different from the default build. Testopia is designed to be flexible in that it allows you to define your process. If you have many builds and they come very frequently, you may not wish to create a single run per build but would rather have a parent run and set the build on each test case that you tested against. Once the build is set you can begin your testing for that test case. Upon completion you click the appropriate button to either pass or fail the test case. In the case of performance tests you can choose to set the status to RUNNING while you perform the test and PAUSE it at anytime during the process. </p><p class="Textbody">The status of blocked is used when a test case has dependencies and the prerequisite case failed. </p><p class="Textbody">You have the option of making specific notes for each test case as you run it in the notes field. You can also log and attach bugs to a test case. Clicking the NEW button will open the bug creation screen in a new window. When you submit the bug, it will automatically be associated with this test case. You can also reassign the test case. </p><p class="Textbody">There are a number of filters available to allow you to display only the case-runs you are interested in. You can also sort on virtually any field in the table.  </p><p class="Textbody">If you wish, you can update multiple test case-runs at one time by clicking the link at the bottom of the table.  </p><p class="Textbody">This format uses AJAX to make a more dynamic user experience. If you prefer, you can use the Classic interface by clicking the link here. You are presented with the same options but in a more static view. </p><h1 class="Heading1"><a name="Tags" />Tags</h1><p class="Textbody">Tags are a novel approach to categorizing objects. They have become very popular with numerous web tools and have met with much success.  </p><p class="Textbody">The idea behind tags is that each user can categorize each item to his or her own liking without destroying other users categorizations. Each of the big three (Cases, Runs, Plans) in Testopia can have tags associated with them.  </p><p class="Textbody">To tag an object simply enter a string in the tag field and click add. You can search and sort by tags by clicking the Tags header and then clicking the appropriate object of interest in the list. </p><h1 class="Heading1"><a name="Environments" />Environments</h1><p class="Textbody">Environments are definitions of how a test run was run. In software testing this might include such things as which Operating system was used or what hardware platform. Environments can be as broad or narrow as you define them. The basic environment consists of an OS and platform chosen from Bugzilla's lists of these objects. However it can be much more complicated such as a suite of applications and other products or a browser. It could be a temperature range or a certain list of physical characteristics that your test must be conducted in.  </p><p class="Textbody">Creating an environment in Testopia requires two steps. The first involves defining a set of variables to be used in your environment. The second is to create the environment from the set of possible elements. </p><h3 class="Heading3"><a name="Environment_Administration" />Environment Administration</h3><p class="Textbody">When you first install Testopia, you must first define the set of environment variables that will be used to construct your environments.  To access these, click the <span class="T1">Environment Variables</span> link in the footer. The environment variables are arranged in a hierarchy of objects that is represented as a tree.  There are four major levels: Category, Element,  Property, and Property Values.</p><h4 class="Heading4"><a name="Categories" />Categories</h4><p class="Textbody">Environment Categories are similar to test case categories in that they provide a sorting mechanism for your environment elements. Each category is associated with a single product or in the special bucket labeled <span class="T1">–ALL-- . </span><span class="T2">The –All-- denotes all products, meaning it holds categories of elements that are not specific to any product.</span></p><p class="P11">When you first install Testopia you will see that the –ALL-- bucket contains two Categories, OS and Platform. Expanding these you will see that there are elements representing each of the OS and Platform values defined in Bugzilla. This is list is generated at the time you first install Testopia and is maintained separately from the Bugzilla lists thereafter.  </p><p class="P11">To create a category, right click on the product or –ALL-- and choose <span class="T1">Add Category</span>. You can then click on the newly create category in the tree which will pop up a form that allows you to edit the category name or change the product it is associated with.</p><h4 class="Heading4"><a name="Elements" />Elements</h4><p class="Textbody">Once you have a category defined for your product or the –ALL-- bucket, you can add elements to that category. Elements are the crux of what makes up your environment. To create an element, right click on the category you wish to add it to and choose <span class="T1">create element. </span></p><p class="P11">This will create an element labeled “New Element” which you can edit by clicking on it in the tree, or right clicking and choosing <span class="T1">Edit. </span></p><p class="P11">Elements can be nested inside other elements. To create a sub element, right click on the element and choose <span class="T1">Add Element</span>. You can edit this child element in the same manner as its parent. You can create as many levels of elements as you need to represent the complexity of your environment.</p><h4 class="Heading4"><a name="Properties" />Properties</h4><p class="Textbody">Properties describe your element. You can add properties to your elements by right clicking the element and choosing <span class="T1">Add Property</span>.  You can add as many properties to your elements as you need. Properties cannot be nested however.</p><p class="Textbody">To edit your property, click on it in the tree or right click on it and choose <span class="T1">Edit</span><span class="T2">.</span></p><h4 class="Heading4"><a name="Property_Values" />Property Values</h4><p class="Textbody">Once you have defined a property for your element, you will need to provide a list of values from which to select for you environment. Right click on your property and choose <span class="T1">Add Value </span><span class="T2">to create a value for your property. You can edit property values by right clicking and choosing Edit, or by clicking on one of the values under your property.</span></p><p class="P11">You can change the name or reorder the list of values from the form provided. You must hit Save Changes in order for you changes to be committed.  </p><h2 class="Heading2"><a name="Creating_Your_Environment" />Creating Your Environment</h2><p class="Textbody">Once you have set up the elements that will be used in your environment, you can now create environments with those elements. </p><p class="Textbody">Click <span class="T1">New Environment</span><span class="T2"> in the footer. </span></p><p class="P11">You are prompted to name your environment and choose a product for it. The product is used only for classification. It does not limit your choices of which elements can be placed in your environment. </p><p class="P11">Clicking <span class="T1">Create </span> will take you to the environment editor. Here you will see two trees, one representing your new environment and the other containing the list of variables from which to choose. Your environment will consist of the elements you defined earlier. To add an element, find it in the list and simply drag it onto your environment tree. The order does not matter. You can grab childe elements at any level, but dragging an element with children will bring the children as well. </p><p class="P11">Once you have selected the elements for your environment, you can now select which of the property values apply to your environment. Expand the element and property and simply click the value you wish to use. It will have a star placed next to it to show your selection. </p><p class="P11">To remove an element, right click on it and choose R<span class="T1">emove</span>.</p><p class="P11">All changes to your tree are saved immediately.  </p><h1 class="Heading1"><a name="Searching" />Searching</h1><p class="Textbody">Testopia incorporates Bugzilla's search engine capabilities for searching on test cases, runs and plans. Each of these has its own set of search parameters which can be found by clicking the corresponding tab in the search page. </p><p class="Textbody">Search results are displayed as a table which is sortable. Clicking on the column you wish to sort by will return the results sorted on that column. Currently only single key ascending sort is supported.  </p><p class="Textbody">The results table is also paginated. Clicking the navigation links at the bottom will allow you to jump from page to page of the results. Sorting will reset you back to page one however. </p><h1 class="Heading1"><a name="The_Testing_Life_Cycle" />The Testing Life Cycle</h1><p class="Textbody">Testopia can be made to fit a wide variety of product development and testing models. This is just one suggested model. Feel free to to tailor Testopia to fit your needs. </p><h3 class="Heading3"><a name="Create_a_Test_Plan" />Create a Test Plan</h3><p class="Textbody">As covered above, everything in testopia revolves around test plans. A typical test plan would be used to encompass a single product and product version. You should also set up categories, builds, and environments to match your testing scenario. </p><h3 class="Heading3"><a name="Create_or_Select_Test_Cases" />Create or Select Test Cases</h3><p class="Textbody">When just starting out, you will need to create test cases for each of the areas that are to be tested in your product. The number of test cases can be in the hundreds or hundreds of thousands. Testopia is designed to scale to meet the needs of large and small testing groups alike.  If you are creating a plan for a different version of an existing product, you can link the existing test cases by cloning the test plan, adding test cases where appropriate to cover new features or old bugs. </p><h3 class="Heading3"><a name="Start_a_Test_Run" />Start a Test Run</h3><p class="Textbody">Once you have test cases created, you can start running tests. Create a test run and select the test cases you wish to cover. If you have multiple environments to test in, you may wish to create a run for each environment. Each run has an associated build. Depending on how often builds happen, you may want to have separate runs for each build. If builds happen more frequently than test cycles, you can change the build on each individual test case-run as you go.  </p><p class="Textbody">Test cases have an assigned tester which is designated when the test case is created. As you go through the run however, you may wish to reassign particular test cases to different testers. This can be done individually or to a group of case-runs at once.  Though the default tester is responsible for setting a status on a test case-run, anyone with rights to edit a test run can update the case-run. The actual person to do so is captured in the tested by field. </p><h3 class="Heading3"><a name="Cleaning_Up" />Cleaning Up</h3><p class="Textbody">Once all the test cases are given a closing status (PASSED, FAILED, or BLOCKED), the test run should be moved from the Running state to the Stopped state.  </p><p class="Textbody">When all test runs are completed and the product is released and reaches it's sunset, the test plan can be archived. If any test cases are no longer relevant they can be moved to the disabled status. </p><p class="Textbody"> </p><h1 class="P9"><a name="Glossary" />Glossary</h1><div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table1"><colgroup><col width="178" /><col width="488" /></colgroup><tr><td style="text-align:left;width:1.6056in; " class="Table1A1"><p class="TableContents">Action </p></td><td style="text-align:left;width:4.3944in; " class="Table1B1"><p class="TableContents">The list of steps that a test case must complete. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Alias </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A globally unique string that identifies a test case in conjunction with the test case ID.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Archive </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">Test plans may be archived and hidden from regular searches. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Arguments </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A list of parameters to send to an automatic test script . </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Assignee </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The person responsible for applying a status to a test case-run </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Blocks </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A test case that blocks another test case. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">BLOCKED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case-run indicating the prerequisite test case failed. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Build </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">In software testing, a string denoting the compiled results of a period of development.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Category </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A property of a product that is used to classify test cases. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Clone </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">An exact replica of data between two objects. In Testopia you can clone plans, runs, and cases. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Component </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A Bugzilla component. An attribute of a product. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">CONFIRMED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a case. Confirmed test cases have been approved for use in test runs. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Default Tester </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The default person responsible for applying a status to the test case-run for a given test case. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Dependency </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">Test cases can be dependent on other test cases. There are two types of relationships, depends on and blocks. A test case that is blocked by another should not be examined before the prerequisite test case as success is determined in part by the outcome of the predecessor. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Depends on </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">Sets up a dependency between test cases. Depends on lists the test cases that a particular test case requires to be completed before this case. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">DISABLED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case denoting it is no longer used for active testing. Similar to archival for a plan. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Expected Results </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The expected results upon completing the action of a test case. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Environment </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A list of the surrounding conditions that a test run is performed in. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">FAILED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case-run. Denotes the test case failed in the given run. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">IDLE </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case-run. Denotes the test case has not been examined in the given run. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Manager </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The person in charge of a given run. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Milestone </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A Bugzilla object. A property of a product that implies when a given bug or feature will be fixed or included. Testopia builds are associated with milestones. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">PASSED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case-run. Denotes the test case has met the conditions of success detailed in the Expected Results of the test case in the given run. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">PAUSED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case-run. Denotes the test case has been under examination in the given run and is on hold. Used primarily for performance tests that may span long time periods. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Plan Document </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The information of a test plan detailing what the test plan will cover for what by when. Depending on the level of scrutiny required it can be very verbose. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Plan Version </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The version of the plan document used for a particular run.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Priority </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The Bugzilla priority. Test cases can be assigned a priority similar to bugs. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">PROPOSED </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case that denotes it has not yet been approved for use in test runs.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Requirement </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A field of a test case provided to capture information about a requirement. Typically an ID of a requirement in a separate requirement tracking system. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">RUNNING </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test case-run. Denotes the test case is in the process of being examined in the given run. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Running </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test run. Running test runs can have case-runs updated and implies that there is further testing to be done in the run. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Script </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A path to an external automated test script for a given test case. Testopia does not run this script, the field is only provided as a way of informing the user where to find it. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Stopped </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A status of a test run. Stopped test runs can not have case-runs updated. This status denotes the run is complete. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Tag </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A user defined string used to classify test plans, cases, and runs.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Test Case </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">A list of conditions and expected results for success for a particular feature or object under scrutiny. Test cases are associated with one or more test plans and with zero or more test runs. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Test Case-run </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The union of a test case and a test run. Each time a test case is included in a new test run, an entry is made for it in the test case-runs table. This captures whether the test case passed or failed in the given run. Each case-run should be associated with only one build for a given status.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Test Plan </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The defining object in Testopia. Organizes the other objects in Testopia. </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Test Run </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The instance of performance in Testopia. Each run is associated with a single plan and environment. It contains a list of test cases to be examined and stores the results in the case-runs table.  </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Tested By </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The person who examined and applied a status to a given case-run </p></td></tr><tr><td style="text-align:left;width:1.6056in; " class="Table1A2"><p class="TableContents">Type </p></td><td style="text-align:left;width:4.3944in; " class="Table1B2"><p class="TableContents">The plan type. Plan types might include System, Unit, Integration etc. Each plan can be of only one type. </p></td></tr></table></div><p class="Textbody"> </p><h1 class="P9"><a name="Getting_Help" />Getting Help</h1><p class="Textbody">There are a number of resources for getting help in Testopia. </p><p class="Textbody"> </p><p class="Textbody">Mailing lists </p><ul style="margin-left:1.25cm;"><li class="P12" style="margin-left:0cm;"><p class="P12" style="margin-left:0.25cm;"><a href="mailto:support-webtools@lists.mozilla.org">support-webtools@lists.mozilla.org</a></p></li><li class="P12" style="margin-left:0cm;"><p class="P12" style="margin-left:0.25cm;"><a href="mailto:dev-apps-webtools@lists.mozilla.org">dev-apps-webtools@lists.mozilla.org</a></p></li></ul><p class="Textbody">IRC </p><p class="Textbody">        <a href="irc://irc.mozilla.org/testopia">irc://irc.mozilla.org/testopia</a></p><p class="Textbody">Wiki </p><p class="Textbody">        <a href="http://wiki.mozilla.org/Testopia">http://wiki.mozilla.org/Testopia</a> </p></body></html>