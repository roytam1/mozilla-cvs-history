package Conf::UpgradeCheck;
use Conf;
use File::Spec;
no warnings;

if (getConf('installcomplete')) { # this will be set if a complete install has already
								  # been done with this source tree
	$upgrade = 1;
}

$cgidir = getConf('loc_cgi'); # this will also be set if an install has been done

output <<EOF;
In order to proceed with configuration, I need to offer you several choices in 
regards to upgrading or installation. Note that if you select an upgrade 
option, any changes made to the source code in the installed location will 
be lost. Custom templates will be saved.

1) Install a completely new installation
2) Upgrade an existing installation
3) Convert and upgrade an existing installation that was installed with 
    checksetup.pl
EOF

if ($upgrade) {
	output "4) Upgrade the installation installed in $cgidir";
} else {
	output "\n";
}

ask('inschoice','Please make a selection','1');

unless (getConf('quiet')) {
	my $option = getConf('inschoice');
	output "\nJust to confirm, you selected option $option, right?\n";
	ask('insconfirm','Yes or no?','yes');
	unless (getConf('insconfirm') =~ /y/i) {
		ask('inschoice','Well, what do you want then?','1');
	}
}

if (getConf('inschoice') eq 1) { # new installation
	setConf('installtype','new');
} elsif (getConf('inschoice') eq 2) { # upgrade
	setConf('installtype','upgrade');
	ask('upgrade_path','Please enter the path to where the cgi executables are stored for the 
	installation you wish to upgrade','');
	
	# now we have to import the settings from that installation
	
	if (-e correctpath(getConf('upgrade_path').'/config.pl')) {
		my $path = correctpath(getConf('upgrade_path').'/config.pl');
		require $path;
	} else {
		die "A valid Bugzilla installation was not found at that location\n";
	}
	
} elsif (getConf('inschoice') eq 3) {
	setConf('installtype','convert');
	ask('upgrade_path','Please enter the path to your Bugzilla installation','');
} elsif (getConf('inschoice') eq 4) { # upgrade same source tree
	setConf('installtype','upgrade');
	setConf('upgrade_path',getConf('dir_cgi'));
} else {
	die "invalid choice\n";
}

sub correctpath($) { # fix the dir seperator, do we really need this?
	my ($path) = @_;
    my @pathlist = split('/',$path);
    return File::Spec->catfile(@pathlist);
}

1;

