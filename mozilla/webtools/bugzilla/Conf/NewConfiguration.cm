package Conf::NewConfiguration;
use Conf;
no warnings;

# Here is where we ask localconfig-like questions
# it's called "NewConfiguration" because it's only for new installations

output <<EOF;

Now, I have a series of questions to ask about how you would like 
your Bugzilla installation configured. In some cases, 
you may need to ask your system administrator about certain 
questions or consult some documentation. If this is the case, 
you can just answer 'stop' to any of the questions and I will 
save your settings so you can come back where you were next time.

First of all, what is your prefered text editor of choice?
I will use this editor to allow you to easially give answers 
to some of the longer configuration questions. 

EOF

ask('editor','Favorite text editor?',$ENV{'EDITOR'});


my @databases = qw(mysql);

output "\nI need to know what type of database you would like to use.\n";
output "Your choices are:\n";
foreach $cur (@databases) { output $cur."\n" }
output "\n";

storeData();

my $found;

{ # bare blocks are really annoying but it works, thanks to
    # Randle L Schwartz in http://perlmonks.org/index.pl?node_id=239614
    ask('databasetype','Database type?','mysql');
    
    
    foreach $cur (@databases) {
        if (getConf('databasetype') eq $cur) {
            $found = 1;
            last;
        }
    }
    
    unless ($found) {
        output "Sorry, invalid option\n\n";
        redo;
    }
}

storeData();

output "Now that you have selected your database type,\n";
output "we will need to configure your database information\n\n";

output "Please enter the name of the database you wish to use.\n";
output "If it does not already exist, it will be created for you and\n";
output "Any existing data in this database may be deleted.\n";
output "Remember that you can answer 'stop' at any time to save your settings\n";
ask('db_name','Database name?','bugs');

output "Now configuring other database access configuration settings\n";
ask('db_port',"Database port?",3306);
ask('db_user',"Database username?",'bugs');
ask('db_pass',"Database password (leave blank if none)?",'');
storeData();

output "Now configuring database options\n";
output "Remember you can answer 'stop' for any question to save your settings and exit\n\n";
ask('db_sock',"Please select the database socket you wish to use. Leaving this option blank is almost always the right choice:",'');

storeData();

if (getConf('databasetype') eq 'mysql') {
	# If we are using mysql, we need the path to the binaries
	# Code snipped from checksetup to find a default
	my $mysql_binaries = `which mysql`;
	my $defauttext;
	if ($mysql_binaries =~ /no mysql/) {
    	# If which didn't find it, just provide a reasonable default
    	$mysql_binaries = "/usr/bin";
	} else {
    	$mysql_binaries =~ s:/mysql\n$::;
    	$defaulttext = " A suitable default was autodetected on your system."
	}

	ask ('mysqlpath',"Please specify only the directory name, with no trailing slash to the MySQL binaries on your system.$defaulttext",$mysql_binaries);
}


output "Server configuration questions\n\n";

output <<EOF;
If you are using Apache for your web server, Bugzilla can create .htaccess
files for you that will instruct Apache not to serve files that shouldn't
be accessed from the web (like your local configuration data and non-cgi
executable files).  For this to work, the directory your Bugzilla
installation is in must be within the jurisdiction of a <Directory> block
in the httpd.conf file that has 'AllowOverride Limit' in it.  If it has
'AllowOverride All' or other options with Limit, that's fine.
(Older Apache installations may use an access.conf file to store these
<Directory> blocks.) See the Bugzilla Guide for more information
EOF

ask('create_htaccess','Create .htaccess files?','y');

# normalize the input so we don't have to do this later in the makefile
if (getConf('create_htaccess') =~ /(y|yes|1)/i) {
	setConf('create_htaccess','y');
} else { setConf('create_htaccess','n') }

1;
