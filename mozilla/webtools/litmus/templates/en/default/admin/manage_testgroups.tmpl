[%# ***** BEGIN LICENSE BLOCK *****
  # Version: MPL 1.1
  #
  # The contents of this file are subject to the Mozilla Public License Version
  # 1.1 (the "License"); you may not use this file except in compliance with
  # the License. You may obtain a copy of the License at
  # http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS IS" basis,
  # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  # for the specific language governing rights and limitations under the
  # License.
  #
  # The Original Code is Litmus.
  #
  # The Initial Developer of the Original Code is
  # The Mozilla Corporation.
  # Portions created by the Initial Developer are Copyright (C) 2006
  # the Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #   Chris Cooper <ccooper@deadsquid.com>
  #   Zach Lipton <zach@zachlipton.com>
  #
  # ***** END LICENSE BLOCK *****
#%]

[% PROCESS global/selects.none.tmpl %]

[% includeselects=1 %]  
[% INCLUDE global/html_header.tmpl js_files=['js/FormValidation.js','js/MochiKit/MochiKit.js','js/json.js','js/Help.js','js/SelectBoxes.js','js/SelectSort.js'] %]
[% INCLUDE global/litmus_header.tmpl %]

<script type="text/javascript">
var testgroup;
var subgroups=[% IF all_subgroups %][% all_subgroups %][% ELSE %]{}[% END %];
var filter_req;

var showAll = function(err) {
  // if they cancelled, then just don't change anything:
  if (err instanceof CancelledError) { return }
  toggleMessage('none');
	
  var testgroupbox = document.getElementById("testgroup_id");
  for (var i=0; i<testgroupbox.options.length; i++) {
    var option = testgroupbox.options[i];
    option.style.display = '';
  }
};

var doFilterList = function(req) {
  var testgroups = req.responseText.split("\n");
  var testgroupbox = document.getElementById("testgroup_id");
  for (var i=0; i<testgroupbox.options.length; i++) {
    var testgroup = testgroupbox.options[i];
    var hide = 0;
    var id = testgroup.value;
    if (testgroups.indexOf(id) == -1) { hide = 1; }
    hide == 1 ? testgroup.style.display = 'none' : testgroup.style.display = '';
  }
  toggleMessage('none');
};

// filter the list by various criteria:
function filterList() {
  // they just changed the selection, so cancel any pending filter actions:
  if (filter_req instanceof Deferred && filter_req.fired == -1)
    filter_req.cancel();

  var productfilter = document.getElementById('product_filter');

  if (productfilter.options[productfilter.selectedIndex].value == '---') {
    // nothing to do here
    showAll();
    return;
  }

  toggleMessage('loading','Filtering testgroup list...');
  filter_req = doSimpleXMLHttpRequest('manage_testgroups.cgi', {
    searchTestgroupList: 1,
    product: (productfilter.options[productfilter.selectedIndex].value == '---' ? '' : productfilter.options[productfilter.selectedIndex].value)
  });
  // if something went wrong, just show all the tests:
  filter_req.addErrback(showAll);
  filter_req.addCallback(doFilterList);
}

function enableModeButtons() {
  document.getElementById("edit_testgroup_button").disabled=false;
  document.getElementById("clone_testgroup_button").disabled=false;
  document.getElementById("delete_testgroup_button").disabled=false;
}

function disableModeButtons() {
  document.getElementById("edit_testgroup_button").disabled=true;
  document.getElementById("clone_testgroup_button").disabled=true;
  document.getElementById("delete_testgroup_button").disabled=true;
}

function loadTestgroup() {
  var testgroup_select = document.getElementById("testgroup_id");

  if (! testgroup_select ||
      testgroup_select.options[testgroup_select.selectedIndex].value=="") {
    disableModeButtons();
    document.getElementById('testgroup_display_div').style.display = 'none';
    document.getElementById('editform_div').style.display = 'none';
    disableForm('edit_testgroup_form');
    blankTestgroupForm('edit_testgroup_form');
    return false;
  } 

  var testgroup_id = testgroup_select.options[testgroup_select.selectedIndex].value;

  disableForm('edit_testgroup_form');
  toggleMessage('loading','Loading Testgroup ID# ' + testgroup_id + '...');
  var url = 'json.cgi?testgroup_id=' + testgroup_id;
  fetchJSON(url,populateTestgroup);
}

function populateBranches(productBox) {
  var branchBox = document.getElementById('editform_branches'); 
  branchBox.options.length = 0;
  
  var productId = productBox.options[productBox.selectedIndex].value;
  var product = getProductById(productId);
  if (!product) {
    // no product set
    var option = new Option('-No product selected-','');
    branchBox.add(option, null);
    return;
  }
//  var option = new Option('-Branch-','');
//  branchBox.add(option, null);
  var branches = product['branches'];
  for (var i=0; i<branches.length; i++) {
    var option = new Option(branches[i].name,branches[i].id);
    option.selected = false;
    if (testgroup.product_id && productId == testgroup.product_id.product_id) {
      for (var j=0; j<testgroup.branches.length; j++) {
        if (option.value == testgroup.branches[j].branch_id) {
          option.selected = true;
        }
      }
    }
    branchBox.add(option, null);
  }
}

function populateTestgroup(data) {
  testgroup=data;
  document.getElementById('editform_testgroup_id').value = testgroup.testgroup_id;
  document.getElementById('editform_testgroup_id_display').innerHTML = testgroup.testgroup_id;
  document.getElementById('editform_name').value = testgroup.name;
  document.getElementById('name_text').innerHTML = testgroup.name;
  document.getElementById('testgroup_id_display').innerHTML = testgroup.testgroup_id;

  var productBox = document.getElementById('product');
  var options = productBox.getElementsByTagName('option');  
  var found_product = 0;
  for (var i=0; i<options.length; i++) {
    if (options[i].value == testgroup.product_id.product_id) {
      options[i].selected = true;
      document.getElementById('product_text').innerHTML = options[i].text;
      found_product=1;
    } else {
      options[i].selected = false;
    }      
  }
  if (found_product == 0) {
    options[0].selected = true;
  }
  changeProduct();
  populateBranches(productBox);
  var enabled_em = document.getElementById('editform_enabled')
  if (testgroup.enabled == 1) {
    enabled_em.checked = true;
  } else {
    enabled_em.checked = false;
 } 
  document.getElementById('editform_testrunner_plan_id').innerHTML = testgroup.testrunner_plan_id;

  populateAllSubgroups();

  var selectBoxTestgroup = document.getElementById('editform_testgroup_subgroups');
  selectBoxTestgroup.options.length = 0;
  for (var i=0; i<testgroup.subgroups.length; i++) {
    var optionText = testgroup.subgroups[i].name + ' (' + testgroup.subgroups[i].subgroup_id + ')'; 

    selectBoxTestgroup.options[selectBoxTestgroup.length] = new Option(optionText,
                                                     testgroup.subgroups[i].subgroup_id);
  }

  document.getElementById('editform_div').style.display = 'none';
  document.getElementById('testgroup_display_div').style.display = 'block';
  enableModeButtons();
}

function blankTestgroupForm(formid) {
  blankForm(formid);
  document.getElementById('editform_testgroup_id_display').innerHTML = '';
  var selectBoxAll = document.getElementById('editform_subgroups_for_product');
  selectBoxAll.options.length = 0;
  selectBoxAll.options[selectBoxAll.length] = new Option("--No product selected--",
                                                             "");
  selectBoxAll.selectedIndex=-1;
  var selectBoxTestgroup = document.getElementById('editform_testgroup_subgroups');
  selectBoxTestgroup.options.length = 0;
  selectBoxTestgroup.options[selectBoxTestgroup.length] = new Option("--No testgroup selected--","");
  selectBoxTestgroup.selectedIndex=-1;

  document.getElementById('editform_testrunner_plan_id').innerHTML = '';

  testgroup = new Object();

  changeProduct();
  populateBranches(document.getElementById('product'));
}

function switchToAdd() {
  disableModeButtons();
  blankTestgroupForm('edit_testgroup_form');
  document.getElementById('editform_submit').value = 'Add Testgroup';
  document.getElementById('editform_mode').value = 'add';
  enableForm('edit_testgroup_form');
  document.getElementById('testgroup_display_div').style.display = 'none';
  document.getElementById('editform_div').style.display = 'block';
}

function switchToEdit() {
  document.getElementById('editform_submit').value = 'Submit Edits';
  document.getElementById('editform_mode').value = 'edit';
  enableForm('edit_testgroup_form');
  document.getElementById('testgroup_display_div').style.display = 'none';
  document.getElementById('editform_div').style.display = 'block';
}

function populateAllSubgroups() {
  toggleMessage('loading','Narrowing Subgroup List...');
  try {
    var productBox = document.getElementById('product');
    var branchBox = document.getElementById('editform_branches');
    var selectBoxAll = document.getElementById('editform_subgroups_for_product');
    selectBoxAll.options.length = 0; 
    for (var i in subgroups) {
      if (subgroups[i].product_id != productBox.options[productBox.selectedIndex].value) {
        continue;
      }
      
      if (branchBox.selectedIndex >= 0) {
        var found_branch = 0;
        for (var j=0; j<branchBox.options.length; j++) {
          if (branchBox.options[j].value == '' ||
              branchBox.options[j].selected == false) {
            continue;
          }
          if (subgroups[i].branch_id == branchBox.options[j].value) {
            found_branch = 1;
          } 
        }
        if (found_branch == 0) {
          continue;
        }
      } 
     
      var optionText = subgroups[i].name + ' (' + subgroups[i].subgroup_id + ')'; 
      selectBoxAll.options[selectBoxAll.length] = new Option(optionText,
                                                             subgroups[i].subgroup_id);
    }
  } catch (e) {
    // And do what exactly?
  }
  if (selectBoxAll.options.length == 0) {
    selectBoxAll.options[selectBoxAll.length] = new Option('-No Subgroups for this Product/Branch-','');
  }
  toggleMessage('none');
}  

function resetTestgroup() {
  if (document.getElementById('editform_testgroup_id').value != '') {
    populateTestgroup(testgroup);
    switchToEdit();   
  } else {
    switchToAdd();
  }
}
</script>

<div id="page">

[% INCLUDE sidebar/sidebar.tmpl %]

  <div id="content">

    <h1 class="firstHeading">[% title %]</h1>

    <div class="section-full">
      <div class="section-header">Existing Testgroups</div>

      <div class="section-content">

        <form id="select_testgroup_and_mode_form" name="select_testgroup_and_mode_form" method="post" action="manage_testgroups.cgi">
	<div class="info">
	  <b>Filter:</b>
	  <table border="0">
	    <tr>
	      <td>Product:</td>
	    </tr>
	    <tr>
	      <td>
	        [% INCLUDE productbox onchange="changeProduct('filter'); filterList();" nameextra="_filter" %]
	      </td>
	    </tr>
	  </table>
	</div>
	<table border="0" cellspacing="0" cellpadding="5">
	<tr>
        <td>
	[% INCLUDE form_widgets/select_testgroup_id.tmpl name="testgroup_id" placeholder=1 size=10 onchange="loadTestgroup();" %]
        </td>
        </tr>
        <tr>        
        <td>
	<input id="add_testgroup_button" name="add_testgroup_button" class="manage" type="button" onClick="switchToAdd();" value="Add testgroup">&nbsp;
	<input id="edit_testgroup_button" name="edit_testgroup_button" class="manage" type="button" onClick="switchToEdit();" value="Edit testgroup" disabled>&nbsp;
	<input id="clone_testgroup_button" name="clone_testgroup_button" class="manage" type="submit" onClick="confirm('Really clone this testgroup?');" value="Clone testgroup" disabled>&nbsp;
	<input id="delete_testgroup_button" name="delete_testgroup_button" class="manage" type="submit" onClick="confirm('Really delete this testgroup?');" value="Delete testgroup" disabled>
        </td>
        </tr>
	</table>
	</form>

      </div> <!--end section-content-->
    </div> <!--end section-full-->

    <div style="display: none;" id="testgroup_display_div" class="section-full">
      <div id="testgroup-title" class="section-header">Testgroup Info</div>
      <div class="section-content">

        <div class="testgroup-content">
          [% INCLUDE testgroup/testgroup.tmpl testgroup=testgroup show_config=1 show_edit=1 %]
        </div>
      </div>
    </div>

    <div style="display: none;" id="editform_div" class="section-full">
      <div id="testgroup-title" class="section-header">Testgroup Info</div>

      <div class="section-content">

      [% INCLUDE admin/edit_testgroup.tmpl %]

      </div> <!--end section-content-->
    </div> <!--end section-full-->

  </div> <!--END content-->

</div> <!--END page-->

<script type="text/javascript">
var em = document.getElementById('testgroup_id'); 
if (em.selectedIndex >= 0) {
  loadTestgroup();
  enableForm('edit_testgroup_form');
} else {
  disableForm('edit_testgroup_form');
}
</script>

[% INCLUDE global/litmus_footer.tmpl %]
[% INCLUDE global/html_footer.tmpl %]



