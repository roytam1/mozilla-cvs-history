[%# ***** BEGIN LICENSE BLOCK *****
  # Version: MPL 1.1
  #
  # The contents of this file are subject to the Mozilla Public License Version
  # 1.1 (the "License"); you may not use this file except in compliance with
  # the License. You may obtain a copy of the License at
  # http://www.mozilla.org/MPL/
  #
  # Software distributed under the License is distributed on an "AS IS" basis,
  # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  # for the specific language governing rights and limitations under the
  # License.
  #
  # The Original Code is Litmus.
  #
  # The Initial Developer of the Original Code is
  # The Mozilla Corporation.
  # Portions created by the Initial Developer are Copyright (C) 2006
  # the Initial Developer. All Rights Reserved.
  #
  # Contributor(s):
  #   Chris Cooper <ccooper@deadsquid.com>
  #   Zach Lipton <zach@zachlipton.com>
  #
  # ***** END LICENSE BLOCK *****
#%]
  
[%# INTERFACE:
  # @products   - list of all possible product objects or just a one element
  #                 list with the product selected by the user
  # @platforms - a list of all platform objects for the current product
  # %opsyses   - a hash of all operating systems, where the key 
          is the platform number and the value is an array of 
          operating system objects
  # @branches  - a list of all branch objects for the current product
  # $ua (optional) - Litmus::UserAgentDetect() object for the remote user
  # $defaultemail (optional)
  # $goto - the action of the <form>
  # cgidata (optional) - a CGI object. If provided, the param() data will 
  #                         be stored in hidden fields and passed to the 
  #                         next script
#%]

[% PROCESS global/selects.none.tmpl %]

[% includeselects=1 %]
[% INCLUDE global/html_header.tmpl js_files=['js/SelectBoxes.js','js/FormValidation.js','js/Help.js'] %]
[% INCLUDE global/litmus_header.tmpl %]

<script type="text/javascript">
function checkFormContents(f) { 
   return (
           checkBuildId(f.build_id)
          );
}

var appBuildID = [% IF defaultbuildid %] 
 "[% defaultbuildid | js | html %]"; 
[% ELSE %]
  "0000000000";
[% END %]
try {
  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
  var appInfo = Components.classes["@mozilla.org/xre/app-info;1"]
                  .getService(Components.interfaces.nsIXULAppInfo);
  if(appInfo.appBuildID) {
    appBuildID = appInfo.appBuildID;
  }
} catch (e) {
  // Cascade to the next lookup method.
}

var buildIDHelpTitle = 'How do I determine the build ID?';
var buildIDHelpText = '<p>The build ID is a 10-digit number that identifies a Mozilla product build down to the date and hour of the build. By supplying the full, correct build ID, you will be making the job of the Mozilla QA team <em>much</em> easier. There are several different ways to determine the build ID of the build you are testing.</p><ol><li><b>Manually</b>: Provided you have installed Talkback, this is the fail-safe method, and allows you to submit the build ID for products other than the one currently being used to submit the results. The Mozilla Quality Assurance wiki has instructions on <a target="external_link_from_litmus" href="http://wiki.mozilla.org/MozillaQualityAssurance:Build_Ids">how to manually verify the build ID</a>.</li><li><b>Nightly Tester Tools</b>: Available for both Firefox and Thunderbird,  the Nightly Tester Tools extension adds a number of useful features for testing Mozilla products. This includes a handy display of the build ID of the running build in the title bar. You can download this extension from <a target="external_link_from_litmus" href="https://addons.mozilla.org/search.php?q=Nightly+Tester+Tools">addons.mozilla.org</a>.</li><li><b>Automatic detection</b>: Litmus has JavaScript code built-in to automatically detect the build ID of the current build, but it relies on <a target="external_link_from_litmus" href="http://www.mozilla.org/projects/security/components/signed-scripts.html#codebase">JavaScript codebase principals</a> to do so. To enable codebase principals, testers must add this line to the prefs.js file in their Mozilla user profile dir, or simply edit the pref directly in <a target="external_link_from_litmus" href="http://kb.mozillazine.org/About:config">about:config</a>:<br/><br/><b><code>user_pref("signed.applets.codebase_principal_support", true);</code></b><br/><br/><b>NOTE</b>: this will only be useful if you are submitting results for the currently running version of Firefox. If you are concerned about the security issues of enabling codebase support, you can <a target="external_link_from_litmus" href="http://www.mozilla.org/projects/security/components/signed-scripts.html#codebase">read more about codebase principals here</a>.</li></ol>';

</script>

<div id="page">

[% INCLUDE sidebar/sidebar.tmpl %]

  <div id="content">

    <h1 class="firstHeading">[% title | html %]</h1>

<div class="section-full">
  <div class="section-header">
System Information
  </div>
  <div class="section-content">

<p>To run tests, please enter some information about your system configuration.</p>
<form action="[% goto | html %]" method="post" name="sysconfig_form" id="sysconfig_form" onSubmit="return checkFormContents(this);">
<input name="isSysConfig" type="hidden" value="1">
<input name="testgroup" type="hidden" value="[% testgroup | html %]">

[% # here we see if there is data to include as hidden fields. 
   # This is used in situations where we have testresults that 
   # need to get stored, but have to have system configuration taken care 
   # of first. 
%]
[% IF cgidata %]
    [% FOREACH curdata = cgidata.param() %]
    [% IF curdata == "product" %] [% NEXT %] [% END %]
        <input name="[%curdata FILTER html %]" type="hidden" 
            value="[% cgidata.param(curdata) FILTER html %]">
    [% END %]
[% END %]

<table border="0" cellpadding="5">

<tr><td><div align="right">Product:</div></td><td>
[% # either only one product or the user already set it, so just display it %]
[% UNLESS products.1 %]
    [% products.0.name FILTER html %]
    <select name="product" id="product" class="select_product" style="display: none;">
        <option value="[%products.0.productid FILTER html%]" selected>
        [%products.0.name FILTER html%]</option>
    </select>
    <input name="product_default" id="product_default" type="hidden" 
        value="[%products.0.productid FILTER html%]">
[% ELSE %]
    [% # display the product selection list then %]
    [% INCLUDE productbox products=products %]
[% END %]    
</td>
<td></td>
</tr>
<tr>
<td><div align="right">Platform: </div></td>
<td>[% INCLUDE platformbox platforms=platforms defaultplatform=ua.platform(product) %]
</td>
<td></td>
</tr>
<tr>
<td><div align="right">Operating System: </div></td>
<td>
[% INCLUDE opsysbox opsyses=opsyses defaultopsys=defaultopsys %] 
<br>
</td>
<td></td>
</tr>
<tr>
<td><div align="right">Branch: </div></td>
<td>[% INCLUDE branchbox branches=branches defaultbranch=ua.branch(product) %]</td>
<td></td>
</tr>
<tr>
<td><div align="right">Locale: </div></td>
<td>[% INCLUDE form_widgets/select_locale.tmpl name="locale" defaults.locale=ua.locale %]</td>
<td></td>
</tr>
<tr>
<td><div align="right">Build ID:</div></td>
<td><input type="text" id="build_id" name="build_id" size="25" value="">
<script type="text/javascript">
var em = document.getElementById("build_id");
em.value = appBuildID;
</script>
</td>
<td>&lArr; <a name="showBuildIDHelpText" onclick="toggleHelp(buildIDHelpTitle,buildIDHelpText);">How do I determine the build ID?</a></td>
</tr>
<tr>
<td colspan="2">
<input class="category" type="submit" name="Submit" value="Submit">
</td>
</tr>
</table>
</form>

  </div>

</div>

  </div> <!--END content-->

</div> <!--END page-->

[% INCLUDE global/litmus_footer.tmpl %]
[% INCLUDE global/html_footer.tmpl %]
