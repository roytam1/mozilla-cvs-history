The VC_Bonsai implementation does not work.  It is included only
because they will become important.  I do not understand the
interfaces well enought to finish the work and I have no means to test
them.

I have not coded the Image (fortune) system but I have left coding
hints as to how it would work.

I did not code a warnings system with all the warning pages.

I did not code shownote.cgi to allow people who deploy the notice
board but do not have popup windows to see the notices.

I have not updated the client build scripts to work with the new system.

I need to make the Persistance module more generic (add loading to
Persistance instead of 'use' everywhere in the code) so that we can
replace Data::Dumper with Stoarable easily.  This will lower the CPU
time of the process at the expense of not being able to read/edit the
database files.

I need to allow the VC system to have a daemon gather the VC
information and pass it to tinderbox via the same update methods wich
Builds uses. Then both the tinder.cgi and this new cvs process could
be run out of cron periodically and the webpages would not be delayed
if CVS takes a long time to respond this might improve the response
time of the web updates.  Also the OS process scheduler could do a
better job of scheduling if there were two different processes one
which was IO bound and one which was CPU bound.  

It would be really nice if could mail tinderbox the updates which
apply to the branches of interest, then tinderbox would not have to
pool and it would get the branch information which it needs.
