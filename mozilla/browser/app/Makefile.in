# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#  Brian Ryner <bryner@brianryner.com>
#  Jonathan Wilson <jonwil@tpgi.com.au>
#  Dan Mosedale <dmose@mozilla.org>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

DIRS		= profile

PREF_FILES = $(srcdir)/profile/all.js

ifeq ($(USE_SHORT_LIBNAME), 1)
PROGRAM = MozillaFirebird$(BIN_SUFFIX)
else
PROGRAM = MozillaFirebird-bin$(BIN_SUFFIX)
endif

REQUIRES = \
	appshell \
	string \
	xpcom \
	xulapp \
	$(NULL)

CPPSRCS = nsBrowserApp.cpp

ifdef BUILD_STATIC_LIBS
STATIC_COMPONENTS_LINKER_PATH = -L$(DIST)/lib/components
endif

LIBS = \
	$(STATIC_COMPONENTS_LINKER_PATH) \
	$(EXTRA_DSO_LIBS) \
	$(DIST)/lib/$(LIB_PREFIX)xulapp_s.$(LIB_SUFFIX) \
	$(MOZ_JS_LIBS) \
	$(XPCOM_LIBS) \
	$(NSPR_LIBS) \
	$(TK_LIBS) \
	$(NULL)

ifdef MOZ_JPROF
LIBS += -ljprof
endif

ifndef MOZ_WINCONSOLE
ifdef MOZ_DEBUG
MOZ_WINCONSOLE = 1
else
MOZ_WINCONSOLE = 0
endif
endif

include $(topsrcdir)/config/config.mk
ifndef BUILD_STATIC_LIBS

ifdef NS_TRACE_MALLOC
EXTRA_DSO_LIBS += tracemalloc
endif

else
include $(topsrcdir)/config/static-config.mk

EXTRA_DEPS	+= \
	$(STATIC_EXTRA_DEPS) \
	$(NULL)
DEFINES		+= $(STATIC_DEFINES)
CPPSRCS		+= $(STATIC_CPPSRCS)
EXTRA_DSO_LIBS	+= $(STATIC_EXTRA_DSO_LIBS)
REQUIRES	+= $(STATIC_REQUIRES)
EXTRA_LIBS	+= $(STATIC_EXTRA_LIBS)
endif

ifeq ($(OS_ARCH),WINNT)
OS_LIBS += $(call EXPAND_LIBNAME,comctl32 comdlg32 uuid shell32 ole32 oleaut32 version winspool gdi32)
RCINCLUDE = splash.rc
ifndef GNU_CC
RCFLAGS += -DMOZ_PHOENIX -I$(srcdir)
else
RCFLAGS += -DMOZ_PHOENIX --include-dir $(srcdir)
endif
ifdef BUILD_STATIC_LIBS
RCFLAGS += -DMOZ_STATIC_BUILD
endif
endif

ifeq ($(OS_ARCH),OS2)
RESFILE=splashos2.res
ifdef BUILD_STATIC_LIBS
EXE_DEF_FILE = browser.def
ifeq ($(MOZ_OS2_TOOLS),VACPP)
OS_LIBS += libuls.lib libconv.lib
else
OS_LIBS += -llibuni -luconv
endif
endif
endif

include $(topsrcdir)/config/rules.mk

ifdef BUILD_STATIC_LIBS
include $(topsrcdir)/config/static-rules.mk
endif

APP_VERSION = $(shell cat $(srcdir)/../config/version.txt)
DEFINES += -DAPP_VERSION=\"$(APP_VERSION)\"

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
ifdef BUILD_STATIC_LIBS
LIBS	+= -framework QuickTime -framework IOKit
endif
endif

ifeq ($(OS_ARCH),WINNT)
#
# Control the default heap size.
# This is the heap returned by GetProcessHeap().
# As we use the CRT heap, the default size is too large and wastes VM.
#
# The default heap size is 1MB on Win32.
# The heap will grow if need be.
#
# Set it to 256k.  See bug 127069.
#
ifndef GNU_CC
LDFLAGS += /HEAP:0x40000
endif
# Get rid of console window
ifdef GNU_CC
LDFLAGS += -mwindows
endif
endif

$(PROGRAM): $(DIST)/lib/$(LIB_PREFIX)xulapp_s.$(LIB_SUFFIX)

ifeq ($(OS_ARCH),OS2)
ifdef BUILD_STATIC_LIBS
$(EXE_DEF_FILE):
	rm -f $@
	@echo NAME mozilla >$(EXE_DEF_FILE)
	@echo IMPORTS >>$(EXE_DEF_FILE)
	@echo 	WinQueryProperty		= PMMERGE.5450 >>$(EXE_DEF_FILE)
	@echo 	WinRemoveProperty		= PMMERGE.5451 >>$(EXE_DEF_FILE)
	@echo 	WinSetProperty			= PMMERGE.5452 >>$(EXE_DEF_FILE)

LDFLAGS += /NOE
endif
endif

ifneq (,$(filter-out OS2 WINNT,$(OS_ARCH)))
MozillaFirebird:: mozilla.in Makefile.in Makefile $(DEPTH)/config/autoconf.mk
	cat $< | sed -e "s|%MOZAPPDIR%|$(mozappdir)|" \
		-e "s|%MREDIR%|$(mredir)|" \
		-e "s|mozilla-bin|$(PROGRAM)|g" > $@
	chmod +x $@

libs:: MozillaFirebird
	$(INSTALL) $< $(DIST)/bin

install:: MozillaFirebird
	$(SYSINSTALL) $< $(DESTDIR)$(bindir)

GARBAGE += MozillaFirebird
GARBAGE += $(addprefix $(DIST)/bin/defaults/pref/, all.js)

endif

ifneq (,$(filter gtk gtk2,$(MOZ_WIDGET_TOOLKIT)))
ICON_FILES	= \
		$(srcdir)/mozicon50.xpm \
		$(srcdir)/mozicon16.xpm \
		$(NULL)

libs::
	$(INSTALL) $(ICON_FILES) $(DIST)/bin/icons

install::
	$(SYSINSTALL) $(IFLAGS1) $(ICON_FILES) $(DESTDIR)$(mozappdir)/icons
endif

ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
libs::
	$(INSTALL) $(srcdir)/default.xpm $(DIST)/bin/chrome/icons

install::
	$(SYSINSTALL) $(IFLAGS1) $(srcdir)/default.xpm $(DESTDIR)$(mozappdir)/icons
endif

export:: $(PREF_FILES)
	@for i in $(PREF_FILES); do rm -f $(DIST)/bin/defaults/pref/`basename $$i`; $(PERL) $(topsrcdir)/config/preprocessor.pl $(DEFINES) $(ACDEFINES) $$i > $(DIST)/bin/defaults/pref/`basename $$i`; done

export:: brand.dtd.in
	$(PERL) $(topsrcdir)/config/preprocessor.pl $(DEFINES) $(ACDEFINES) $^ > brand.dtd

install:: $(PREF_FILES)
	@for i in $(PREF_FILES); do rm -f $(DESTDIR)$(mozappdir)/defaults/pref/`basename $$i`; $(PERL) $(topsrcdir)/config/preprocessor.pl $(DEFINES) $(ACDEFINES) $$i > $(DESTDIR)$(mozappdir)/defaults/pref/`basename $$i`; done

libs::
	touch $(DIST)/bin/.autoreg

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))

APP_NAME = Mozilla\ Firebird

libs:: $(PROGRAM)
	mkdir -p $(DIST)/$(APP_NAME).app/Contents/MacOS
	rsync -a --exclude CVS --exclude "*.in" $(srcdir)/macbuild/Contents $(DIST)/$(APP_NAME).app
	sed -e "s/APP_VERSION/$(APP_VERSION)/" $(srcdir)/macbuild/Contents/Info.plist.in > $(DIST)/$(APP_NAME).app/Contents/Info.plist
	rsync -a $(DIST)/bin/ $(DIST)/$(APP_NAME).app/Contents/MacOS
	rm -f $(DIST)/$(APP_NAME).app/Contents/MacOS/$(PROGRAM)
	rsync -aL $(PROGRAM) $(DIST)/$(APP_NAME).app/Contents/MacOS
	cp -RL $(srcdir)/macbuild/mach.icns $(DIST)/$(APP_NAME).app/Contents/Resources/mach.icns
	echo -n APPLMOZB > $(DIST)/$(APP_NAME).app/Contents/PkgInfo
#       remove CVS dirs from packaged app
	find $(DIST)/$(APP_NAME).app -type d -name "CVS" -prune -exec rm -rf {} \;

clean clobber::
	rm -rf $(DIST)/$(APP_NAME).app
endif
