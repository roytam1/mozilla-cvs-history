#include "nsISupports.idl"


[scriptable, uuid(ae8482e0-aa5a-11db-abbd-0800200c9a66)]
interface nsIConsole : nsISupports
{
  void log(in string msg);
};


[scriptable, function, uuid(05281820-ab62-11db-abbd-0800200c9a66)]
interface nsIEventItem : nsISupports
{
  readonly attribute string type;
  readonly attribute string detail;
  readonly attribute string pref;

  void preventDefault();
}; 


[scriptable, function, uuid(2dfe3a50-ab2f-11db-abbd-0800200c9a66)]
interface nsIEventListener : nsISupports
{
  void handleEvent(in nsIEventItem event);
}; 


[scriptable, uuid(3a8ec9d0-ab19-11db-abbd-0800200c9a66)]
interface nsIEvents : nsISupports
{
  void add(in string event, in nsIEventListener listener);
  void remove(in string event, in nsIEventListener listener);
  void fire(in string event);
}; 


[scriptable, uuid(ce697d40-aa5a-11db-abbd-0800200c9a66)]
interface nsIPreferences : nsISupports
{
  readonly attribute nsIEvents events;

  void set(in string name, in string value);
  string get(in string name, in string defaultValue);
}; 


[scriptable, uuid(bbaf6210-aafe-11db-abbd-0800200c9a66)]
interface nsISessionStorage : nsISupports
{
  boolean has(in string id);
  void set(in string name, in string value);
  string get(in string name, in string defaultValue);
}; 


[scriptable, uuid(ea563b60-aa5a-11db-abbd-0800200c9a66)]
interface nsIExtension : nsISupports
{
  readonly attribute string id;
  readonly attribute string name;
  readonly attribute nsISessionStorage storage;
  readonly attribute nsIEvents events;
}; 


[scriptable, uuid(de281930-aa5a-11db-abbd-0800200c9a66)]
interface nsIExtensions : nsISupports
{
  boolean has(in string id);
  nsIExtension get(in string id);
}; 


[scriptable, uuid(fe74cf80-aa2d-11db-abbd-0800200c9a66)]
interface nsIApplication : nsISupports
{
  readonly attribute nsIConsole console;
  readonly attribute nsIExtensions extensions;
  readonly attribute nsIPreferences prefs;
  readonly attribute nsISessionStorage storage;
  readonly attribute nsIEvents events;
}; 
