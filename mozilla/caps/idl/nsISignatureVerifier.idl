/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1999-2000 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 * Mitchell Stoltz <mstoltz@netscape.com>
 */

/* An interface for calculating secure hashes and verifying signatures*/
#include "nsIPrincipal.idl"

[ptr] native UnsignedCharPtr(unsigned char);

[uuid(7bdbdb36-1dd2-11b2-a44f-e303037f214d)]
interface nsISignatureVerifier : nsISupports
{
   /* Sig Verification Error Codes */
  const long VERIFY_OK = 0;
  const long VERIFY_ERROR_UNKNOWN_CA  = -8172; /* -8172 is the error code returned by PSM */
  
  /* Hash Algorithms (based on cmtcmn.h) */ 
  const short MD2  = 1;
  const short MD5  = 2;
  const short SHA1 = 3;
  const unsigned long MD2_LENGTH  = 16;
  const unsigned long MD5_LENGTH  = 16;
  const unsigned long SHA1_LENGTH = 20;
  const unsigned long MAX_HASH_LENGTH = SHA1_LENGTH;

  /* Secure Hashing functions */
  void hashBegin(in unsigned long alg, out unsigned long id);
  void hashUpdate(in unsigned long id, in string buf, in unsigned long buflen);
  [noscript] void hashEnd(in unsigned long id, out UnsignedCharPtr hash, 
                          out unsigned long hashlen, in unsigned long maxLen);
  
  /* Signature Verification functions */
  nsIPrincipal createPrincipalFromSignature(in string aSignature,
                                            in unsigned long aSignatureLen);
  nsIPrincipal verifySignature(in string aSignature,
                       in unsigned long aSignatureLen,
                       in string plaintext,
                       in unsigned long plaintextLen,
                       out long errorCode);
};


%{C++
#define SIGNATURE_VERIFIER_PROGID "component://netscape/psm"
%}
