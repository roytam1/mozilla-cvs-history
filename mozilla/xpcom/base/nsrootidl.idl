/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 *   Dan Rosen <dr@netscape.com>
 */

/* Root idl declarations to be used by all. */

%{C++

#include "nscore.h"
#include "prtime.h"

/* 
 * Start commenting out the C++ versions of the below in the output header
 */
#if 0
%}

typedef boolean             PRBool   ;
typedef octet               PRUint8  ;
typedef unsigned short      PRUint16 ;
typedef unsigned short      PRUnichar;
typedef unsigned long       PRUint32 ;
typedef unsigned long long  PRUint64 ;
typedef unsigned long long  PRTime   ;
typedef short               PRInt16  ;
typedef long                PRInt32  ;
typedef long long           PRInt64  ;

typedef unsigned long       nsrefcnt ;
typedef unsigned long       nsresult ;

// XXX need this built into xpidl compiler so that it's really size_t or PRSize
// and it's scriptable:
typedef unsigned long       size_t;

[ptr]         native voidPtr(void);
[ptr]         native charPtr(char);
[ptr]         native unicharPtr(PRUnichar);

[nsid]        native nsCID(nsCID);

[ref, nsid]   native nsIDRef(nsID);
[ref, nsid]   native nsIIDRef(nsIID);
[ref, nsid]   native nsCIDRef(nsCID);

[ptr, nsid]   native nsIDPtr(nsID);
[ptr, nsid]   native nsIIDPtr(nsIID);
[ptr, nsid]   native nsCIDPtr(nsCID);

[ptr]         native nsQIResult(void);

[ref, domstring] native DOMString(ignored);
[ref, domstring] native DOMStringRef(ignored);
[ptr, domstring] native DOMStringPtr(ignored);

[ref, domstring] native AString(ignored);
[ref, domstring] native AStringRef(ignored);
[ptr, domstring] native AStringPtr(ignored);

%{C++
/* 
 * End commenting out the C++ versions of the above in the output header
 */
#endif
%}
