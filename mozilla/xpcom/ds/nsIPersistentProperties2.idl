/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or 
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

%{C++

#include "nsIEnumerator.h"
#include "nsISupportsArray.h"
#include "nsIInputStream.h"
#include "nsIOutputStream.h"
#include "nsIProperties.h"
#include "nsID.h"
#include "nsString.h"

%}

[ptr] native nsStringPtr(nsString);

[scriptable, uuid(283EE646-1AEF-11D4-98B3-00C04fA0CE9A)]
interface nsIPropertyElement : nsISupports {

  [noscript]  void        SetKey(in nsStringPtr aKey);
  [noscript]  void        SetValue(in nsStringPtr aValue);
              wstring     getKey();
              wstring     getValue();

};


%{C++

//{283EE645-1AEF-11D4-98B3-00C04fA0CE9A}
#define NS_IPROPERTYELEMENT_CID \
{	0x283ee645, 0x1aef, 0x11d4, \
  { 0x98, 0xb3, 0x0, 0xc0, 0x4f, 0xa0, 0xce, 0x9a } }
static NS_DEFINE_CID(kPropertyElementCID, NS_IPROPERTYELEMENT_CID);

// {1A180F60-93B2-11d2-9B8B-00805F8A16D9}
#define NS_IPERSISTENTPROPERTIES_IID \
{ 0x1a180f60, 0x93b2, 0x11d2, \
  { 0x9b, 0x8b, 0x0, 0x80, 0x5f, 0x8a, 0x16, 0xd9 } }

#define NS_IPERSISTENTPROPERTIES_CID \
{ 0x2245e573, 0x9464, 0x11d2, \
  { 0x9b, 0x8b, 0x0, 0x80, 0x5f, 0x8a, 0x16, 0xd9 } }
static NS_DEFINE_CID(kPersistentPropertiesCID, NS_IPERSISTENTPROPERTIES_CID);

#define NS_PERSISTENTPROPERTIES_CONTRACTID "@mozilla.org/persistent-properties;1"
#define NS_PERSISTENTPROPERTIES_CLASSNAME "Persistent Properties"

class nsIPersistentProperties : public nsIProperties
{
public:
  static const nsIID& GetIID() { static nsIID iid = NS_IPERSISTENTPROPERTIES_IID; return iid; }

  NS_IMETHOD Load(nsIInputStream* aIn) = 0;
  NS_IMETHOD Save(nsIOutputStream* aOut, const nsString& aHeader) = 0;
  NS_IMETHOD Subclass(nsIPersistentProperties* aSubclass) = 0;	

  /**
   * Enumerates the properties in the supplied enumerator.
   * @return NS_ERROR_FAILURE if no properties to enumerate
   */
  NS_IMETHOD EnumerateProperties(nsIBidirectionalEnumerator** aResult) = 0;
  NS_IMETHOD SimpleEnumerateProperties(nsISimpleEnumerator** aResult) = 0;

  // XXX these 2 methods will be subsumed by the ones from 
  // nsIProperties once we figure this all out
  NS_IMETHOD GetStringProperty(const nsAString& aKey, nsAString& aValue) = 0;
  NS_IMETHOD SetStringProperty(const nsAString& aKey, nsAString& aNewValue,
                               nsAString& aOldValue) = 0;
};

%}
