/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Dan Rosen <dr@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or 
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* nsISupports wrappers for single primitive pieces of data. */

#include "nsISupports.idl"

/**
 * These first three are pointer types and do data copying
 * using the nsIAllocator. Be careful!
 */ 

[scriptable, uuid(d0d4b136-1dd1-11b2-9371-f0727ef827c0)]
interface nsISupportsPrimitive : nsISupports
{
    const unsigned short TYPE_ID                = 1;
    const unsigned short TYPE_CSTRING           = 2;
    const unsigned short TYPE_STRING            = 3;
    const unsigned short TYPE_PRBOOL            = 4;
    const unsigned short TYPE_PRUINT8           = 5;
    const unsigned short TYPE_PRUINT16          = 6;
    const unsigned short TYPE_PRUINT32          = 7;
    const unsigned short TYPE_PRUINT64          = 8;
    const unsigned short TYPE_PRTIME            = 9;
    const unsigned short TYPE_CHAR              = 10;
    const unsigned short TYPE_PRINT16           = 11;
    const unsigned short TYPE_PRINT32           = 12;
    const unsigned short TYPE_PRINT64           = 13;
    const unsigned short TYPE_FLOAT             = 14;
    const unsigned short TYPE_DOUBLE            = 15;
    const unsigned short TYPE_VOID              = 16;
    const unsigned short TYPE_INTERFACE_POINTER = 17;

    readonly attribute unsigned short type;
};

/**
 * Scriptable storage for nsID structures
 */

[scriptable, uuid(d18290a0-4a1c-11d3-9890-006008962422)]
interface nsISupportsID : nsISupportsPrimitive
{
    attribute nsIDPtr data;
    string toString();
};

/**
 * Scriptable storage for ASCII strings
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(d65ff270-4a1c-11d3-9890-006008962422)]
interface nsISupportsCString : nsISupportsPrimitive
{
    attribute ACString data;
    string toString();
};

/**
 * Scriptable storage for Unicode strings
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(d79dc970-4a1c-11d3-9890-006008962422)]
interface nsISupportsString : nsISupportsPrimitive
{
    attribute AString data;
    wstring toString();
};

/**
 * The rest are truly primitive and are passed by value
 */ 

/**
 * Scriptable storage for booleans
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(ddc3b490-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRBool : nsISupportsPrimitive
{
    attribute PRBool data;
    string toString();
};

/**
 * Scriptable storage for 8-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(dec2e4e0-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRUint8 : nsISupportsPrimitive
{
    attribute PRUint8 data;
    string toString();
};

/**
 * Scriptable storage for unsigned 16-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(dfacb090-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRUint16 : nsISupportsPrimitive
{
    attribute PRUint16 data;
    string toString();
};

/**
 * Scriptable storage for unsigned 32-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e01dc470-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRUint32 : nsISupportsPrimitive
{
    attribute PRUint32 data;
    string toString();
};

/**
 * Scriptable storage for 64-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e13567c0-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRUint64 : nsISupportsPrimitive
{
    attribute PRUint64 data;
    string toString();
};

/**
 * Scriptable storage for NSPR date/time values
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e2563630-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRTime : nsISupportsPrimitive
{
    attribute PRTime data;
    string toString();
};

/**
 * Scriptable storage for single character values
 * (often used to store an ASCII character)
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e2b05e40-4a1c-11d3-9890-006008962422)]
interface nsISupportsChar : nsISupportsPrimitive
{
    attribute char data;
    string toString();
};

/**
 * Scriptable storage for 16-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e30d94b0-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRInt16 : nsISupportsPrimitive
{
    attribute PRInt16 data;
    string toString();
};

/**
 * Scriptable storage for 32-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e36c5250-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRInt32 : nsISupportsPrimitive
{
    attribute PRInt32 data;
    string toString();
};

/**
 * Scriptable storage for 64-bit integers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(e3cb0ff0-4a1c-11d3-9890-006008962422)]
interface nsISupportsPRInt64 : nsISupportsPrimitive
{
    attribute PRInt64 data;
    string toString();
};

/**
 * Scriptable storage for floating point numbers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(abeaa390-4ac0-11d3-baea-00805f8a5dd7)]
interface nsISupportsFloat : nsISupportsPrimitive
{
    attribute float data;
    string toString();
};

/**
 * Scriptable storage for doubles
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(b32523a0-4ac0-11d3-baea-00805f8a5dd7)]
interface nsISupportsDouble : nsISupportsPrimitive
{
    attribute double data;
    string toString();
};

/**
 * Scriptable storage for generic pointers
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(464484f0-568d-11d3-baf8-00805f8a5dd7)]
interface nsISupportsVoid : nsISupportsPrimitive
{
    [noscript] attribute voidPtr data;
    string toString();
};

/**
 * Scriptable storage for other XPCOM objects
 * 
 * @status UNDER_REVIEW
 */

[scriptable, uuid(995ea724-1dd1-11b2-9211-c21bdd3e7ed0)]
interface nsISupportsInterfacePointer : nsISupportsPrimitive
{
    attribute nsISupports data;
    attribute nsIDPtr dataIID;

    string toString();
};

/////////////////////////////////////////////////////////////////////////

%{C++
// {ACF8DC40-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_ID_CID \
{ 0xacf8dc40, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_ID_CONTRACTID "@mozilla.org/supports-id;1"
#define NS_SUPPORTS_ID_CLASSNAME "Supports ID"

// {ACF8DC41-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_CSTRING_CID \
{ 0xacf8dc41, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_CSTRING_CONTRACTID "@mozilla.org/supports-cstring;1"
#define NS_SUPPORTS_CSTRING_CLASSNAME "Supports String"

// {ACF8DC42-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_STRING_CID \
{ 0xacf8dc42, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_STRING_CONTRACTID "@mozilla.org/supports-string;1"
#define NS_SUPPORTS_STRING_CLASSNAME "Supports WString"

// {ACF8DC43-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRBOOL_CID \
{ 0xacf8dc43, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRBOOL_CONTRACTID "@mozilla.org/supports-PRBool;1"
#define NS_SUPPORTS_PRBOOL_CLASSNAME "Supports PRBool"

// {ACF8DC44-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRUINT8_CID \
{ 0xacf8dc44, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRUINT8_CONTRACTID "@mozilla.org/supports-PRUint8;1"
#define NS_SUPPORTS_PRUINT8_CLASSNAME "Supports PRUint8"

// {ACF8DC46-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRUINT16_CID \
{ 0xacf8dc46, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRUINT16_CONTRACTID "@mozilla.org/supports-PRUint16;1"
#define NS_SUPPORTS_PRUINT16_CLASSNAME "Supports PRUint16"

// {ACF8DC47-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRUINT32_CID \
{ 0xacf8dc47, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRUINT32_CONTRACTID "@mozilla.org/supports-PRUint32;1"
#define NS_SUPPORTS_PRUINT32_CLASSNAME "Supports PRUint32"

// {ACF8DC48-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRUINT64_CID \
{ 0xacf8dc48, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRUINT64_CONTRACTID "@mozilla.org/supports-PRUint64;1"
#define NS_SUPPORTS_PRUINT64_CLASSNAME "Supports PRUint64"

// {ACF8DC49-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRTIME_CID \
{ 0xacf8dc49, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRTIME_CONTRACTID "@mozilla.org/supports-PRTime;1"
#define NS_SUPPORTS_PRTIME_CLASSNAME "Supports PRTime"

// {ACF8DC4A-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_CHAR_CID \
{ 0xacf8dc4a, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_CHAR_CONTRACTID "@mozilla.org/supports-char;1"
#define NS_SUPPORTS_CHAR_CLASSNAME "Supports Char"

// {ACF8DC4B-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRINT16_CID \
{ 0xacf8dc4b, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRINT16_CONTRACTID "@mozilla.org/supports-PRInt16;1"
#define NS_SUPPORTS_PRINT16_CLASSNAME "Supports PRInt16"

// {ACF8DC4C-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRINT32_CID \
{ 0xacf8dc4c, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRINT32_CONTRACTID "@mozilla.org/supports-PRInt32;1"
#define NS_SUPPORTS_PRINT32_CLASSNAME "Supports PRInt32"

// {ACF8DC4D-4A25-11d3-9890-006008962422}
#define NS_SUPPORTS_PRINT64_CID \
{ 0xacf8dc4d, 0x4a25, 0x11d3, \
    { 0x98, 0x90, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
#define NS_SUPPORTS_PRINT64_CONTRACTID "@mozilla.org/supports-PRInt64;1"
#define NS_SUPPORTS_PRINT64_CLASSNAME "Supports PRInt64"

// {CBF86870-4AC0-11d3-BAEA-00805F8A5DD7}
#define NS_SUPPORTS_FLOAT_CID \
{ 0xcbf86870, 0x4ac0, 0x11d3, \
    { 0xba, 0xea, 0x0, 0x80, 0x5f, 0x8a, 0x5d, 0xd7 } }
#define NS_SUPPORTS_FLOAT_CONTRACTID "@mozilla.org/supports-float;1"
#define NS_SUPPORTS_FLOAT_CLASSNAME "Supports float"

// {CBF86871-4AC0-11d3-BAEA-00805F8A5DD7}
#define NS_SUPPORTS_DOUBLE_CID \
{ 0xcbf86871, 0x4ac0, 0x11d3, \
    { 0xba, 0xea, 0x0, 0x80, 0x5f, 0x8a, 0x5d, 0xd7 } }
#define NS_SUPPORTS_DOUBLE_CONTRACTID "@mozilla.org/supports-double;1"
#define NS_SUPPORTS_DOUBLE_CLASSNAME "Supports double"

// {AF10F3E0-568D-11d3-BAF8-00805F8A5DD7}
#define NS_SUPPORTS_VOID_CID \
{ 0xaf10f3e0, 0x568d, 0x11d3, \
    { 0xba, 0xf8, 0x0, 0x80, 0x5f, 0x8a, 0x5d, 0xd7 } }
#define NS_SUPPORTS_VOID_CONTRACTID "@mozilla.org/supports-void;1"
#define NS_SUPPORTS_VOID_CLASSNAME "Supports void"

// {A99FEBBA-1DD1-11B2-A943-B02334A6D083}
#define NS_SUPPORTS_INTERFACE_POINTER_CID \
{ 0xA99FEBBA, 0x1DD1, 0x11B2, \
    { 0xA9, 0x43, 0xB0, 0x23, 0x34, 0xA6, 0xD0, 0x83 } }
#define NS_SUPPORTS_INTERFACE_POINTER_CONTRACTID \
  "@mozilla.org/supports-interface-pointer;1"
#define NS_SUPPORTS_INTERFACE_POINTER_CLASSNAME "Supports interface pointer"

extern	NS_COM nsresult NS_NewISupportsPRBool (nsISupportsPRBool ** aResult);

%}
