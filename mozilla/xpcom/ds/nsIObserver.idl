/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

/**
 * This interface is implemented by an object that needs
 * to observe an event corresponding to a change in a 
 * topic for a subject.
 */

[scriptable, uuid(DB242E01-E4D9-11d2-9DDE-000064657374)]
interface nsIObserver : nsISupports {

   /**
    * Called if the topic changes for the subject. If you expect 
    * multiple topics/subjects, the impl is responsible for filtering.
    *
    * @param aSubject - the event specific data that has changed.
    * @param aTopic   - indicates the event that has changed.
    * @param aData    - out of band data specific to the topic/
    *                   subject event.
    */
    void Observe( in nsISupports aSubject,
				  in wstring     aTopic,
				  in wstring     aData );

};

%{C++

#define NS_OBSERVER_CONTRACTID "@mozilla.org/xpcom/observer;1"

#define NS_OBSERVER_CLASSNAME "Observer"

%}
