#
# The contents of this file are subject to the Netscape Public License
# Version 1.0 (the "NPL"); you may not use this file except in
# compliance with the NPL.  You may obtain a copy of the NPL at
# http://www.mozilla.org/NPL/
#
# Software distributed under the NPL is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
# for the specific language governing rights and limitations under the
# NPL.
#
# The Initial Developer of this code under the NPL is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation.  All Rights
# Reserved.
#

DEPTH		= ../../../../../..
topsrcdir	= @top_srcdir@
VPATH		= @srcdir@
srcdir		= @srcdir@

include $(DEPTH)/config/autoconf.mk
include $(topsrcdir)/config/config.mk

DEFINES		+= -DEXPORT_XPTC_API

LIBRARY_NAME	= xptcmd
MODULE		= xpcom

# the default is this buildable non-functioning code
CPPSRCS		= \
		  xptcinvoke_unsupported.cpp \
		  xptcstubs_unsupported.cpp \
		  $(NULL)

# Lots of Unixish x86 flavors
ifneq (,$(filter SunOS Linux FreeBSD NetBSD OpenBSD BSD_OS,$(OS_ARCH)))
ifeq (86,$(findstring 86,$(OS_TEST)))
CPPSRCS		= \
		  xptcinvoke_unixish_x86.cpp \
		  xptcstubs_unixish_x86.cpp \
		  $(NULL)
endif
endif

# BeOS/Intel (uses the same unixish_x86 code)
ifeq ($(OS_ARCH),BeOS)
ifeq ($(OS_TEST),BePC)
CPPSRCS		= \
		  xptcinvoke_unixish_x86.cpp \
		  xptcstubs_unixish_x86.cpp \
		  $(NULL)
endif
endif

# Neutrino/Intel (uses the same unixish_x86 code)
ifeq ($(OS_TARGET),NTO)
ifeq ($(OS_TEST),x86)
CPPSRCS		= \
		  xptcinvoke_unixish_x86.cpp \
		  xptcstubs_unixish_x86.cpp \
		  $(NULL)
endif
endif

# Solaris/sparc
ifneq (,$(filter SunOS,$(OS_ARCH)))
ifneq (86,$(findstring 86,$(OS_TEST)))
CPPSRCS		= \
		  xptcinvoke_sparc_solaris.cpp \
		  xptcstubs_sparc_solaris.cpp \
		  $(NULL)
ifeq ($(GNU_CC),1)
ASFILES		= \
		  xptcinvoke_asm_sparc_solaris_GCC.s \
		  xptcstubs_asm_sparc_solaris.s \
		  $(NULL)
else
ASFILES		= \
		  xptcinvoke_asm_sparc_solaris_SUNW.s \
		  xptcstubs_asm_sparc_solaris.s \
		  $(NULL)
endif
endif
endif

# Linux/sparc
ifeq ($(OS_ARCH),Linux)
ifeq ($(OS_TEST),sparc)
CPPSRCS		= \
		  xptcinvoke_sparc_solaris.cpp \
		  xptcstubs_sparc_solaris.cpp \
		  $(NULL)
ASFILES		= \
		  xptcinvoke_asm_sparc_linux.s \
		  xptcstubs_asm_sparc_solaris.s \
		  $(NULL)
endif
endif

# AIX/PPC
ifeq (AIX,$(filter AIX,$(OS_ARCH)))
CPPSRCS		= \
		xptcinvoke_ppc_aix.cpp \
		xptcstubs_ppc_aix.cpp \
		$(NULL)
ASFILES		= \
		xptcinvoke_asm_ppc_aix.s \
		xptcstubs_asm_ppc_aix.s \
		$(NULL)
endif

# NetBSD/m68k
ifneq (,$(filter NetBSD,$(OS_ARCH)))
ifneq (,$(filter amiga atari hp300 mac68k mvme68k next68k sun3 sun3x x68k,$(OS_TEST)))
CPPSRCS                = \
		xptcinvoke_netbsd_m68k.cpp \
		xptcstubs_netbsd_m68k.cpp \
		$(NULL)
endif
endif

# IRIX
ifeq ($(OS_ARCH), IRIX)
ifneq ($(basename $(OS_RELEASE)),5)
CPPSRCS		= \
		  xptcinvoke_irix.cpp \
		  xptcstubs_irix.cpp \
		  $(NULL)
ASFILES		= \
		  xptcinvoke_asm_irix.s \
		  xptcstubs_asm_irix.s \
		  $(NULL)
endif
endif

# Linux/Alpha
ifeq ($(OS_ARCH),Linux)
ifeq ($(OS_TEST),alpha)
CPPSRCS		= \
		  xptcinvoke_linux_alpha.cpp \
		  xptcstubs_linux_alpha.cpp \
		  $(NULL)
endif
endif

# OpenVMS (Alpha only at this point)
ifeq ($(OS_ARCH),OpenVMS)
ifeq ($(CPU_ARCH),Alpha)
CPPSRCS		= \
		  xptcinvoke_openvms_alpha.cpp \
		  xptcstubs_openvms_alpha.cpp \
		  $(NULL)
ASFILES		= \
		  xptcinvoke_asm_openvms_alpha.s \
		  xptcstubs_asm_openvms_alpha.s \
		  $(NULL)
endif
endif

# Linux ARM
ifeq ($(OS_ARCH),Linux)
ifeq (arm,$(findstring arm,$(OS_TEST)))
CPPSRCS = \
		  xptcinvoke_arm.cpp \
		  xptcstubs_arm.cpp \
		  $(NULL)
endif
ifeq (sa110,$(findstring sa110,$(OS_TEST)))   
CPPSRCS = \
		  xptcinvoke_arm.cpp \
		  xptcstubs_arm.cpp \
		  $(NULL)
endif
endif

# we don't want the shared lib, but we want to force the creation of a static lib.
override NO_SHARED_LIB=1
override NO_STATIC_LIB=

include $(topsrcdir)/config/rules.mk

INCLUDES	+= -I$(srcdir)/../..

ifeq ($(OS_ARCH), IRIX)
# The assembler on IRIX (6.3 only?) seems to have trouble with the default command,
# but works fine if we first copy the header and source file into the current dir.
$(OBJDIR)/xptcstubs_asm_irix.o: $(DIST)/include/xptcstubsdef.inc $(srcdir)/xptcstubs_asm_irix.s
	@rm -f ./xptcstubsdef.inc
	@cp $(DIST)/include/xptcstubsdef.inc .
	@if test ! -f ./Makefile.in; then rm -f ./xptcstubs_asm_irix.s; cp $(srcdir)/xptcstubs_asm_irix.s .; else true; fi
	$(AS) -o $@ $(ASFLAGS) $(AS_DASH_C_FLAG) ./xptcstubs_asm_irix.s
	@rm -f ./xptcstubsdef.inc
	@if test ! -f ./Makefile.in; then rm -f ./xptcstubs_asm_irix.s; else true; fi
endif


ifeq ($(OS_ARCH),OpenVMS)
# Our assembler wants the include file to be of assembler syntax, not C/C++
# syntax, so we have to massage it slightly.

$(OBJDIR)/xptcstubs_asm_openvms_alpha.o: $(PUBLIC)/xptcstubsdef.inc $(srcdir)/xptcstubs_asm_openvms_alpha.s
	@rm -f ./xptcstubsdef_asm.vms
	@awk ' \
	/^.*_ENTRY\([0-9]+\)/ { \
	  sub("\\("," "); \
	  sub("\\)",""); \
	  sub("","\t"); \
	} \
	{ sub("\\/\\*",";"); \
	  sub("\\*\\/",""); \
	  print \
	} \
	' \
	$(PUBLIC)/xptcstubsdef.inc > $$HOME/xptcstubsdef_asm.vms
	$(AS) -o $@ $(ASFLAGS) $(AS_DASH_C_FLAG) xptcstubs_asm_openvms_alpha.s 
	@rm -f $$HOME/xptcstubsdef_asm.vms
endif
