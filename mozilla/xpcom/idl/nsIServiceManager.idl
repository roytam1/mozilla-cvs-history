/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsISupports.idl"
#include "nsIShutdownListener.idl"

%{C++
#define NS_ERROR_SERVICE_NOT_FOUND      NS_ERROR_GENERATE_SUCCESS(NS_ERROR_MODULE_XPCOM, 22)
#define NS_ERROR_SERVICE_IN_USE         NS_ERROR_GENERATE_SUCCESS(NS_ERROR_MODULE_XPCOM, 23)

#define NS_ISERVICEMANAGER_IID                       \
{ /* cf0df3b0-3401-11d2-8163-006008119d7a */         \
    0xcf0df3b0,                                      \
    0x3401,                                          \
    0x11d2,                                          \
    {0x81, 0x63, 0x00, 0x60, 0x08, 0x11, 0x9d, 0x7a} \
}


%}

interface nsIServiceManager : nsISupports {

    /* ProgID related stuff */
    nsISupports GetServiceByProgID(in string progid, in nsIIDRef aIID);
    void ReleaseServiceByProgID(in string progid,
                                in nsISupports service);
    
    void ShutdownServiceByProgID(in string progid);

    /* ClassID stuff */
    nsISupports GetService(in nsCIDRef aClass,
                           in nsIIDRef aIID);
    
    nsISupports GetServiceWithListener(in nsCIDRef aClass,
                                       in nsIIDRef aIID,
                                       in nsIShutdownListener listener);
    
    void ReleaseService(in nsCIDRef aClass,
                        in nsISupports service);

    void ShutdownService(in nsCIDRef aClass);
    
    void ReleaseServiceWithListener(in nsCIDRef aClass,
                                    in nsISupports service,
                                    in nsIShutdownListener listener);
    
};
