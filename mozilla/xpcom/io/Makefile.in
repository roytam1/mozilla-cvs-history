#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 
#

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= xpcom
XPIDL_MODULE	= xpcom_io
LIBRARY_NAME	= xpcomio_s
REQUIRES	= uconv \
		  string \
		  $(NULL)

CPPSRCS		= \
		nsAppFileLocationProvider.cpp \
		nsBinaryStream.cpp \
		nsByteArrayInputStream.cpp \
		nsDirectoryService.cpp \
		nsEscape.cpp \
		nsFastLoadFile.cpp \
		nsFastLoadService.cpp \
		nsFileSpec.cpp \
		nsFileSpecImpl.cpp \
		nsFileStream.cpp \
		nsIFileStream.cpp \
		nsStringStream.cpp \
		nsInputStreamTee.cpp \
		nsLinebreakConverter.cpp \
		nsLocalFileCommon.cpp \
		nsLocalFileUnicode.cpp \
		nsMultiplexInputStream.cpp \
		nsPipe2.cpp \
		nsScriptableInputStream.cpp \
		nsSegmentedBuffer.cpp \
		nsSpecialSystemDirectory.cpp \
		nsStorageStream.cpp \
		nsUnicharInputStream.cpp \
		$(NULL)

ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
CPPSRCS		+= nsLocalFileOS2.cpp
#else
#ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
#CPPSRCS     += nsLocalFileMac.cpp
#CSRCS       += macDirectoryCopy.c
else
ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
CPPSRCS		+= nsLocalFileWin.cpp
else
CPPSRCS		+= nsLocalFileUnix.cpp
endif # windows
#endif
endif # OS2

EXPORTS		= \
		nsAppDirectoryServiceDefs.h \
		nsDirectoryService.h \
		nsDirectoryServiceDefs.h \
		nsEscape.h \
		nsFastLoadPtr.h \
		nsFastLoadService.h \
		nsFileSpec.h \
		nsFileStream.h \
		nsIFileStream.h \
		nsIUnicharInputStream.h \
		nsLinebreakConverter.h \
		nsLocalFile.h \
		nsScriptableInputStream.h \
		nsSpecialSystemDirectory.h \
		nsStorageStream.h \
		nsStringIO.h \
		$(NULL)			

ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
EXPORTS		+= nsLocalFileOS2.h
else
#ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
#EXPORTS     += nsLocalFileMac.h nsILocalFileMac.h
#else
ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
EXPORTS		+= nsLocalFileWin.h
else
EXPORTS		+= nsLocalFileUnix.h
endif # windows
#endif
endif # os2

XPIDLSRCS	= \
		nsIBinaryInputStream.idl \
		nsIBinaryOutputStream.idl  \
		nsIByteArrayInputStream.idl \
		nsIFastLoadFileControl.idl \
		nsIFastLoadService.idl \
		nsIFile.idl \
		nsIFileSpec.idl \
		nsIInputStream.idl \
		nsIInputStreamTee.idl \
		nsILineInputStream.idl \
		nsILocalFile.idl \
		nsIMultiplexInputStream.idl \
		nsIObjectInputStream.idl \
		nsIObjectOutputStream.idl \
		nsIOutputStream.idl \
		nsIPipe.idl \
		nsIScriptableInputStream.idl \
		nsISeekableStream.idl \
		nsIStorageStream.idl \
		nsIStreamBufferAccess.idl \
		nsIStringStream.idl \
		$(NULL)

SDK_XPIDLSRCS   = \
		nsIDirectoryService.idl \
		$(NULL)

EXPORTS		:= $(addprefix $(srcdir)/, $(EXPORTS))

# we don't want the shared lib, but we want to force the creation of a static lib.
FORCE_STATIC_LIB = 1

# Force use of PIC
FORCE_USE_PIC	= 1

include $(topsrcdir)/config/rules.mk

DEFINES		+= -D_IMPL_NS_COM -D_IMPL_NS_BASE 

ifeq ($(OS_ARCH), Linux)
DEFINES		+= -D_BSD_SOURCE
endif
ifeq ($(OS_ARCH),WINNT)
DEFINES		+= -DWIN32_LEAN_AND_MEAN
endif

