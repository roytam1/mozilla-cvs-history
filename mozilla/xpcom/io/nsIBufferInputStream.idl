/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsIInputStream.idl"

interface nsIBuffer;

[scriptable, uuid(93e9a230-1955-11d3-933b-000064657374)]
interface nsIBufferInputStream : nsIInputStream
{
    /**
     * Returns the buffer underlying this input stream.
     */
    readonly attribute nsIBuffer Buffer;

    /**
     * Searches for a string in the input stream. Since the stream has a notion
     * of EOF, it is possible that the string may at some time be in the 
     * buffer, but is is not currently found up to some offset. Consequently,
     * both the found and not found cases return an offset:
     *    if found, return offset where it was found
     *    if not found, return offset of the first byte not searched
     * In the case the stream is at EOF and the string is not found, the first
     * byte not searched will correspond to the length of the buffer.
     */
    void Search(in string forString, 
                in boolean ignoreCase, 
                out boolean found,
                out unsigned long offsetSearchedTo);

    /**
     * Set this attribute to put the stream in non-blocking mode.
     */
    attribute boolean NonBlocking;
};
