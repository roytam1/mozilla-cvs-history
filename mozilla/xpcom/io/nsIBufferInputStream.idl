/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsIInputStream.idl"

[scriptable, uuid(93e9a230-1955-11d3-933b-000064657374)]
interface nsIBufferInputStream : nsIInputStream
{
    /**
     * Returns a pointer to the buffer underlying an input stream.
     * @param startPosition - the position relative to the start of
     *   the available data for which the segment is to be returned.
     *   If the startPosition is >= the available amount of data
     *   (returned by GetLength), NULL is returned for the bufferSegment.
     * @param bufferSegment - returns the buffer, starting from the 
     *   "read cursor" location.
     * @param bufferSegmentSize - the number of contiguous bytes
     *   that can be read from this location.
     * Note that the bufferSegmentSize may be less than the available
     * amount of data (returned by GetLength) if the buffer input
     * stream is internally represented by discontiguous segments. 
     */
    void GetBuffer(in unsigned long startPosition,
                   out charStar bufferSegment, 
                   out unsigned long bufferSegmentSize);

    /**
     * Returns the position of a string in the buffer. Returns -1 if
     * not found.
     */
    long Find(in charStar aString);
};
