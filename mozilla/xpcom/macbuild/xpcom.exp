ToString__4nsIDCFv		# nsID::ToString() const
Parse__4nsIDFPc		# nsID::Parse(char*)
#__vt__5IDKey		# IDKey::__vt
#monitor__18nsComponentManager		# nsComponentManager::monitor
#factories__18nsComponentManager		# nsComponentManager::factories
#HashValue__5IDKeyCFv		# IDKey::HashValue() const
#Equals__5IDKeyCFPC9nsHashKey		# IDKey::Equals(const nsHashKey*) const
#Clone__5IDKeyCFv		# IDKey::Clone() const
FreeLibraries__18nsComponentManagerFv		# nsComponentManager::FreeLibraries()
ProgIDToCLSID__18nsComponentManagerFPCcP4nsID		# nsComponentManager::ProgIDToCLSID(const char*,nsID*)
RegisterComponent__18nsComponentManagerFRC4nsIDPCcPCcPCcii		# nsComponentManager::RegisterComponent(const nsID&,const char*,const char*,const char*,int,int)
UnregisterComponent__18nsComponentManagerFRC4nsIDPCc		# nsComponentManager::UnregisterComponent(const nsID&,const char*)
UnregisterFactory__18nsComponentManagerFRC4nsIDP10nsIFactory		# nsComponentManager::UnregisterFactory(const nsID&,nsIFactory*)
RegisterFactory__18nsComponentManagerFRC4nsIDPCcPCcP10nsIFactoryi		# nsComponentManager::RegisterFactory(const nsID&,const char*,const char*,nsIFactory*,int)
#CreateInstance2__18nsComponentManagerFRC4nsIDP11nsISupportsRC4nsIDPvPPv		# nsComponentManager::CreateInstance2(const nsID&,nsISupports*,const nsID&,void*,void**)
CreateInstance__18nsComponentManagerFRC4nsIDP11nsISupportsRC4nsIDPPv		# nsComponentManager::CreateInstance(const nsID&,nsISupports*,const nsID&,void**)
CreateInstance__18nsComponentManagerFPCcP11nsISupportsRC4nsIDPPv		# nsComponentManager::CreateInstance(const char*,nsISupports*,const nsID&,void**)
#Initialize__18nsComponentManagerFv		# nsComponentManager::Initialize()
#checkInitialized__18nsComponentManagerFv		# nsComponentManager::checkInitialized()
#__dt__5IDKeyFv		# IDKey::~IDKey()
FindFactory__18nsComponentManagerFRC4nsIDPP10nsIFactory		# nsComponentManager::FindFactory(const nsID&,nsIFactory**)
#__vt__9nsHashKey		# nsHashKey::__vt
Enumerate__11nsHashtableFPFP9nsHashKeyPvPv_iPv  # nsHashtable::Enumerate(int (*)(nsHashKey*, void*))
Clone__11nsHashtableFv		# nsHashtable::Clone()
Reset__11nsHashtableFv		# nsHashtable::Reset()
Remove__11nsHashtableFP9nsHashKey		# nsHashtable::Remove(nsHashKey*)
Get__11nsHashtableFP9nsHashKey		# nsHashtable::Get(nsHashKey*)
Put__11nsHashtableFP9nsHashKeyPv		# nsHashtable::Put(nsHashKey*,void*)
Exists__11nsHashtableFP9nsHashKey		# nsHashtable::Exists(nsHashKey*)
__dt__11nsHashtableFv		# nsHashtable::~nsHashtable()
__ct__11nsHashtableFUii		# nsHashtable::nsHashtable(unsigned int, PRBool)
Exists__11nsHashtableFP9nsHashKey	# nsHashtable::Exists(nsHashKey*)
__dt__9nsHashKeyFv		# nsHashKey::~nsHashKey()
__ct__9nsHashKeyFv		# nsHashKey::nsHashKey()
Warning__7nsDebugFPCcPCci		# nsDebug::Warning(const char*,const char*,int)
Error__7nsDebugFPCcPCci		# nsDebug::Error(const char*,const char*,int)
NotReached__7nsDebugFPCcPCci		# nsDebug::NotReached(const char*,const char*,int)
NotYetImplemented__7nsDebugFPCcPCci		# nsDebug::NotYetImplemented(const char*,const char*,int)
Assertion__7nsDebugFPCcPCcPCci		# nsDebug::Assertion(const char*,const char*,const char*,int)
PostCondition__7nsDebugFPCcPCcPCci		# nsDebug::PostCondition(const char*,const char*,const char*,int)
PreCondition__7nsDebugFPCcPCcPCci		# nsDebug::PreCondition(const char*,const char*,const char*,int)
#Create__8nsMallocFP11nsISupportsRC4nsIDPPv		# nsMalloc::Create(nsISupports*,const nsID&,void**)
#Break__7nsDebugFPCci		# nsDebug::Break(const char*,int)
Abort__7nsDebugFPCci		# nsDebug::Abort(const char*,int)
#__vt__17SupportsArrayImpl		# SupportsArrayImpl::__vt
#__vt__16nsISupportsArray		# nsISupportsArray::__vt
#__vt__11nsISupports		# nsISupports::__vt
#__eq__17SupportsArrayImplCFRC16nsISupportsArray		# SupportsArrayImpl::operator ==(const nsISupportsArray&) const
#Count__17SupportsArrayImplCFv		# SupportsArrayImpl::Count() const
#__vc__17SupportsArrayImplCFi		# SupportsArrayImpl::operator [](int) const
#AppendElement__17SupportsArrayImplFP11nsISupports		# SupportsArrayImpl::AppendElement(nsISupports*)
NS_NewISupportsArray__FPP16nsISupportsArray		# NS_NewISupportsArray(nsISupportsArray**)
NS_NewUnionEnumerator
NS_NewIntersectionEnumerator
NS_NewConjoiningEnumerator
#EnumerateBackwards__17SupportsArrayImplFPFP11nsISupportsPv_iPv		# SupportsArrayImpl::EnumerateBackwards(int (*)(nsISupports*, void*),void*)
#EnumerateForwards__17SupportsArrayImplFPFP11nsISupportsPv_iPv		# SupportsArrayImpl::EnumerateForwards(int (*)(nsISupports*, void*),void*)
#Compact__17SupportsArrayImplFv		# SupportsArrayImpl::Compact()
#Clear__17SupportsArrayImplFv		# SupportsArrayImpl::Clear()
#RemoveLastElement__17SupportsArrayImplFPC11nsISupports		# SupportsArrayImpl::RemoveLastElement(const nsISupports*)
#RemoveElement__17SupportsArrayImplFPC11nsISupportsi		# SupportsArrayImpl::RemoveElement(const nsISupports*,int)
#RemoveElementAt__17SupportsArrayImplFi		# SupportsArrayImpl::RemoveElementAt(int)
#ReplaceElementAt__17SupportsArrayImplFP11nsISupportsi		# SupportsArrayImpl::ReplaceElementAt(nsISupports*,int)
#InsertElementAt__17SupportsArrayImplFP11nsISupportsi		# SupportsArrayImpl::InsertElementAt(nsISupports*,int)
#LastIndexOf__17SupportsArrayImplCFPC11nsISupports		# SupportsArrayImpl::LastIndexOf(const nsISupports*) const
#IndexOf__17SupportsArrayImplCFPC11nsISupportsi		# SupportsArrayImpl::IndexOf(const nsISupports*,int) const
#ElementAt__17SupportsArrayImplCFi		# SupportsArrayImpl::ElementAt(int) const
#Equals__17SupportsArrayImplCFPC16nsISupportsArray		# SupportsArrayImpl::Equals(const nsISupportsArray*) const
#__as__17SupportsArrayImplFRC16nsISupportsArray		# SupportsArrayImpl::operator =(const nsISupportsArray&)
#DeleteArray__17SupportsArrayImplFv		# SupportsArrayImpl::DeleteArray()
#QueryInterface__17SupportsArrayImplFRC4nsIDPPv		# SupportsArrayImpl::QueryInterface(const nsID&,void**)
#Release__17SupportsArrayImplFv		# SupportsArrayImpl::Release()
#AddRef__17SupportsArrayImplFv		# SupportsArrayImpl::AddRef()
#__dt__17SupportsArrayImplFv		# SupportsArrayImpl::~SupportsArrayImpl()
#__ct__17SupportsArrayImplFv		# SupportsArrayImpl::SupportsArrayImpl()
#PL_VectorAssertValid
PL_VectorRemove
PL_VectorInsert
PL_VectorAdd
PL_VectorSet
PL_VectorClone
PL_VectorCopy
PL_VectorCompact
PL_VectorIsValidIndex
PL_VectorSetSize
PL_VectorFinalize
PL_VectorInitialize
PL_VectorDestroy
PL_NewVector
GetGlobalServiceManager__16nsServiceManagerFPP17nsIServiceManager		# nsServiceManager::GetGlobalServiceManager(nsIServiceManager**)

# GetFactory call
NSGetFactory
NS_RegistryGetFactory

# nsServiceManager static method exports.
ReleaseService__16nsServiceManagerFRC4nsIDP11nsISupportsP19nsIShutdownListener
ReleaseService__16nsServiceManagerFPCcP11nsISupportsP19nsIShutdownListener
GetService__16nsServiceManagerFRC4nsIDRC4nsIDPP11nsISupportsP19nsIShutdownListener
GetService__16nsServiceManagerFPCcRC4nsIDPP11nsISupportsP19nsIShutdownListener
RegisterService__16nsServiceManagerFPCcP11nsISupports
UnregisterService__16nsServiceManagerFPCc
RegisterService__16nsServiceManagerFRC4nsIDP11nsISupports
UnregisterService__16nsServiceManagerFRC4nsID

# nsComponentManager static method exports.
AutoRegister__18nsComponentManagerFQ219nsIComponentManager16RegistrationTimePCc		# nsComponentManager::AutoRegister(nsIComponentManager::RegistrationTime,const char*)

# nsTraceRefcnt
Destroy__13nsTraceRefcntFPvPCci
Create__13nsTraceRefcntFPvPCcPCci
Release__13nsTraceRefcntFPvUlPCci
AddRef__13nsTraceRefcntFPvUlPCci
NS_MeanAndStdDev

# nsCOMPtr
begin_assignment__13nsCOMPtr_baseFv
assign_with_QueryInterface__13nsCOMPtr_baseFP11nsISupportsRC4nsIDPUi
assign_with_AddRef__13nsCOMPtr_baseFP11nsISupports
__dt__13nsCOMPtr_baseFv

# nsSupportsArrayEnumerator
NS_NewISupportsArrayEnumerator__FP16nsISupportsArrayPP26nsIBidirectionalEnumerator		# NS_NewISupportsArrayEnumerator(nsISupportsArray*,nsIBidirectionalEnumerator**)
Prev__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::Prev()
Last__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::Last()
IsDone__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::IsDone()
CurrentItem__25nsSupportsArrayEnumeratorFPP11nsISupports		# nsSupportsArrayEnumerator::CurrentItem(nsISupports**)
Next__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::Next()
First__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::First()
QueryInterface__25nsSupportsArrayEnumeratorFRC4nsIDPPv		# nsSupportsArrayEnumerator::QueryInterface(const nsID&,void**)
Release__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::Release()
AddRef__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::AddRef()
__dt__25nsSupportsArrayEnumeratorFv		# nsSupportsArrayEnumerator::~nsSupportsArrayEnumerator()
__ct__25nsSupportsArrayEnumeratorFP16nsISupportsArray		# nsSupportsArrayEnumerator::nsSupportsArrayEnumerator(nsISupportsArray*)

# nsXPIDLString
__ct__13nsXPIDLStringFv
__dt__13nsXPIDLStringFv
__opPCUs__13nsXPIDLStringFv
Copy__13nsXPIDLStringFPCUs
StartAssignmentByValue__13nsXPIDLStringFv
StartAssignmentByReference__13nsXPIDLStringFv
__ct__14nsXPIDLCStringFv
__dt__14nsXPIDLCStringFv
__opPCc__14nsXPIDLCStringFv
Copy__14nsXPIDLCStringFPCc
StartAssignmentByValue__14nsXPIDLCStringFv
StartAssignmentByReference__14nsXPIDLCStringFv

# nsCStringKey
__ct__12nsCStringKeyFPCc
__dt__12nsCStringKeyFv
Clone__12nsCStringKeyCFv
Equals__12nsCStringKeyCFPC9nsHashKey
HashValue__12nsCStringKeyCFv

# nsAllocator
Clone__11nsAllocatorFPCvUi
HeapMinimize__11nsAllocatorFv
Free__11nsAllocatorFPv
Realloc__11nsAllocatorFPvUi
Alloc__11nsAllocatorFUi

# nsFixedSizeAllocator
Free__20nsFixedSizeAllocatorFPvUl
Alloc__20nsFixedSizeAllocatorFUl
Init__20nsFixedSizeAllocatorFPCcPCUliii

# NS_NewEmptyEnumerator
NS_NewEmptyEnumerator

# nsArrayEnumerator
__ct__17nsArrayEnumeratorFP16nsISupportsArray
__dt__17nsArrayEnumeratorFv
AddRef__17nsArrayEnumeratorFv
Release__17nsArrayEnumeratorFv
QueryInterface__17nsArrayEnumeratorFRC4nsIDPPv
HasMoreElements__17nsArrayEnumeratorFPi
GetNext__17nsArrayEnumeratorFPP11nsISupports

# nsSingletonEnumerator
__ct__21nsSingletonEnumeratorFP11nsISupports
__dt__21nsSingletonEnumeratorFv
AddRef__21nsSingletonEnumeratorFv
Release__21nsSingletonEnumeratorFv
QueryInterface__21nsSingletonEnumeratorFRC4nsIDPPv
HasMoreElements__21nsSingletonEnumeratorFPi
GetNext__21nsSingletonEnumeratorFPP11nsISupports

# nsAdapterEnumerator
__ct__19nsAdapterEnumeratorFP13nsIEnumerator
__dt__19nsAdapterEnumeratorFv
AddRef__19nsAdapterEnumeratorFv
Release__19nsAdapterEnumeratorFv
QueryInterface__19nsAdapterEnumeratorFRC4nsIDPPv
HasMoreElements__19nsAdapterEnumeratorFPi
GetNext__19nsAdapterEnumeratorFPP11nsISupports

# By the way, overloading NS_NewPipe 3 times is evil.
# nsPipe.cpp exports.
NS_NewPipe__FPP20nsIBufferInputStreamPP21nsIBufferOutputStreamUiUiiP17nsIBufferObserver
NS_NewPipe__FPP14nsIInputStreamPP15nsIOutputStreamiUi
# nsPipe2.cpp exports.
NS_NewPipe__FPP20nsIBufferInputStreamPP21nsIBufferOutputStreamP15nsIPipeObserverUiUi

NS_GetLog__FPCcUi

NS_GetLog__FPCcUi
