#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 
#

DEPTH		= ../../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= plugin
XPIDL_MODULE	= layout
LIBRARY_NAME	= gkplugin
EXPORT_LIBRARY = 1
IS_COMPONENT    = 1
MODULE_NAME	= nsPluginModule
REQUIRES	= xpcom \
		  xpconnect \
		  string \
		  java \
		  pref \
		  necko \
		  gtkxtbin \
		  webshell \
		  caps \
		  intl \
		  uconv \
		  unicharutil \
		  dom \
		  gfx \
		  content \
		  widget \
		  mimetype \
		  oji \
		  exthandler \
		  docshell \
		  webbrwsr \
		  windowwatcher \
		  imglib2 \
		  layout \
		  $(NULL)
# for xlib port
REQUIRES	+= xlibxtbin xlibrgb

CPPSRCS		= \
		ns4xPlugin.cpp \
		ns4xPluginInstance.cpp \
		nsPluginDocLoaderFactory.cpp \
		nsPluginHostImpl.cpp \
		nsPluginModule.cpp \
		nsPluginInstancePeer.cpp \
		nsPluginViewer.cpp \
		nsPluginDirServiceProvider.cpp \
		$(NULL)

ifeq ($(OS_ARCH), BeOS)
	CPPSRCS += nsPluginsDirBeOS.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
else
ifeq ($(OS_ARCH),WINNT)
	CPPSRCS += nsPluginsDirWin.cpp
	CPPSRCS += nsPluginNativeWindowWin.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
	CPPSRCS += nsPluginsDirOS2.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
else
	CPPSRCS += nsPluginsDirUnix.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
endif
endif
endif

EXPORTS		= \
    nsPluginViewer.h \
		$(NULL)

ifeq ($(OS_ARCH),WINNT)
EXTRA_DSO_LIBS	+= gkgfx
endif

EXTRA_DSO_LDOPTS = \
		$(EXTRA_DSO_LIBS) \
		$(MOZ_NECKO_UTIL_LIBS) \
		$(MOZ_COMPONENT_LIBS) \
		$(MOZ_UNICHARUTIL_LIBS) \
		$(NULL)

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
EXTRA_DSO_LDOPTS += $(TK_LIBS)
endif

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_ARCH),WINNT)
CXXFLAGS	+= -GX
OS_LIBS		+= version.lib
endif

ifdef MOZ_ENABLE_GTK
CXXFLAGS        += $(MOZ_GTK_CFLAGS)
CFLAGS          += $(MOZ_GTK_CFLAGS)
EXTRA_DSO_LDOPTS += -lgtkxtbin -lgtksuperwin $(XLDFLAGS) $(XT_LIBS) $(MOZ_GTK_LDFLAGS)
endif		#MOZ_ENABLE_GTK

ifdef MOZ_ENABLE_GTK2
CXXFLAGS        += $(MOZ_GTK2_CFLAGS)
CFLAGS          += $(MOZ_GTK2_CFLAGS)
EXTRA_DSO_LDOPTS += -lgtkxtbin $(XLDFLAGS) $(XT_LIBS) $(MOZ_GTK2_LIBS)
endif           #MOZ_ENABLE_GTK2

ifdef MOZ_ENABLE_XLIB
EXTRA_DSO_LDOPTS += -lxlibxtbin -lxlibrgb -L/usr/X11R6/lib $(XT_LIBS)
ifndef MOZ_MONOLITHIC_TOOLKIT
CXXFLAGS        += $(MOZ_XLIB_CFLAGS)
CFLAGS          += $(MOZ_XLIB_CFLAGS)
else
CXXFLAGS        += $(TK_CFLAGS)
CFLAGS          += $(TK_CFLAGS)
endif		#MOZ_MONOLITHIC_TOOLKIT
endif		#MOZ_ENABLE_XLIB

ifdef MOZ_ENABLE_QT
EXTRA_DSO_LDOPTS += $(MOZ_QT_LDFLAGS)
CXXFLAGS        += $(MOZ_QT_CFLAGS)
CFLAGS          += $(MOZ_QT_CFLAGS)
endif		#MOZ_ENABLE_QT

