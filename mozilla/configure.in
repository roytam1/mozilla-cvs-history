dnl The contents of this file are subject to the Mozilla Public License
dnl Version 1.0 (the "License"); you may not use this file except in
dnl compliance with the License. You may obtain a copy of the License
dnl at http://www.mozilla.org/MPL/
dnl 
dnl Software distributed under the License is distributed on an "AS IS"
dnl basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See 
dnl the License for the specific language governing rights and 
dnl limitations under the License.
dnl 
dnl The Original Code is this file as it was released upon August 6, 1998.
dnl
dnl The Initial Developer of this code under the MPL is Christopher
dnl Seawood, <cls@seawood.org>.  Portions created by Christopher Seawood 
dnl are Copyright (C) 1998 Christopher Seawood.  All Rights Reserved.

dnl Process this file with autoconf to produce a configure script.
AC_INIT(config/config.mk)
AC_CONFIG_HEADER(include/config.h nsprpub/include/config.h)
AC_CONFIG_AUX_DIR(${srcdir}/build/autoconf)
AC_CANONICAL_SYSTEM

dnl Set the version number of the libjpeg included with mozilla
dnl MOZJPEG=60

dnl Set various checks
MISSING_X=
MISSING_MOTIF=
MISSING_QT=
MISSING_GTK=
MISSING_GNOME=

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_CXXCPP
AC_PROG_CC_C_O
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_AWK
AC_PROG_RANLIB

if [ test "$GCC" = "yes" ]; then
    GNU_CC=1
fi

if [ test "$GXX" = "yes" ]; then
    GNU_CXX=1
fi

AC_SUBST(GNU_CC)
AC_SUBST(GNU_CXX)

AC_PATH_PROG(EMACS, emacs, /bin/true)
AC_PATH_PROG(PERL, perl, /bin/true)
AC_PATH_PROG(WHOAMI, whoami, /bin/true)
AC_PATH_PROG(UNZIP, unzip, /bin/true)
AC_PATH_PROG(ZIP, zip, /bin/true)

AC_PATH_X
AC_PATH_XTRA
MOTIF_VERSION=`${srcdir}/config/mkdetect/detect_motif.sh -cc $CC -xif -I$x_includes`
MOTIF_INCLUDES=`${srcdir}/config/mkdetect/detect_motif.sh -cc $CC -xif -I$x_includes -if`
MOTIF_STATIC_FLAGS=`${srcdir}/config/mkdetect/detect_motif.sh -cc $CC -xif -I$x_includes -sf`
MOTIF_DYNAMIC_FLAGS=`${srcdir}/config/mkdetect/detect_motif.sh -cc $CC -xif -I$x_includes -df`
MOTIF_DYNAMIC_PATHS=`${srcdir}/config/mkdetect/detect_motif.sh -cc $CC -xif -I$x_includes -dp`

${srcdir}/config/mkdetect/detect_motif.sh --cleanup

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_BLKSIZE
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM
AC_STRUCT_TIMEZONE

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h paths.h strings.h unistd.h)
AC_CHECK_HEADERS(sys/bittypes.h sys/file.h sys/ioctl.h sys/time.h unistd.h)
AC_CHECK_HEADERS(getopt.h ioctl.h sys/cdefs.h)

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_MMAP
dnl AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STRCOLL
AC_FUNC_STRFTIME
AC_FUNC_UTIME_NULL
AC_FUNC_VFORK
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(ftime getcwd gethostname gettimeofday getwd mkdir mktime putenv rmdir select socket strcspn strdup strerror strspn strstr strtol strtoul uname qsort)

res=`echo $target_os| grep -c "^solaris"`
if [ test $res != 0 ]; then
    AC_DEFINE(BROKEN_QSORT)
fi

dnl Mozilla specific options
AC_ARG_ENABLE(fe,
[  --enable-fe=\$val	  enable \$val fe (defaults to x)],
    [fe_list=`echo "$enableval" | sed -e 's/,/ /g' -e 's|$| |'`], fe_list="x ")

for fe in $fe_list; do
    # Test whether such a subdir really exists.
    if [ test -d $srcdir/cmd/${fe}fe ]; then
	MOZ_FE="$MOZ_FE $fe"
    else
    	AC_MSG_WARN(FE directory ${fe}fe does not exist...removing)
    fi
done

echo "Using FE:${MOZ_FE}."
unset fe_list

dnl Enable use of security
AC_ARG_ENABLE(crypto,
[  --enable-crypto	  enable use of SSL (untested)],
	[if test "$enableval" = "yes"; then
	    MOZ_SECURITY=1
	    NO_SECURITY=
	else
	    MOZ_SECURITY=
	    NO_SECURITY=1
	fi],
	[MOZ_SECURITY= NO_SECURITY=1])

AC_ARG_ENABLE(netcast,
[  --enable-netcast	  enable use of netcast (untested)],
	[if test "$enableval" = "yes"; then
	    MOZ_NETCAST=1
	fi ] )

AC_ARG_ENABLE(java,
[  --enable-java           enable use of java applets (untested)],
	[if test "$enableval" = "yes"; then
	    MOZ_JAVA=1
	fi] )

AC_ARG_ENABLE(oji,
[  --enable-oji            enable use of Open JVM Interface (untested)],
	[if test "$enableval" = "yes"; then
	    MOZ_OJI=1
	fi] )

AC_ARG_ENABLE(debug,
[  --enable-debug	  enable debug symbols],
	[if test "$enableval" = yes; then
	    MOZ_DEBUG=1 CFLAGS="$CFLAGS -g"
	fi] )

AC_ARG_ENABLE(profile,
[  --enable-profile	  enable profiling (solaris only)],
	[if test "$enableval" = "yes"; then
	    MOZILLA_GPROF=1
	fi] )

AC_ARG_ENABLE(mailnews,
[  --enable-mailnews       enable Mail & News (broken)],
	[if test "$enableval" = "yes"; then
	    MOZ_DARK=1
	fi] )

AC_ARG_ENABLE(editor,
[  --disable-editor        disable editor],
	[if test "$enableval" = "no"; then
	    NO_EDITOR=1
	fi] )

AC_ARG_ENABLE(asserts,
[  --disable-asserts       disable asserts during debugging],
	[if test "$enableval" = "no"; then
	    UNIX_SKIP_ASSERTS=1
	fi] )

AC_ARG_ENABLE(async-dns,
[  --disable-async-dns     disable separate dns thread],
	[if test "$enableval" = "no"; then
	    NO_UNIX_ASYNC_DNS=1
	fi] )

AC_ARG_ENABLE(shack,
[  --enable-shack          HTML-embeddable native widgets (experimental)],
	[if test "$enableval" = "yes"; then
	    SHACK=1
	fi] )

AC_ARG_ENABLE(shared,
[  --disable-shared        disable building of internal shared libs],
	[if test "$enableval" = "no"; then
	    NO_SHARED_LIB=1
	fi] )

AC_ARG_ENABLE(static,
[  --disable-static        disable building of internal static libs (broken)],
	[if test "$enableval" = "no"; then
	    NO_STATIC_LIB=1
	fi] )

AC_ARG_ENABLE(tests,
[  --enable-tests          enable test stubs],
	[if test "$enableval" = "yes"; then
	    ENABLE_TESTS=1
	fi])

AC_ARG_ENABLE(homedir,
[  --enable-homedir=\$val   set the homedir to \$val (defaults to .mozilla, broken for gnomefe)],
	[ res=`echo $enableval | grep -c "\/"`
	    if [ test $res != 0 ]; then
		AC_MSG_ERROR("Homedir must be single relative path.")
	    else 
		MOZ_USER_DIR=\\\"$enableval\\\"
	    fi], 
	MOZ_USER_DIR='\".mozilla\"' )

AC_ARG_ENABLE(smart-mail,
[  --enable-smart-mail       enable HTML/RDF-based client-side mail (untested)],
	[if test "$enableval" = "yes"; then
	    MOZ_SMART_MAIL=1
	fi])

AC_SUBST(MOZ_FE)
AC_SUBST(MOZ_SECURITY)
AC_SUBST(NO_SECURITY)
AC_SUBST(MOZ_NETCAST)
AC_SUBST(MOZ_JAVA)
AC_SUBST(MOZ_OJI)
AC_SUBST(MOZ_DEBUG)
AC_SUBST(MOZILLA_GPROF)
AC_SUBST(MOZ_DARK)
AC_SUBST(NO_EDITOR)
AC_SUBST(UNIX_SKIP_ASSERTS)
AC_SUBST(NO_UNIX_ASYNC_DNS)
AC_SUBST(SHACK)
AC_SUBST(NO_SHARED_LIB)
AC_SUBST(NO_STATIC_LIB)
AC_SUBST(ENABLE_TESTS)
AC_SUBST(MOZ_USER_DIR)
AC_SUBST(MOZ_SMART_MAIL)

dnl ===========================================
dnl             Stuff that uses X
dnl ===========================================
saveCFLAGS="$CFLAGS"
saveLDFLAGS="$LDFLAGS"
saveLIBS="$LIBS"

CFLAGS="$X_CFLAGS"
LDFLAGS="$X_LIBS"
LIBS="$X_PRE_LIBS $X_EXTRA_LIBS"

dnl Checks for X libraries.
AC_CHECK_LIB(X11, XDrawLines,,
	[MISSING_X="$MISSING_X -lX11"])
AC_CHECK_LIB(Xext, XextAddDisplay,,
	[MISSING_X="$MISSING_X -lXext"], -lX11)
AC_CHECK_LIB(Xmu, XmuLookupString,,
	[MISSING_X="$MISSING_X -lXmu"], -lX11)
AC_CHECK_LIB(ICE, IceFlush,,, -lX11)
AC_CHECK_LIB(SM, SmcCloseConnection,,, -lICE -lX11)
AC_CHECK_LIB(Xt, XtFree,,
	[MISSING_X="$MISSING_X -lXt"], -lX11)
AC_CHECK_LIB(Xpm, XpmWriteFileFromImage,,
	[MISSING_X="$MISSING_X -lXpm"], -lX11)

# Need to add check for motif 2.1
res=`echo :$MOZ_FE | grep -c " x"`
if [ test $res != 0 ]; then
    if [ test "$MOTIF_VERSION" = "2.1" ]; then
	AC_CHECK_LIB(Xp, XpGetPrinterList, 
	    FE_X_LIBS="-lXp $FE_X_LIBS",
	    [MISSING_X="$MISSING_X -lXp"], -lX11)
    fi

    if [ test "$MOTIF_STATIC_LIB" = "unknown" -a "$MOTIF_DYNAMIC_LIB" = "unknown" ]; then
	AC_ERROR("Cannot find neither dynamic nor static motif libraries")
    fi

    # Build dynamic motif preferably....to be replaced by config option
    if [ test "$MOTIF_DYNAMIC_CFLAGS" != "unknown" ]; then
    	AC_CHECK_LIB(Xm, XmStringCreate, FE_X_LIBS="$MOTIF_DYNAMIC_PATHS $MOTIF_DYNAMIC_FLAGS $FE_X_LIBS",
	    [MISSING_MOTIF=1], $MOTIF_DYNAMIC_PATHS $FE_X_LIBS -lX11)
    else
    	AC_CHECK_LIB(Xm, XmStringCreate, FE_X_LIBS="$MOTIF_STATIC_FLAGS $FE_X_LIBS",
	    [MISSING_MOTIF=1], $FE_X_LIBS -lX11)
    fi
fi

res=`echo :$MOZ_FE | grep -c " qt"`
if [ test $res != 0 ]; then
    AC_CHECK_LIB(qt, set_new_handler, 
	[FE_QT_LIBS="-lqt" FE_QT_CFLAGS='-I$(QTDIR)/include'],
	[MISSING_QT=1])
fi

res=`echo :$MOZ_FE | grep -c " gtk"`
if [ test $res != 0 ]; then
    AC_CHECK_LIB(gtk, gtk_widget_set, 
	[FE_GTK_LIBS="`gtk-config --libs`" FE_GTK_CFLAGS="`gtk-config --cflags`" ],
	[MISSING_GTK=1],
	`gtk-config --libs`)
fi

res=`echo :$MOZ_FE | grep -c " gnome"`
if [ test $res != 0 ]; then
    AC_CHECK_LIB(gnome, gnome_config_set_bool,
	[FE_GNOME_LIBS="`gnome-config --libs`" FE_GNOME_CFLAGS="`gnome-config --cflags`"],
	[MISSING_GNOME=1],
	`gnome-config --libs`)
fi

XCFLAGS="$X_CFLAGS"
XLFLAGS="$X_LIBS"
XLIBS="$LIBS"

AC_SUBST(FE_X_CFLAGS)
AC_SUBST(FE_X_LIBS)
AC_SUBST(FE_QT_CFLAGS)
AC_SUBST(FE_QT_LIBS)
AC_SUBST(FE_GTK_CFLAGS)
AC_SUBST(FE_GTK_LIBS)
AC_SUBST(FE_GNOME_CFLAGS)
AC_SUBST(FE_GNOME_LIBS)

AC_SUBST(XCFLAGS)
AC_SUBST(XLFLAGS)
AC_SUBST(XLIBS)

LIBS="$saveLIBS"
CFLAGS="$saveCFLAGS"
LDFLAGS="$saveLDFLAGS"

dnl
dnl Specify paths to look for additional libraries
dnl ==================================================
AC_ARG_WITH(add-libs,
[  --with-add-libs         pass compiler flags to look for gfx libraries],
        [ADDLIBS="$withval" ADD_LIB_PATH=$withval],
        [ADDLIBS="" ADD_LIB_PATH=""])

AC_ARG_WITH(add-incs,
[  --with-add-incs         pass compiler flags to look for gfx header files],
        [ADDINCS="$withval" ADD_INC_PATH=$withval],
        [ADDINCS="" ADD_INC_PATH=""])

dnl system JPEG support
dnl ============
dnl If --with-jpeg=$val is specified, use the logic specified by $val

sysjpeg=maybe
AC_ARG_WITH(jpeg,
[  --with-jpeg		  use system libjpeg if present],
	sysjpeg=$withval)

if test "$sysjpeg" = yes; then
    AC_CHECK_LIB(jpeg, jpeg_destroy_compress, [SYSTEM_JPEG=1 LIBS="$LIBS -ljpeg"], SYSTEM_JPEG=)
fi

dnl    if test "$sysjpeg" = maybe; then
dnl	AC_TRY_RUN(
dnl		#include <stdio.h>
dnl		#include <sys/types.h>
dnl		#include <jpeglib.h>
dnl		int main () {
dnl		#if JPEG_LIB_VERSION >= $MOZJPEG
dnl		   exit(0);
dnl		#else
dnl		   exit(1);
dnl		#endif
dnl		}
dnl	, SYSTEM_JPEG=1, SYSTEM_JPEG=, SYSTEM_JPEG=)
dnl     else
dnl    	SYSTEM_JPEG=
dnl     fi

dnl system PNG Support
dnl ===========
AC_ARG_WITH(png, 
[  --with-png		  use of system libpng if present],
        syspng=$withval, syspng=no)

if test "$syspng" = yes; then
    AC_CHECK_LIB(png, png_get_valid, 
	[SYSTEM_PNG=1 LIBS="$LIBS -lpng"] , SYSTEM_PNG=, -lz -lm)
fi

dnl system ZLIB support
dnl =============
AC_ARG_WITH(zlib,
[  --with-zlib		  use system libz if present],
	syslibz=$withval, [syslibz=no SYSTEM_ZLIB=])

if test "$syslibz" = yes; then
    AC_CHECK_LIB(z, gzread, [SYSTEM_ZLIB=1 LIBS="$LIBS -lz"], SYSTEM_ZLIB=)
fi

AC_SUBST(SYSTEM_JPEG)
AC_SUBST(SYSTEM_PNG)
AC_SUBST(SYSTEM_ZLIB)

dnl Checks for libraries.
AC_CHECK_LIB(c, strcpy)
AC_CHECK_LIB(m, atan)
AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(thread, thread_create)
AC_CHECK_LIB(pthread, pthread_create)
AC_CHECK_LIB(pcthreads, pthread_create)
AC_CHECK_LIB(resolv, res_gethostbyaddr)
AC_CHECK_LIB(socket, getnetbyaddr)
AC_CHECK_LIB(util, login)
AC_CHECK_LIB(nsl, xdr_string)
AC_CHECK_LIB(l, yywrap,,
    AC_CHECK_LIB(fl, yywrap))

dnl Replace `main' with a function in -lC:
dnl AC_CHECK_LIB(C, main)
dnl Replace `main' with a function in -lC_r:
dnl AC_CHECK_LIB(C_r, main)
dnl Replace `main' with a function in -lSgm:
dnl AC_CHECK_LIB(Sgm, main)
dnl Replace `main' with a function in -laudio:
AC_CHECK_LIB(audio, main)
dnl Replace `main' with a function in -lc_r:
dnl AC_CHECK_LIB(c_r, main)
dnl Replace `main' with a function in -ldld:
dnl AC_CHECK_LIB(dld, main)
dnl Replace `main' with a function in -ldnet_stub:
dnl AC_CHECK_LIB(dnet_stub, main)
dnl Replace `main' with a function in -lelf:
AC_CHECK_LIB(elf, elf_ran)
dnl Replace `main' with a function in -lgen:
dnl AC_CHECK_LIB(gen, main)
dnl Replace `main' with a function in -lhash:
dnl AC_CHECK_LIB(hash, main)
dnl Replace `main' with a function in -lintl:
AC_CHECK_LIB(intl, main)
dnl Replace `main' with a function in -lip6:
dnl AC_CHECK_LIB(ip6, main)
dnl Replace `main' with a function in -lipc:
dnl AC_CHECK_LIB(ipc, main)
dnl Replace `main' with a function in -lmalloc_cv:
dnl AC_CHECK_LIB(malloc_cv, main)
dnl Replace `main' with a function in -lmsgc:
dnl AC_CHECK_LIB(msgc, main)
dnl Replace `main' with a function in -lmsgc_shr:
dnl AC_CHECK_LIB(msgc_shr, main)
dnl Replace `main' with a function in -lnspr:
dnl AC_CHECK_LIB(nspr, main)
dnl Replace `main' with a function in -lnspr_shr:
dnl AC_CHECK_LIB(nspr_shr, main)
dnl Replace `main' with a function in -lPW:
dnl AC_CHECK_LIB(PW, main)
dnl Replace `main' with a function in -lots:
dnl AC_CHECK_LIB(ots, main)
dnl Replace `main' with a function in -lplc:
dnl AC_CHECK_LIB(plc, main)
dnl Replace `main' with a function in -lplc_shr:
dnl AC_CHECK_LIB(plc_shr, main)
dnl Replace `main' with a function in -lposix4:
dnl AC_CHECK_LIB(posix4, main)
dnl Replace `main' with a function in -lprstrms:
dnl AC_CHECK_LIB(prstrms, main)
dnl Replace `main' with a function in -lprstrms_shr:
dnl AC_CHECK_LIB(prstrms_shr, main)
dnl Replace `main' with a function in -lrt:
dnl AC_CHECK_LIB(rt, main)
dnl Replace `main' with a function in -lsvld:
dnl AC_CHECK_LIB(svld, main)
dnl Replace `main' with a function in -lw:
dnl AC_CHECK_LIB(w, main)

AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBS)
AC_SUBST(ADDINCS)
AC_SUBST(ADDLIBS)

dnl Check for missing components
if [ test "$MISSING_X" != "" ]; then
   AC_MSG_ERROR([ Could not find the following libraries: $MISSING_X.]);
fi

res=`echo :$MOZ_FE | grep -c " x"`
if [ test $res != 0 ]; then
    if [ test "$MISSING_MOTIF" != "" ]; then 
	AC_MSG_ERROR([ Could not find standard motif libraries.]);
    fi
fi

res=`echo :$MOZ_FE | grep -c " qt"`
if [ test $res != 0 ]; then
    if [ test "$MISSING_QT" != "" ]; then 
	AC_MSG_ERROR([ Could not find standard qt libraries.]);
    fi
fi

res=`echo :$MOZ_FE | grep -c " gtk"`
if [ test $res != 0 ]; then
    if [ test "$MISSING_GTK" != "" ]; then
	AC_MSG_ERROR([ Could not find standard gtk libraries.]);
    fi
fi

res=`echo :$MOZ_FE | grep -c " gnome"`
if [ test $res != 0 ]; then
    if [ test "$MISSING_GNOME" != "" ]; then
	AC_MSG_ERROR([ Could not find standard gnome libraries.]);
    fi
fi

AC_OUTPUT(
Makefile
base/Makefile
base/public/Makefile
base/src/Makefile
base/src/unix/Makefile
base/tests/Makefile
caps/Makefile
caps/include/Makefile
caps/src/Makefile
cmd/Makefile
cmd/gnomefe/Makefile
cmd/gnomefe/gnome-src/Makefile
cmd/gnomefe/gnome-widgets/Makefile
cmd/qtfe/Makefile
cmd/qtfe/icons/Makefile
cmd/stubfe/Makefile
cmd/xfe/Makefile
cmd/xfe/DtWidgets/Makefile
cmd/xfe/Microline3.0/Makefile
cmd/xfe/Microline3.0/XmL/Makefile
cmd/xfe/Microline3.0/examples/Makefile
cmd/xfe/XfeWidgets/Makefile
cmd/xfe/XfeWidgets/Xfe/Makefile
cmd/xfe/XfeWidgets/XfeBm/Makefile
cmd/xfe/XfeWidgets/XfeCaption/Makefile
cmd/xfe/XfeWidgets/XfeComboBox/Makefile
cmd/xfe/XfeWidgets/XfeTest/Makefile
cmd/xfe/XfeWidgets/tests/Makefile
cmd/xfe/XfeWidgets/tests/Xfe/Makefile
cmd/xfe/XfeWidgets/tests/XfeBm/Makefile
cmd/xfe/XfeWidgets/tests/XfeCaption/Makefile
cmd/xfe/XfeWidgets/tests/XfeComboBox/Makefile
cmd/xfe/XfeWidgets/tests/XmL/Makefile
cmd/xfe/icons/Makefile
cmd/xfe/plugins/Makefile
cmd/xfe/plugins/ImAlive/Makefile
cmd/xfe/plugins/javatest/Makefile
cmd/xfe/plugins/nullplugin/Makefile
cmd/xfe/plugins/textplugin/Makefile
cmd/xfe/src/Makefile
config/Makefile
config/autoconf.mk
config/mkdepend/Makefile
config/mkdetect/Makefile
config/ports/Makefile
dbm/Makefile
dbm/include/Makefile
dbm/src/Makefile
dbm/tests/Makefile
include/Makefile
jpeg/Makefile
js/Makefile
js/jsd/Makefile
js/jsd/classes/Makefile
js/jsj/Makefile
js/jsj/classes/Makefile
js/ref/Makefile
js/src/Makefile
js/src/liveconnect/Makefile
js/src/liveconnect/classes/Makefile
js/src/xpcom/Makefile
l10n/Makefile
l10n/us/Makefile
l10n/us/xp/Makefile
lib/Makefile
lib/htmldlgs/Makefile
lib/layout/Makefile
lib/libaddr/Makefile
lib/libi18n/Makefile
lib/libi18n/unicode/Makefile
lib/libi18n/unicode/tbltool/Makefile
lib/libi18n/unicode/ufrmtbl/Makefile
lib/libi18n/unicode/utotbl/Makefile
lib/liblayer/Makefile
lib/liblayer/include/Makefile
lib/liblayer/src/Makefile
lib/libmime/Makefile
lib/libmisc/Makefile
lib/libmocha/Makefile
lib/libmsg/Makefile
lib/libparse/Makefile
lib/libpics/Makefile
lib/libpwcac/Makefile
lib/libstyle/Makefile
lib/mariner/Makefile
lib/mariner/public/Makefile
lib/mariner/src/Makefile
lib/xlate/Makefile
lib/xp/Makefile
modules/Makefile
modules/calendar/Makefile
modules/calendar/src/Makefile
modules/calendar/src/libcal/Makefile
modules/coreincl/Makefile
modules/edtplug/Makefile
modules/edtplug/classes/Makefile
modules/edtplug/classes/netscape/Makefile
modules/edtplug/classes/netscape/plugin/Makefile
modules/edtplug/classes/netscape/plugin/composer/Makefile
modules/edtplug/classes/netscape/plugin/composer/io/Makefile
modules/edtplug/classes/netscape/test/Makefile
modules/edtplug/classes/netscape/test/plugin/Makefile
modules/edtplug/classes/netscape/test/plugin/composer/Makefile
modules/edtplug/include/Makefile
modules/edtplug/src/Makefile
modules/libfont/Makefile
modules/libfont/classes/Makefile
modules/libfont/classes/netscape/Makefile
modules/libfont/classes/netscape/fonts/Makefile
modules/libfont/producers/Makefile
modules/libfont/public/Makefile
modules/libfont/src/Makefile
modules/libhook/Makefile
modules/libhook/public/Makefile
modules/libhook/src/Makefile
modules/libimg/Makefile
modules/libimg/classes/Makefile
modules/libimg/classes/netscape/Makefile
modules/libimg/classes/netscape/libimg/Makefile
modules/libimg/png/Makefile
modules/libimg/public/Makefile
modules/libimg/src/Makefile
modules/libpref/Makefile
modules/libpref/admin/Makefile
modules/libpref/l10n/Makefile
modules/libpref/public/Makefile
modules/libpref/src/Makefile
modules/libreg/Makefile
modules/libreg/include/Makefile
modules/libreg/src/Makefile
modules/libutil/Makefile
modules/libutil/public/Makefile
modules/libutil/src/Makefile
modules/oji/Makefile
modules/oji/public/Makefile
modules/oji/src/Makefile
modules/plugin/Makefile
modules/plugin/nglsrc/Makefile
modules/plugin/public/Makefile
modules/plugin/src/Makefile
modules/plugin/test/Makefile
modules/progress/Makefile
modules/progress/public/Makefile
modules/progress/src/Makefile
modules/rdf/Makefile
modules/rdf/classes/Makefile
modules/rdf/classes/netscape/Makefile
modules/rdf/classes/netscape/rdf/Makefile
modules/rdf/classes/netscape/rdf/core/Makefile
modules/rdf/include/Makefile
modules/rdf/src/Makefile
modules/schedulr/Makefile
modules/schedulr/public/Makefile
modules/schedulr/src/Makefile
modules/security/Makefile
modules/security/freenav/Makefile
modules/softupdt/Makefile
modules/softupdt/classes/Makefile
modules/softupdt/classes/netscape/Makefile
modules/softupdt/classes/netscape/softupdate/Makefile
modules/softupdt/include/Makefile
modules/softupdt/src/Makefile
modules/softupdt/src/nsdiff/Makefile
modules/softupdt/src/nspatch/Makefile
modules/xml/Makefile
modules/xml/js/Makefile
modules/xml/js/test/Makefile
modules/zlib/Makefile
modules/zlib/src/Makefile
nav-java/Makefile
nav-java/stubs/Makefile
nav-java/stubs/include/Makefile
nav-java/stubs/jri/Makefile
nav-java/stubs/src/Makefile
network/Makefile
network/cache/Makefile
network/cache/nu/Makefile
network/cache/nu/include/Makefile
network/cache/nu/public/Makefile
network/cache/nu/src/Makefile
network/client/Makefile
network/cnvts/Makefile
network/cstream/Makefile
network/main/Makefile
network/mimetype/Makefile
network/module/Makefile
network/module/tests/Makefile
network/protocol/Makefile
network/protocol/about/Makefile
network/protocol/callback/Makefile
network/protocol/certld/Makefile
network/protocol/dataurl/Makefile
network/protocol/file/Makefile
network/protocol/ftp/Makefile
network/protocol/gopher/Makefile
network/protocol/http/Makefile
network/protocol/imap4/Makefile
network/protocol/js/Makefile
network/protocol/ldap/Makefile
network/protocol/mailbox/Makefile
network/protocol/marimba/Makefile
network/protocol/nntp/Makefile
network/protocol/pop3/Makefile
network/protocol/remote/Makefile
network/protocol/smtp/Makefile
network/util/Makefile
nsprpub/Makefile
nsprpub/config/Makefile
nsprpub/config/autoconf.mk
nsprpub/lib/Makefile
nsprpub/lib/ds/Makefile
nsprpub/lib/libc/Makefile
nsprpub/lib/libc/include/Makefile
nsprpub/lib/libc/src/Makefile
nsprpub/lib/msgc/Makefile
nsprpub/lib/msgc/include/Makefile
nsprpub/lib/msgc/src/Makefile
nsprpub/lib/msgc/tests/Makefile
nsprpub/lib/prstreams/Makefile
nsprpub/lib/tests/Makefile
nsprpub/pr/Makefile
nsprpub/pr/include/Makefile
nsprpub/pr/include/md/Makefile
nsprpub/pr/include/obsolete/Makefile
nsprpub/pr/include/private/Makefile
nsprpub/pr/src/Makefile
nsprpub/pr/src/io/Makefile
nsprpub/pr/src/linking/Makefile
nsprpub/pr/src/malloc/Makefile
nsprpub/pr/src/md/Makefile
nsprpub/pr/src/md/os2/Makefile
nsprpub/pr/src/md/unix/Makefile
nsprpub/pr/src/md/windows/Makefile
nsprpub/pr/src/memory/Makefile
nsprpub/pr/src/misc/Makefile
nsprpub/pr/src/pthreads/Makefile
nsprpub/pr/src/threads/Makefile
nsprpub/pr/src/threads/combined/Makefile
nsprpub/pr/tests/Makefile
nsprpub/pr/tests/dll/Makefile
nsprpub/pr/tests/w16gui/Makefile
nsprpub/tools/Makefile
privacy/Makefile
privacy/public/Makefile
privacy/src/Makefile
sun-java/Makefile
sun-java/stubs/Makefile
sun-java/stubs/include/Makefile
sun-java/stubs/jri/Makefile
sun-java/stubs/src/Makefile
xpcom/Makefile
xpcom/src/Makefile
xpcom/tests/Makefile
xpcom/tests/dynamic/Makefile
)
