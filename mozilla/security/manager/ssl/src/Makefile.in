#! gmake
# 
# The contents of this file are subject to the Mozilla Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
# 
# The Original Code is the Netscape security libraries.
# 
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are 
# Copyright (C) 1994-2000 Netscape Communications Corporation.  All
# Rights Reserved.
# 
# Contributor(s):
#     Javier Delgadillo <javi@netscape.com>
#     Terry Hayes     <thayes@netscape.com>
# 
# Alternatively, the contents of this file may be used under the
# terms of the GNU General Public License Version 2 or later (the
# "GPL"), in which case the provisions of the GPL are applicable 
# instead of those above.  If you wish to allow use of your 
# version of this file only under the terms of the GPL and not to
# allow others to use your version of this file under the MPL,
# indicate your decision by deleting the provisions above and
# replace them with the notice and other provisions required by
# the GPL.  If you do not delete the provisions above, a recipient
# may use your version of this file under either the MPL or the
# GPL.
# 

DEPTH		= ../../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= pipnss
LIBRARY_NAME	= pipnss
IS_COMPONENT	= 1

EXPORTS = 			\
	$(NULL)

CPPSRCS = 				\
	nsNSSCallbacks.cpp		\
	nsNSSComponent.cpp		\
	nsNSSIOLayer.cpp		\
	nsNSSModule.cpp			\
	nsSSLSocketProvider.cpp		\
	nsSecureBrowserUIImpl.cpp	\
	nsTLSSocketProvider.cpp		\
	nsSDR.cpp			\
	nsPK11TokenDB.cpp		\
	$(NULL)

REQUIRES = nspr security

include $(topsrcdir)/config/rules.mk

INCLUDES	+=	\
		-I$(DIST)/public/security \
		$(NULL)

EXTRA_DSO_LDOPTS = \
		$(MOZ_COMPONENT_LIBS) \
		$(NULL)

EXTRA_LIBS	+= \
        $(DIST)/lib/libssl.$(LIB_SUFFIX) \
        $(DIST)/lib/libnss.$(LIB_SUFFIX) \
        $(DIST)/lib/libssl.$(LIB_SUFFIX) \
        $(DIST)/lib/libpkcs7.$(LIB_SUFFIX) \
        $(DIST)/lib/libcerthi.$(LIB_SUFFIX) \
        $(DIST)/lib/libpk11wrap.$(LIB_SUFFIX) \
        $(DIST)/lib/libcryptohi.$(LIB_SUFFIX) \
        $(DIST)/lib/libcerthi.$(LIB_SUFFIX) \
        $(DIST)/lib/libpk11wrap.$(LIB_SUFFIX) \
        $(DIST)/lib/libsoftoken.$(LIB_SUFFIX) \
        $(DIST)/lib/libcertdb.$(LIB_SUFFIX) \
        $(DIST)/lib/libswfci.$(LIB_SUFFIX) \
        $(DIST)/lib/libfreebl.$(LIB_SUFFIX) \
        $(DIST)/lib/libsecutil.$(LIB_SUFFIX) \
        $(DIST)/lib/libdbm.$(LIB_SUFFIX) \
        $(NULL)

OUR_CC = $(shell which $(CCC))
libs::
	echo We used c++ at $(OUR_CC)
