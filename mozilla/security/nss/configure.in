dnl -*- Mode: Autoconf; tab-width: 4; indent-tabs-mode: nil; -*-
dnl The contents of this file are subject to the Mozilla Public
dnl License Version 1.1 (the "License"); you may not use this file
dnl except in compliance with the License. You may obtain a copy of
dnl the License at http://www.mozilla.org/MPL/
dnl
dnl Software distributed under the License is distributed on an "AS
dnl IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
dnl implied. See the License for the specific language governing
dnl rights and limitations under the License.
dnl
dnl The Original Code is the configure.in script for NSS.
dnl
dnl The Initial Developer of the Original Code is Netscape
dnl Communications. Portions created by Netscape Communications are
dnl Copyright (C) 2000 Netscape Communications. All Rights Reserved.
dnl
dnl Contributor(s):
dnl  Brian Ryner <bryner@netscape.com>
dnl
dnl Process this file with autoconf to produce a configure script.
dnl
AC_PREREQ(2.12)
AC_INIT(../coreconf/rules.mk)

AC_CONFIG_AUX_DIR(${srcdir}/build/autoconf)
AC_CANONICAL_SYSTEM

CORECONF_SOURCE='$(topsrcdir)/../coreconf'

dnl Set this define to make fixes w/o breaking anything else.
AC_DEFINE(USE_AUTOCONF)

dnl ========================================================
dnl = Defaults
dnl ========================================================
USE_PTHREADS=
ENABLE_CMD=1
MOZILLA_CLIENT=
_OPTIMIZE_FLAGS=-O
_DEBUG_FLAGS=-g
MOZ_DEBUG=1
MOZ_OPTIMIZE=

dnl ========================================================
dnl =
dnl = Dont change the following lines.  Doing so breaks:
dnl =
dnl = CFLAGS="-foo" ./configure
dnl =
dnl ========================================================
CFLAGS="${CFLAGS=}"
LDFLAGS="${LDFLAGS=}"
HOST_CFLAGS="${HOST_CFLAGS=}"
HOST_LDFLAGS="${HOST_LDFLAGS=}"

dnl ========================================================
dnl =
dnl = Check options that may affect the compiler
dnl =
dnl ========================================================
dist_prefix='${MOD_DEPTH}/dist'
dist_bindir='${dist_prefix}/bin'
dist_includedir='${dist_prefix}/include'
dist_libdir='${dist_prefix}/lib'

AC_ARG_WITH(dist-prefix,
    [  --with-dist-prefix=DIST_PREFIX
                          place build files in DIST_PREFIX [dist]],
    dist_prefix=$withval)

AC_ARG_WITH(dist-bindir,
    [  --with-dist-bindir=DIR  build execuatables in DIR [DIST_PREFIX/bin]],
    dist_bindir=$withval)

AC_ARG_WITH(dist-includedir,
    [  --with-dist-includedir=DIR
                          build include files in DIR [DIST_PREFIX/include]],
    dist_includedir=$withval)

AC_ARG_WITH(dist-libdir,
    [  --with-dist-libdir=DIR  build library files in DIR [DIST_PREFIX/lib]],
    dist_libdir=$withval)

AC_SUBST(dist_prefix)
AC_SUBST(dist_bindir)
AC_SUBST(dist_includedir)
AC_SUBST(dist_libdir)

AC_ARG_WITH(mozilla,
    [  --with-mozilla          Compile for Mozilla tree],
    [  if test "$withval" = "yes"; then
           MOZILLA_CLIENT=1
           else
               MOZILLA_CLIENT=
           fi])

AC_ARG_ENABLE(optimize,
    [  --enable-optimize       Enable code optimizations],
    MOZ_OPTIMIZE=1)

AC_ARG_ENABLE(debug,
    [  --disable-debug         Do not compile in debugging symbols],
    [	if test "$enableval" = "no"; then
    	    MOZ_DEBUG=
	    fi])

dnl AC_ARG_ENABLE(shared,
dnl    [  --disable-shared        Do not compile into shared libraries])

dnl AC_ARG_ENABLE(target,
dnl    [  --enable-target=\$t      Turn on features for target \$t when build has multiple targets],
dnl    MOZ_TARGET=`echo $enableval | tr a-z A-Z`,
dnl    MOZ_TARGET=)

AC_ARG_ENABLE(cmd,
    [  --disable-cmd           Don't build command-line tools],
    [  if test "$enableval" = "no"; then
           ENABLE_CMD=
           fi])

AC_PATH_PROG(WHOAMI, whoami, :)
if test -n "$MOZ_DEBUG"; then
    AC_DEFINE(DEBUG)
    AC_DEFINE_UNQUOTED(DEBUG_`$WHOAMI`)
    DEFINES="$DEFINES -UNDEBUG"
else
    AC_DEFINE(NDEBUG)
    DEFINES="$DEFINES -UDEBUG"    
fi

dnl ========================================================
dnl Checks for compilers.
dnl ========================================================

if test "$target" != "$host"; then
    echo "cross compiling from $host to $target"
    cross_compiling=yes
        
    _SAVE_CC="$CC"
    _SAVE_CFLAGS="$CFLAGS"   
    _SAVE_LDFLAGS="$LDFLAGS"
    
    AC_MSG_CHECKING([for $host compiler])
    if test -z "$HOST_CC"; then
            AC_CHECK_PROGS(HOST_CC, gcc cc /usr/ucb/cc, "")
            if test -z "$HOST_CC"; then
                    AC_MSG_ERROR([no acceptable cc found in \$PATH])
            fi
    fi
    AC_MSG_RESULT([$HOST_CC])
    if test -z "$HOST_CFLAGS"; then
            HOST_CFLAGS="$CFLAGS"
    fi
    if test -z "$HOST_LDFLAGS"; then
            HOST_LDFLAGS="$LDFLAGS"
    fi
                
    CC="$HOST_CC"
    CFLAGS="$HOST_CFLAGS"
    LDFLAGS="$HOST_LDFLAGS"
    
    AC_MSG_CHECKING([whether the $host compiler ($HOST_CC $HOST_CFLAGS $HOST_LDFLAGS) works])
    AC_TRY_COMPILE([], [return(0);],
        [ac_cv_prog_host_cc_works=1 AC_MSG_RESULT([yes])],
        AC_MSG_ERROR([installation or configuration problem: $host compiler $HOST_CC cannot create executables.]) )

    CC=$_SAVE_CC
    CFLAGS=$_SAVE_CFLAGS
    LDFLAGS=$_SAVE_LDFLAGS

    if test -z "$CC"; then
            AC_CHECK_PROGS(CC, "${target_alias}-gcc" "${target}-gcc", :)
    fi
    unset ac_cv_prog_CC
    AC_PROG_CC   
    if test -z "$CXX"; then
            AC_CHECK_PROGS(CXX, "${target_alias}-g++" "${target}-g++", :)
    fi
    unset ac_cv_prog_CXX
    AC_PROG_CXX
    if test -z "$RANLIB"; then
            AC_CHECK_PROGS(RANLIB, "${target_alias}-ranlib" "${target}-ranlib", :)
    fi
    if test -z "$AR"; then
            AC_CHECK_PROGS(AR, "${target_alias}-ar" "${target}-ar", :)
    fi
    if test -z "$AS"; then
            AC_CHECK_PROGS(AS, "${target_alias}-as" "${target}-as", :)
    fi
    if test -z "$LD"; then
            AC_CHECK_PROGS(LD, "${target_alias}-ld" "${target}-ld", :)
    fi
dnl    if test -z "$STRIP"; then
dnl            AC_CHECK_PROGS(STRIP, "${target_alias}-strip" "${target}-strip", :)
dnl    fi
dnl    if test -z "$DLLTOOL"; then
dnl            AC_CHECK_PROGS(DLLTOOL, "${target_alias}-dlltool" "${target}-dlltool", :)
dnl    fi
dnl    if test -z "$WINDRES"; then
dnl            AC_CHECK_PROGS(WINDRES, "${target_alias}-windres" "${target}-windres", :)
dnl    fi

else
    AC_PROG_CC
    AC_PROG_CXX
    AC_PROG_RANLIB
    AC_PATH_PROGS(AS, as, $CC)
    AC_PATH_PROGS(AR, ar, :)
    AC_PATH_PROGS(LD, ld, :)
dnl    AC_PATH_PROGS(STRIP, strip, :)
dnl    AC_PATH_PROGS(DLLTOOL, dlltool, :)
dnl    AC_PATH_PROGS(WINDRES, windres, :)
    if test -z "$HOST_CC"; then
            HOST_CC="$CC"
    fi
    if test -z "$HOST_CFLAGS"; then
            HOST_CFLAGS="$CFLAGS"
    fi
fi          

GNU_CC=
GNU_CXX=

if test "$GCC" = "yes"; then
    GNU_CC=1   
fi
if test "`echo | $AS -V 2>&1 | grep -c GNU`" != "0"; then
    GNU_AS=1
fi
rm -f a.out

if test "$cross_compiling"  = "yes"; then
    CROSS_COMPILE=1
else
    CROSS_COMPILE=
fi

dnl ========================================================
dnl Checks for programs.
dnl ========================================================

AC_PROG_AWK
dnl Be sure the make we use is GNU make.
AC_PATH_PROGS(MAKE, gmake make, :)
_make_try=`$MAKE --version 2>/dev/null`
if test ! "$_make_try"
then
        echo
        echo "*** $MAKE is not GNU Make.  You will not be able to build NSS without GNU Make."
        echo
        exit 1
fi
dnl Now warn about version 3.77 if we find it.
_make_vers=`$MAKE --version | grep Make | $AWK '{ print \$4 }' | sed 's/,//'`
if test "$_make_vers" = "3.77"
then
        echo
        echo "*** Found GNU Make 3.77.  This version is known to have problems with the"
        echo "*** wildcard function in certain circumstances.  You may experience infinite"
        echo "*** looping while building NSS with 3.77.  If this happens, you can"
        echo "*** either downgrade to 3.76.1 or try configuring with --disable-md."
        echo
fi

AC_PROG_MAKE_SET
AC_PATH_PROGS(PERL, perl5 perl, :)
if test -z "$PERL" || test "$PERL" = ":"; then
    AC_MSG_ERROR([perl not found in \$PATH])
fi

AC_PATH_PROG(XARGS, xargs)

dnl ========================================================
dnl Default platform specific options
dnl ========================================================
OBJ_SUFFIX=o
LIB_SUFFIX=a
DLL_SUFFIX=so
MKSHLIB='$(CC) -shared -Wl,-soname -Wl,$(notdir $@)'
AR_FLAGS='cr $@'
AS='$(CC)'

OS_TARGET=`uname -s`
OS_ARCH=`uname -s | sed -e 's|/|_|g'`
OS_RELEASE=`uname -r | awk -F\. '{ print $1 "." $2 }'`
OS_TEST=`uname -m`

if test "${OS_ARCH}" = "IRIX64"; then
    OS_ARCH=IRIX
fi
   
if test "${OS_TARGET}" = "IRIX64"; then
    OS_TARGET=IRIX
fi

dnl ========================================================
dnl Override of system specific host options
dnl ========================================================

HOST_CFLAGS="$HOST_CFLAGS -DXP_UNIX"
HOST_CXXFLAGS="$HOST_CXXFLAGS -DXP_UNIX"

dnl ========================================================
dnl Override of system specific target options
dnl ========================================================
case "$target" in

*-linux*)
    USE_PTHREADS=1
    AC_DEFINE(XP_UNIX)
    AC_DEFINE(LINUX)
    AC_DEFINE(linux)
    AC_DEFINE(_POSIX_SOURCE)
    AC_DEFINE(_BSD_SOURCE)
    AC_DEFINE(HAVE_STRERROR)
    AC_DEFINE(LINUX1_2)
    CFLAGS="$CFLAGS -ansi -Wall -pipe"
    CXXFLAGS="$CXXFLAGS -ansi -Wall -pipe -fno-rtti -fno-exceptions"
    DSO_CFLAGS=-fPIC
    DSO_LDOPTS=-shared
    _OPTIMIZE_FLAGS=-O2

    if test -n "$USE_PTHREADS"; then
        AC_DEFINE(_REENTRANT)
        OS_LIBS="-lpthread $OS_LIBS"                
    fi

    OS_LIBS="$OS_LIBS -ldl -lc"

    case "${target_cpu}" in
    alpha)
        AC_DEFINE(_ALPHA_)
        AC_DEFINE(_XOPEN_SOURCE)
        CFLAGS="$CFLAGS -mieee"
        CXXFLAGS="$CXXFLAGS -mieee"
        CPU_ARCH=alpha
        ;;
    i?86)
        AC_DEFINE(i386)
        AC_DEFINE(_XOPEN_SOURCE)
        CPU_ARCH=x86
        ;;
    ppc)
        AC_DEFINE(MACLINUX)
        CPU_ARCH=ppc
        ;;
    *)
        ;;
    esac

    case "$OS_RELEASE" in
    2.0)
        AC_DEFINE(LINUX2_0)
        ;;
    2.1)
        AC_DEFINE(LINUX2_1)
        ;;
    2.2)
        AC_DEFINE(LINUX2_1)
        ;;
    2.4)
        AC_DEFINE(LINUX2_1)
        ;;
    esac
    ;;

*-solaris*)
    USE_PTHREADS=
    AC_DEFINE(XP_UNIX)
    AC_DEFINE(SVR4)
    AC_DEFINE(SYSV)
    AC_DEFINE(__svr4)
    AC_DEFINE(__svr4__)
    AC_DEFINE(SOLARIS)
    AC_DEFINE(_REENTRANT)
    DSO_LDOPTS=-G
    if test -n "$GNU_CC"; then
      DSO_CFLAGS=-fPIC
      CXXFLAGS="$CXXFLAGS -fno-rtti -fno-exceptions"
      ASFLAGS="$ASFLAGS -x assembler-with-cpp"
    else
      DSO_CFLAGS=-KPIC
    fi
    AS='$(CC)'
    if test -z "$GNU_AS"; then
      ASFLAGS="$ASFLAGS -Wa,-P"
    fi
    if test -n "$USE_64" && test -z "$GNU_CC"; then
      CC="$CC -xarch=v9"
      CXX="$CXX -xarch=v9"
    fi
    case "${target_cpu}" in
    sparc)
      CPU_ARCH=sparc
      ;;
    esac

    case "${target_os}" in
    solaris2.5*)
      AC_DEFINE(SOLARIS2_5)
      ;;
    solaris2.6*)
      AC_DEFINE(_SVID_GETTOD)
      AC_DEFINE(SOLARIS2_6)
      ;;
    solaris2.7*)
      AC_DEFINE(_SVID_GETTOD)
      AC_DEFINE(SOLARIS2_7)
      ;;
    solaris2.8*)
      AC_DEFINE(_SVID_GETTOD)
      AC_DEFINE(SOLARIS2_8)
      ;;
    *)
      ;;
    esac

    CFLAGS="$CFLAGS -I/usr/dt/include -I/usr/openwin/include"
    OS_LIBS="$OS_LIBS -lthread -lnsl -lsocket -lposix4 -ldl -lc"
    ;;

esac

dnl ========================================================
dnl Check for system libraries
dnl ========================================================

dnl ========================================================
dnl Check for system header files.
dnl ========================================================

dnl ========================================================
dnl Check for typedefs and structs
dnl ========================================================

dnl ========================================================
dnl Checks for library functions.
dnl ========================================================

dnl ========================================================
dnl Check options
dnl ========================================================
dnl ========================================================
dnl =
dnl = If NSPR was not detected in the system, 
dnl = use the one in the source tree (mozilla/nsprpub)
dnl =
dnl ========================================================

AM_PATH_NSPR(4.0.0, [MOZ_NATIVE_NSPR=1], [MOZ_NATIVE_NSPR=])

if test -z "$MOZ_NATIVE_NSPR"; then
    AC_MSG_WARN(nspr-config not found. building local copy of NSPR)
    NSPR_CFLAGS='`$(MOD_DEPTH)/../../nsprpub/config/nspr-config --prefix=$(DIST) --cflags`'
    case "$target" in
    *-*-os2_vacpp)
        NSPR_LIBS='$(DIST)/lib/nspr'$NSPR_VERSION'.lib $(DIST)/lib/plc'$NSPR_VERSION'.lib $(DIST)/lib/plds'$NSPR_VERSION'.lib '$_PTHREAD_LDFLAGS''
        ;;
    *)
        NSPR_LIBS='`$(MOD_DEPTH)/../../nsprpub/config/nspr-config --prefix=$(DIST) --libs`'
        ;;
    esac
fi




_cpp_md_flag=
AC_ARG_ENABLE(md,
[  --disable-md            Do not use compiler-based dependencies ],[],
  [dnl Default is to turn on -MD if using GNU-compatible compilers
   dnl XXX make this check GNU_CXX when that test is hooked up
   if test "$GNU_CC"; then
     _cpp_md_flag=1
   fi])
if test "$_cpp_md_flag"; then
  COMPILER_DEPEND=1
  MDDEPDIR='.deps'
  _DEPEND_CFLAGS='$(filter-out %/.pp,-Wp,-MD,$(MDDEPDIR)/$(*F).pp)' 
fi   

if test -n "$MOZ_OPTIMIZE"; then
    CFLAGS="$CFLAGS $_OPTIMIZE_FLAGS"
fi

if test -n "$MOZ_DEBUG"; then
    CFLAGS="$CFLAGS $_DEBUG_FLAGS"
fi

CFLAGS=`echo \
    $_DEPEND_CFLAGS \
    $CFLAGS`

dnl ========================================================
dnl Substitution of found variables.
dnl ========================================================

dnl Build options
AC_SUBST(MOZILLA_CLIENT)
AC_SUBST(ENABLE_CMD)
AC_SUBST(CORECONF_SOURCE)

dnl Program locations
AC_SUBST(HOST_CC)
AC_SUBST(AS)
AC_SUBST(AR)
AC_SUBST(LD)

dnl Compiler characteristics/flags
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(HOST_CFLAGS)
AC_SUBST(COMPILER_DEPEND)
AC_SUBST(MDDEPDIR)
AC_SUBST(ASFLAGS)
AC_SUBST(DEFINES)
AC_SUBST(DEFS)
dnl AC_SUBST(GNU_CC)
dnl AC_SUBST(GNU_CXX)

dnl Linker characteristics/flags
AC_SUBST(LDFLAGS)
AC_SUBST(MKSHLIB)
AC_SUBST(DSO_CFLAGS)
AC_SUBST(DSO_LDOPTS)
AC_SUBST(AR_FLAGS)
AC_SUBST(OS_LIBS)
dnl AC_SUBST(DLLTOOL)
dnl AC_SUBST(WINDRES)

dnl Implementation options
AC_SUBST(USE_PTHREADS)

dnl System characteristics
AC_SUBST(OS_TARGET)
AC_SUBST(OS_ARCH)
AC_SUBST(OS_RELEASE)
AC_SUBST(OS_TEST)
AC_SUBST(CPU_ARCH)
AC_SUBST(LIB_SUFFIX)
AC_SUBST(DLL_SUFFIX)
dnl AC_SUBST(OBJ_SUFFIX)

dnl ========================================================
dnl Generate output files.
dnl ========================================================
. ${srcdir}/secmakefiles.sh

echo $MAKEFILES | $PERL $srcdir/build/autoconf/acoutput-fast.pl > conftest.sh
. ./conftest.sh
rm conftest.sh

dnl ========================================================
dnl Remove :template files from MAKEFILES
dnl ========================================================
echo $MAKEFILES | $PERL -e 'while (<STDIN>) { chomp; foreach $f (split(/\s+/)) { $f =~ s/:.*//; print "$f "; } } print "\n";' > unallmakefiles

AC_OUTPUT($MAKEFILES)
