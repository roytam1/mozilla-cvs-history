# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is the Netscape security libraries.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1994-2000
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Dr Vipul Gupta <vipul.gupta@sun.com> and
#   Douglas Stebila <douglas@stebila.ca>, Sun Microsystems
#   Laboratories
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

# NOTE: any ifdefs in this file must be defined on the gmake command line
# (if anywhere).  They cannot come from Makefile or config.mk 

CORE_DEPTH = ../../..

MODULE = nss

ifndef FREEBL_RECURSIVE_BUILD
  LIBRARY_NAME = freebl
else
  ifdef USE_PURE_32
    CORE_DEPTH = ../../../..
    LIBRARY_NAME = freebl_pure32
  else
    LIBRARY_NAME = freebl_hybrid
  endif
endif

# same version as rest of freebl
LIBRARY_VERSION = _3

DEFINES += -DSHLIB_SUFFIX=\"$(DLL_SUFFIX)\" -DSHLIB_PREFIX=\"$(DLL_PREFIX)\"

REQUIRES = 

EXPORTS = \
	blapit.h \
	shsign.h \
	ecl-exp.h \
	$(NULL)

PRIVATE_EXPORTS = \
	alghmac.h \
	blapi.h \
	secmpi.h \
	secrng.h \
	ec.h \
	ecl.h \
	ecl-curve.h \
	$(NULL)

MPI_HDRS = mpi-config.h mpi.h mpi-priv.h mplogic.h mpprime.h logtab.h mp_gf2m.h
MPI_SRCS = mpprime.c mpmontg.c mplogic.c mpi.c mp_gf2m.c


TFM_HDRS = tfm.h tfm_mpi.h
TFM_SRCS = fp_set.c fp_rshd.c fp_lshd.c fp_div_2d.c fp_mod_2d.c fp_mul_2d.c \
  fp_2expt.c fp_mul_2.c fp_div_2.c fp_cnt_lsb.c fp_add.c fp_sub.c fp_mul.c \
  fp_sqr.c fp_div.c fp_mod.c s_fp_add.c s_fp_sub.c fp_cmp_d.c fp_add_d.c \
  fp_sub_d.c fp_mul_d.c fp_div_d.c fp_mod_d.c fp_addmod.c fp_submod.c \
  fp_mulmod.c fp_sqrmod.c fp_invmod.c fp_gcd.c fp_lcm.c \
  fp_prime_miller_rabin.c fp_isprime.c fp_prime_random_ex.c fp_mul_comba.c \
  fp_sqr_comba.c fp_montgomery_setup.c fp_montgomery_calc_normalization.c \
  fp_montgomery_reduce.c fp_exptmod.c fp_cmp.c fp_cmp_mag.c \
  fp_unsigned_bin_size.c fp_read_unsigned_bin.c fp_to_unsigned_bin.c \
  fp_signed_bin_size.c fp_read_signed_bin.c fp_to_signed_bin.c \
  fp_read_radix.c fp_toradix.c fp_radix_size.c fp_count_bits.c \
  fp_reverse.c fp_s_rmap.c fp_ident.c fp_util.c




ECL_HDRS = ecl-exp.h ecl.h ec2.h ecp.h ecl-priv.h
ifdef NSS_ENABLE_ECC
ECL_SRCS = ecl.c ecl_curve.c ecl_mult.c ecl_gf.c \
	ec2_aff.c ec2_mont.c ec2_proj.c \
	ec2_163.c ec2_193.c ec2_233.c \
	ecp_aff.c ecp_jac.c ecp_mont.c \
	ecp_192.c ecp_224.c \
	ec_naf.c ecp_jm.c
else
ECL_SRCS = $(NULL)
endif

CSRCS = \
	ldvector.c \
	prng_fips1861.c \
	sysrand.c \
	sha_fast.c \
	md2.c \
	md5.c \
	sha512.c \
	alghmac.c \
	rawhash.c \
	alg2268.c \
	arcfour.c \
	arcfive.c \
	desblapi.c \
	des.c \
	rijndael.c \
	aeskeywrap.c \
	dh.c \
	ec.c \
	pqg.c \
	dsa.c \
	rsa.c \
        rsa_keygen.c \
	shvfy.c \
	tlsprfalg.c \
	$(MPI_SRCS) \
	$(ECL_SRCS) \
	$(NULL)

ALL_CSRCS := $(CSRCS) $(TFM_SRCS)

ALL_HDRS =  \
	alghmac.h \
	blapi.h \
	blapit.h \
	des.h \
	ec.h \
	loader.h \
	rijndael.h \
	secmpi.h \
	sha.h \
	sha_fast.h \
	shsign.h \
	vis_proto.h \
	$(TFM_HDRS) \
	$(NULL)


ifdef NSS_ENABLE_ECC
DEFINES += -DNSS_ENABLE_ECC
endif

ifdef AES_GEN_TBL
DEFINES += -DRIJNDAEL_GENERATE_TABLES
else 
ifdef AES_GEN_TBL_M
DEFINES += -DRIJNDAEL_GENERATE_TABLES_MACRO
else
ifdef AES_GEN_VAL
DEFINES += -DRIJNDAEL_GENERATE_VALUES
else
ifdef AES_GEN_VAL_M
DEFINES += -DRIJNDAEL_GENERATE_VALUES_MACRO
else
DEFINES += -DRIJNDAEL_INCLUDE_TABLES
endif
endif
endif
endif
