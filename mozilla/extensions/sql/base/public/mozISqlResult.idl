/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2001
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Jan Varga <varga@utcru.sk>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface mozISqlConnection;
interface mozISqlResultEnumerator;
interface mozISqlInputStream;

/**
 * @status UNDER_DEVELOPMENT
 */

[scriptable, uuid(08c220b0-7140-456a-89e9-c94609a7392d)]
interface mozISqlResult : nsISupports
{

  readonly attribute mozISqlConnection connection;

  readonly attribute AString query;

  readonly attribute AString tableName;

  readonly attribute long rowCount;

  readonly attribute long columnCount;

  AString getColumnName(in long aColumnIndex);

  long getColumnIndex(in AString aColumnName);

  const long TYPE_STRING        = 1;
  const long TYPE_INT           = 2;
  const long TYPE_FLOAT         = 3;
  const long TYPE_DECIMAL       = 4;
  const long TYPE_DATE	        = 5;
  const long TYPE_TIME	        = 6;
  const long TYPE_DATETIME      = 7;
  const long TYPE_BOOL	        = 8;
  
  long getColumnType(in long aColumnIndex);

  AString getColumnTypeAsString(in long aColumnIndex);

  long getColumnDisplaySize(in long aColumnIndex);

  mozISqlResultEnumerator enumerate();

  mozISqlInputStream open();

  void reload();

};
