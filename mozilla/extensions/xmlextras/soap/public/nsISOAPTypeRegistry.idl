/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 2001 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

interface nsIDOMElement;
interface nsIDOMNode;
interface nsISOAPEncoder;
interface nsISOAPDecoder;
interface nsISOAPMessage;
interface nsISOAPParameter;
interface nsISOAPAttachments;

/**
 * This interface keeps track of all the known types and how
 *   each should be encoded (by type) or decoded (by 
 *   schema type)
 */

[scriptable, uuid(9ae49600-1dd1-11b2-877f-e62f620c5e92)]
interface nsISOAPTypeRegistry : nsISupports {
/**
   * Add a type to this registry so it can be serialized / deserialized
   *
   * @param aNativeType The native type to be added.
   *
   * @param aEncoder The encoder to be used.
   *
   * @return True if type was added, false if type could not be added
   */
  void addNativeType(in AString aEncoding, in AString aNativeType, in nsISOAPEncoder aEncoder);

/**
   * Add a type to this registry so it can be serialized / deserialized
   *
   * @param aSchemaNamespaceURI The schema namespace URI to be added.
   *
   * @param aSchemaType The schema type to be added.
   *
   * @param aDecoder The decoder to be used.
   *
   * @return True if type was added, false if type could not be added
   */
  void addSchemaType(in AString aEncoding, 
   in AString aSchemaNamespaceURI, in AString aSchemaType, 
   in nsISOAPDecoder aDecoder);

  nsISOAPEncoder queryByNativeType(in AString aEncoding, in AString aNativeType);
  nsISOAPDecoder queryBySchemaType(in AString aEncoding, in AString aSchemaNamespaceURI, in AString aSchemaType);

  /**
   * Encode the source object into the specified
   * parent in the output.  Any parameter may be null
   * as long as the encoder is OK with it.
   *
   * @param aMessage The message receiving the encoded content
   *
   * @param aSource The parameter object to be encoded
   *
   * @param aEncodingStyleURI The encoding style
   *
   * @param aNativeType The type ID of the source parameter.
   *
   * @param aDOMScope The element scope, if any, where the result 
   *   will live, so that namespace prefixes, and other context
   *   such as xml:base, xml:lang, etc. can be assumed instead of
   *   having to locally declare everything.  If this is null, then
   *   everything must be locally declared.
   */
  void encode(in nsISOAPTypeRegistry aTypes, in nsISOAPParameter aSource, 
      in AString aEncodingStyleURI, in AString aNativeType,
      in nsIDOMNode aDestination, in nsISOAPAttachments aAttachments);

  /**
   * Decode the source node into the specified
   * object in the output.  Any argument may be null as
   * long as the decoder is OK with it.
   *
   * @param aMessage The message supplying the decoded content
   *
   * @param aSource The DOM node to be decoded
   *
   * @param aEncodingStyleURI The encoding style
   *
   * @param aSchemaType The schema ID of the source DOM node.
   *
   * @return The decoded parameter, which is null if the
   *   operation failed.  In case of failure, 
   *   a more complete status is recorded in the message.
   */
  nsISOAPParameter decode(in nsISOAPTypeRegistry aTypes, in nsIDOMNode aSource, 
      in AString aEncodingStyleURI, in AString aSchemaNamespaceURI, in AString aSchemaType,
      in nsISOAPAttachments aAttachments);
  };

%{ C++
#define NS_SOAPTYPEREGISTRY_CID                            \
{ /* 5ad0eace-1dd2-11b2-a260-ff42edcaedb3 */        \
  0x5ad0eace, 0x1dd2, 0x11b2,                       \
 {0xa2, 0x60, 0xff, 0x42, 0xed, 0xca, 0xed, 0xb3} }
#define NS_SOAPTYPEREGISTRY_CONTRACTID \
"@mozilla.org/xmlextras/soap/typeregistry;1"
#define NS_SOAPDEFAULTTYPEREGISTRY_CID                            \
{ /* 06fb035c-1dd2-11b2-bc30-f6d8e314d6b9 */        \
  0x06fb035c, 0x1dd2, 0x11b2,                       \
 {0xbc, 0x30, 0xf6, 0xd8, 0xe3, 0x14, 0xd6, 0xb9} }
#define NS_SOAPDEFAULTTYPEREGISTRY_CONTRACTID \
"@mozilla.org/xmlextras/soap/defaulttyperegistry;1"
%}
