/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Don Cone <dcone@netscape.com>
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

[scriptable, uuid(1B4CD090-0531-11d6-A876-00105A183419)]
interface nsIDebugObject : nsISupports
{

  /**
   * creates a directory.. only locally
   * @param 
   * @param 
   */
  void CreateDirectory(in wstring aDirectoryPath, in unsigned long aFlags);


  /**
   * Dumps the content of a window
   * @param 
   * @param 
   */
  void DumpContent(in nsISupports aUrlToDump,in wstring aFilePath,in wstring aFileName, in unsigned long aFlags);

  /**
   * Compares the contents of frame model files
   * @param 
   * @param 
   */
  void CompareFrameModels(in wstring aBasePath,in wstring aVerPath,in wstring aBaseFile,in wstring aVerFile, in unsigned long aFlags);


  /**
   *  Printing Runtime Error Checking
   */
  const short PRT_RUNTIME_NONE              = 0;
  const short PRT_RUNTIME_CHECKFORPRINTERS  = 1;
  const short PRT_RUNTIME_CREATEPRTSESSION  = 2;
  const short PRT_RUNTIME_INITPRTOBJ        = 3;
  const short PRT_RUNTIME_CREATESPECFACTORY = 4;
  const short PRT_RUNTIME_NOPROMPTSERVICE   = 5;
  const short PRT_RUNTIME_NODEVSPEC         = 6;
  const short PRT_RUNTIME_NEXTPAGE          = 7;
  const short PRT_RUNTIME_REFLOWDOCLIST     = 8;
  const short PRT_RUNTIME_PREPAREDOC        = 9;
  const short PRT_RUNTIME_BEGINDOC          = 10;

  attribute boolean doRuntimeTests;     // indicates whether the runtime test will be run
  attribute short   testId;             // id of test to run
  attribute boolean printAsIs;          // print asis when printing to a file
  attribute wstring printFileName;      // name of output file

};


%{ C++

%}
