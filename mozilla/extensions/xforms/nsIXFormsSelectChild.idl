/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla XForms support.
 *
 * The Initial Developer of the Original Code is
 * IBM Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Brian Ryner <bryner@brianryner.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMNode;
interface nsIDOMElement;
interface nsIArray;
%{C++
class nsStringArray;
%}

[ref] native constStringArray(const nsStringArray);

/**
 * nsIXFormsSelectChild is implemented by elements that can be children
 * of an XForms select element (choices, item, itemset).
 */

[uuid(21e37ef5-ce3e-4ff1-b7b2-fb34c4e2c8be)]
interface nsIXFormsSelectChild : nsISupports
{
  /**
   * The DOM elements returned by this attribute are inserted into the select
   * element's anonymous content tree.
   */
  readonly attribute nsIArray anonymousNodes;

  /**
   * These two methods allow the select to synchronize selection with the
   * instance data.
   *
   * selectItemsByValue() handles children that have a value element child.
   * If the value element text for this child is contained in the |values|
   * array, then the item should select itself.
   *
   * selectItemsByContent() handles children that have a copy element child.
   * If |node| points to the same instance data node as the item, then the
   * item should select itself.
   */
  void selectItemsByValue(in constStringArray values);
  void selectItemsByContent(in nsIDOMNode node);

  /**
   * Instructs the item to serialize its selected elements.
   * For children that have a value child, they should append the value of
   * any selected items to the provided string buffer.  For children
   * that have a copy child, they should copy the instance data element into
   * |container|.
   */
  void writeSelectedItems(in nsIDOMNode container, out AString stringBuffer);

  /**
   * Set the context node, position, and size to be used for XPath evaluation.
   * This is used by itemset to create a context for its anonymous item
   * elements.
   */
  void setContext(in nsIDOMElement node, in long position, in long size);
};
