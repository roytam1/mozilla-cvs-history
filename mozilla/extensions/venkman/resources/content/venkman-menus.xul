<?xml version="1.0"?>

<!--
   -
   - The contents of this file are subject to the Mozilla Public License
   - Version 1.1 (the "License"); you may not use this file except in
   - compliance with the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/ 
   - 
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License. 
   -
   - The Original Code is The JavaScript Debugger
   - 
   - The Initial Developer of the Original Code is
   - Netscape Communications Corporation
   - Portions created by Netscape are
   - Copyright (C) 1998 Netscape Communications Corporation.
   - All Rights Reserved.
   -
   - Alternatively, the contents of this file may be used under the
   - terms of the GNU Public License (the "GPL"), in which case the
   - provisions of the GPL are applicable instead of those above.
   - If you wish to allow use of your version of this file only
   - under the terms of the GPL and not to allow others to use your
   - version of this file under the MPL, indicate your decision by
   - deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL.  If you do not delete
   - the provisions above, a recipient may use your version of this
   - file under either the MPL or the GPL.
   -
   - Contributor(s):
   -  Robert Ginda, <rginda@netscape.com>, original author
   -
   -->

<!DOCTYPE window SYSTEM "chrome://venkman/locale/venkman.dtd" >

<?xul-overlay href="chrome://communicator/content/tasksOverlay.xul"?>

<overlay id="venkman-menu-overlay"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <overlaytarget id="menu-overlay-target">

    <!-- Commands -->
    <commandset id="venkmanCommands">
      <!-- File commands -->
      <command id="cmd_close" oncommand="window.close();"/>
      <command id="cmd_quit"/>

      <!-- Edit Menu -->
      <commandset id="selectEditMenuItems"/>
      <commandset id="globalEditMenuItems"/>
      <commandset id="undoEditMenuItems"/>
      <commandset id="clipboardEditMenuItems"/>
      <command id="cmd_undo"/>
      <command id="cmd_redo"/>
      <command id="cmd_cut"/>
      <command id="cmd_copy"/>
      <command id="cmd_paste"/>
      <command id="cmd_delete"/>
      <command id="cmd_selectAll"/>

      <!-- Debug commands -->
      <command id="cmd_reload_ui"
        oncommand="if (DEBUG) window.location.href = window.location.href;"/>
      <command id="cmd_focus" oncommand="console._slInputElement.focus();"/>
      <command id="cmd_tmode_cycle" oncommand="cycleThrowMode();"/>
      <command id="cmd_tmode_ignore" oncommand="setThrowMode(TMODE_IGNORE);"/>
      <command id="cmd_tmode_trace" oncommand="setThrowMode(TMODE_TRACE);"/>
      <command id="cmd_tmode_break" oncommand="setThrowMode(TMODE_BREAK);"/>
      <command id="cmd_stop" oncommand="console.doCommandToggleStop();"/>
      <command id="cmd_reload" oncommand="console.doCommandReload();"/>
      <command id="cmd_init_at_startup" 
        oncommand="console.jsds.initAtStartup = !console.jsds.initAtStartup"/>

      <!-- Tasks commands, from overlay -->
      <commandset id="tasksCommands"/>
    </commandset>

    <commandset id="venkmanStackCommands">
      <!-- commands in this set will only be enabled when we have a stack  -->
      <command id="cmd_step_over" oncommand="console.doCommandNext();"/>
      <command id="cmd_step_in" oncommand="console.doCommandStep();"/>
      <command id="cmd_step_out" oncommand="console.doCommandStepOut();"/>
      <command id="cmd_cont" oncommand="console.doCommandCont();"/>
    </commandset>

    <!-- Keys -->
    <keyset id="venkmanKeys">
      <!-- Hidden keys -->
      <key id="key_reload_ui" observes="cmd_reload_ui"
        modifiers="accel alt" key="R"/>

      <!-- File keys -->
      <key id="key_close"/>

      <!-- Edit keys -->
      <key id="key_undo"/>
      <key id="key_redo"/>
      <key id="key_cut"/>
      <key id="key_copy"/>
      <key id="key_paste"/>
      <key id="key_delete"/>
      <key id="key_selectAll"/>

      <!-- View keys -->
      <key id="key_reload" observes="cmd_reload" 
        modifiers="accel" key="R"/>

      <!-- Debug keys -->
      <key id="key_focus" observes="cmd_focus" keycode="VK_TAB"/>
      <key id="key_stop" observes="cmd_stop" keycode="VK_F4"/>
      <key id="key_cont" observes="cmd_cont" keycode="VK_F5"/>
      <key id="key_step_over" observes="cmd_step_over" keycode="VK_F10"/>
      <key id="key_step_in" observes="cmd_step_in" keycode="VK_F11"/>
      <key id="key_step_out" observes="cmd_step_out" modifiers="shift"
        keycode="VK_F11"/>
      <key id="key_tmode_cycle" observes="cmd_tmode_cycle"
           modifiers="accel" key="T"/>  

      <!-- Tasks keys, from overlay -->
      <keyset id="tasksKeys"/>
    </keyset>

    <!-- Main menu bar -->
    <toolbox flex="1">
      <menubar id="main-menubar" persist="collapsed"
        grippytooltiptext="&MenuBar.tooltip;">

        <!-- File menu -->
        <menu id="menu_File">
          <menupopup id="menu_FilePopup">
            <menuitem id="menu_close"/>
          </menupopup>
        </menu>
  
        <!-- Edit menu -->
        <menu id="menu_Edit">
          <menupopup id="menu_Edit_Popup">
            <menuitem id="menu_undo"/>
            <menuitem id="menu_redo"/>
            <menuseparator/>
            <menuitem id="menu_cut"/>
            <menuitem id="menu_copy"/>
            <menuitem id="menu_paste"/>
            <menuitem id="menu_delete"/>
            <menuseparator/>
            <menuitem id="menu_selectAll"/>
            <menuseparator/>
            <menuitem id="menu_preferences"
              oncommand="goPreferences('navigator.xul', 'chrome://communicator/content/pref/pref-navigator.xul', 'navigator');"/>
          </menupopup>
        </menu> 
  
        <!-- View menu -->
        <menu id="menu_View">
          <menupopup id="menu_ViewPopup">
            <menuitem id="menu_Reload" key="key_reload" observes="cmd_reload"
              label="&Reload.label;" accesskey="&Reload.aKey;"/>
          </menupopup>
        </menu>
  
        <!-- Debug menu -->
        <menu id="menu_Debug" label="&Debug.label;" accesskey="&Debug.aKey;">
          <menupopup id="menu_DebugPopup"
            onpopupshowing="console.onDebugMenuShowing(event);">
            <menuitem id="menu_Stop" key="key_stop"
              observes="cmd_stop"
              label="&Stop.label;" accesskey="&Stop.aKey;"/>
            <menuitem id="menu_Cont" key="key_cont"
              observes="cmd_cont"
              label="&Cont.label;" accesskey="&Cont.aKey;"/>
            <menuitem id="menu_StepOver" key="key_step_over"
              observes="cmd_step_over"
              label="&StepOver.label;" accesskey="&StepOver.aKey;"/>
            <menuitem id="menu_StepInto" key="key_step_in"
              observes="cmd_step_in"
              label="&StepIn.label;" accesskey="&StepIn.aKey;"/>
            <menuitem id="menu_StepOut" key="key_step_out"
              observes="cmd_step_out"
              label="&StepOut.label;" accesskey="&StepOut.aKey;"/>
            <menuseparator/>

            <menuitem id="menu_TModeIgnore"
              observes="cmd_tmode_ignore" type="radio"
              label="&TModeIgnore.label;"
              accesskey="&TModeIgnore.aKey;"/>
            <menuitem id="menu_TModeTrace"
              observes="cmd_tmode_trace" type="radio"
              label="&TModeTrace.label;"
              accesskey="&TModeTrace.aKey;"/>
            <menuitem id="menu_TModeBreak"
              observes="cmd_tmode_break" type="radio"
              label="&TModeBreak.label;"
              accesskey="&TModeBreak.aKey;"/>
            <menuseparator/>

            <menuitem id="menu_initAtStartup" observes="cmd_init_at_startup"
              type="checkbox"
              label="&InitAtStartup.label;" accesskey="&InitAtStartup.aKey;"/>
          </menupopup>
        </menu>

        <!-- Tasks menu -->
        <menu id="tasksMenu"/>
      </menubar>  

      <!-- Debug toolbar -->
      <toolbar class="toolbar-primary chromeclass-toolbar" id="main-toolbar"
        grippytooltiptext="&DebugBar.tooltip;">
        <hbox id="main-toolbar-buttons">
          <toolbarbutton class="toolbarbutton-1" id="stop-button"
            label="&Stop.label;" observes="cmd_stop"
            tooltiptext="&Stop.tooltip;"/>
          <toolbarseparator class="toolbarseparator-primary"/>
          <toolbarbutton class="toolbarbutton-1" id="cont-button"
            label="&Cont.label;" observes="cmd_cont"
            tooltiptext="&Cont.tooltip;"/>
          <toolbarbutton class="toolbarbutton-1" id="step-over-button"
            label="&StepOver.label;" observes="cmd_step_over"
            tooltiptext="&StepOver.tooltip;"/>
          <toolbarbutton class="toolbarbutton-1" id="step-in-button"
            label="&StepIn.label;" observes="cmd_step_in"
            tooltiptext="&StepIn.tooltip;"/>
          <toolbarbutton class="toolbarbutton-1" id="step-out-button"
            label="&StepOut.label;" observes="cmd_step_out"
            tooltiptext="&StepOut.tooltip;"/>
        </hbox>
      </toolbar>
        
    </toolbox>  
  </overlaytarget>

  <!-- Statusbar (hey, it's /almost/ a menu) -->
  <overlaytarget id="statusbar-overlay-target">
    <statusbar class="chromeclass-status" id="status-bar" flex="1">
      <statusbarpanel id="component-bar"/>
      <statusbarpanel id="status-text" label="&StatusText.label;" flex="1"
        crop="right"/>
      <statusbarpanel class="statusbarpanel-iconic" id="offline-status"
        hidden="true" offline="true"/>
    </statusbar>
  </overlaytarget>

</overlay>
  
