<?xml version="1.0"?>

<!--
   -
   - The contents of this file are subject to the Mozilla Public License
   - Version 1.1 (the "License"); you may not use this file except in
   - compliance with the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/ 
   - 
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License. 
   -
   - The Original Code is The JavaScript Debugger
   - 
   - The Initial Developer of the Original Code is
   - Netscape Communications Corporation
   - Portions created by Netscape are
   - Copyright (C) 1998 Netscape Communications Corporation.
   - All Rights Reserved.
   -
   - Alternatively, the contents of this file may be used under the
   - terms of the GNU Public License (the "GPL"), in which case the
   - provisions of the GPL are applicable instead of those above.
   - If you wish to allow use of your version of this file only
   - under the terms of the GPL and not to allow others to use your
   - version of this file under the MPL, indicate your decision by
   - deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL.  If you do not delete
   - the provisions above, a recipient may use your version of this
   - file under either the MPL or the GPL.
   -
   - Contributor(s):
   -  Robert Ginda, <rginda@netscape.com>, original author
   -
   -->

<!DOCTYPE window SYSTEM "chrome://venkman/locale/venkman.dtd" >

<?xml-stylesheet href="chrome://venkman/skin/venkman.css" type="text/css"?>

<?xul-overlay href="chrome://global/content/globalOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/utilityOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/tasksOverlay.xul"?>

<window id="main-window" orient="vertical"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  onload="console.onLoad();" onunload="return console.onUnload();"
  width="640" height="480"
  persist="width height screenX screenY" title="&MainWindow.title;"
  windowtype="mozapp:venkman">

  <script>
    <![CDATA[
    /* set this to false to turn off dd() messages */
    var DEBUG = true;
    ]]>
  </script>

  <script src="chrome://navigator/content/tooltip.js"/>
  <script src="chrome://global/content/nsJSSupportsUtils.js"/>
  <script src="chrome://global/content/nsJSComponentManager.js"/>
  <script src="chrome://global/content/nsUserSettings.js"/>
  <script src="chrome://global/content/nsTransferable.js"/>
  <script src="chrome://global/content/nsClipboard.js"/>
  <script src="chrome://global/content/nsDragAndDrop.js"/>
  <script src="chrome://communicator/content/contentAreaUtils.js"/>
  <script src="chrome://communicator/content/contentAreaDD.js"/>
  <script src="chrome://global/content/strres.js"/>

  <script src="chrome://venkman/content/outliner-utils.js"/>
  <script src="chrome://venkman/content/html-consts.js"/>
  <script src="chrome://venkman/content/command-manager.js"/>

  <script src="chrome://venkman/content/venkman-utils.js"/>
  <script src="chrome://venkman/content/venkman-static.js"/>
  <script src="chrome://venkman/content/venkman-handlers.js"/>
  <script src="chrome://venkman/content/venkman-debugger.js"/>
  <script src="chrome://venkman/content/venkman-url-loader.js"/>
  <script src="chrome://venkman/content/venkman-commands.js"/>
  <script src="chrome://venkman/content/venkman-prefs.js"/>
  <script src="chrome://venkman/content/venkman-eval.js"/>
  <script src="chrome://venkman/content/venkman-msg.js"/>
  <script src="chrome://venkman/content/venkman-munger.js"/>
  <script src="chrome://venkman/content/venkman-outliners.js"/>

  <commandset id="tasksCommands">
    <command id="cmd_close" oncommand="window.close();"/>
    <command id="cmd_quit"/>
  </commandset>

  <keyset id="tasksKeys">
    <key id="key_close"/>
    <key id="key_quit"/>
  </keyset>

<!--
    Step into = F11
    Step out of = Shift+F11
    Step over is F10 then?
-->

  <commandset id="venkmanCommands">
    <command id="cmd_reload_ui"
      oncommand="if (DEBUG) window.location.href = window.location.href;"/>
    <command id="cmd_focus" oncommand="console._slInputElement.focus();"/>
    <command id="cmd_tmode_cycle" oncommand="cycleThrowMode();"/>
    <command id="cmd_tmode_ignore" oncommand="setThrowMode(TMODE_IGNORE);"/>
    <command id="cmd_tmode_trace" oncommand="setThrowMode(TMODE_TRACE);"/>
    <command id="cmd_tmode_break" oncommand="setThrowMode(TMODE_BREAK);"/>
  </commandset>

  <commandset id="venkmanDebuggerCommands">
    <!-- commands in this set will be disabled when we're not stopped -->
    <command id="cmd_step_in" oncommand="console.doCommandStep();"/>
    <command id="cmd_cont" oncommand="console.doCommandCont();"/>
  </commandset>

  <keyset id="venkmanKeys">
    <key id="key_reload_ui" observes="cmd_reload_ui" 
      modifiers="control alt" key="R"/>
    <key id="key_focus" observes="cmd_focus" keycode="VK_TAB"/>
    <key id="key_cont" observes="cmd_cont" keycode="VK_F5"/>
    <key id="key_cont" observes="cmd_cont" keycode="VK_F5"/>
    <key id="key_step_in" observes="cmd_step_in" keycode="VK_F10"/>
    <key id="key_tmode_cycle" observes="cmd_tmode_cycle"
         modifiers="control" key="T"/>
  </keyset>

  <popupset id="tooltip-set">
    <popup id="tooltip-popup" class="tooltip" 
      onpopupshowing="return fillInTooltip(document.tooltipNode);">
      <box id="tooltipBox" orient="vertical"/>
    </popup>
  </popupset>

  <toolbox>
    <menubar id="main-menubar" persist="collapsed">
      <menu id="menu_File">
        <menupopup id="menu_FilePopup">
         <!--
          <menuitem id="menu_ReloadUI" key="key_reload_ui"
            observes="cmd_reload_ui"
            label="&ReloadUI.label;" accesskey="&ReloadUI.aKey;"/>
          <menuseparator/>
         -->
          <menuitem id="menu_close"/>
        </menupopup>
      </menu>
      <menu id="menu_Debug" label="&Debug.label;" accesskey="&Debug.aKey;">
        <menupopup id="menu_DebugPopup">
          <menuitem id="menu_Cont" key="key_cont"
            observes="cmd_cont"
            label="&Cont.label;" accesskey="&Cont.aKey;"/>
          <menuitem id="menu_StepInto" key="key_step_in"
            observes="cmd_step_in"
            label="&StepIn.label;" accesskey="&StepIn.aKey;"/>
          <menuseparator/>
          <menu id="menu_ThrowMode" label = "&TModeMenu.label;"
                accesskey="&TModeMenu.aKey;">
            <menupopup onpopupshowing="console.onTModeMenuCreate();">
              <menuitem id="menu_TModeIgnore"
                        observes="cmd_tmode_ignore" type="radio"
                        label="&TModeIgnore.label;"
                        accesskey="&TModeIgnore.aKey;"/>
              <menuitem id="menu_TModeTrace"
                        observes="cmd_tmode_trace" type="radio"
                        label="&TModeTrace.label;"
                        accesskey="&TModeTrace.aKey;"/>
              <menuitem id="menu_TModeBreak"
                        observes="cmd_tmode_break" type="radio"
                        label="&TModeBreak.label;"
                        accesskey="&TModeBreak.aKey;"/>
              <menuseparator/>
              <menuitem id="menu_TModeCycle" label = "&TModeCycle.label;"
                        observes="cmd_tmode_cycle" key="key_tmode_cycle"
                        accesskey="&TModeCycle.aKey;"/>
            </menupopup>
          </menu>
        </menupopup>
      </menu>
      <menu id="tasksMenu"/>
    </menubar>

    <toolbar class="toolbar-primary chromeclass-toolbar" id="main-toolbar">
      <hbox id="main-toolbar-buttons">
        <button class="button-toolbar-1 top" id="cont-button"
                label="&Cont.label;" observes="cmd_cont"/>
        <button class="button-toolbar-1 top" id="step-in-button"
                label="&StepIn.label;" observes="cmd_step_in"/>
      </hbox>
    </toolbar>
      
  </toolbox>

  <vbox flex="1">

    <hbox flex="1" id="middle-containing-hbox">
      <box flex="1" id="side-vbox" orient="vertical">

        <outliner flex="1" id="script-list-outliner"
          onclick="console.onScriptClick(event);">

          <outlinercol id="script-file-name" label="&FileName.header;" 
           class="outlinercol-header outlinercol-inset-header" flex="95"
           persist="hidden width"/>
          <splitter class="tree-splitter"/>
          <outlinercol flex="5" id="script-count"
            label="&ScriptCount.header;" persist="hidden width"
            class="outlinercol-header outlinercol-inset-header"/>
          <outlinerbody id="script-list-body" flex="1"/>
        </outliner>

        <splitter collapse="before"><grippy/></splitter>

        <outliner flex="1" id="call-stack-outliner"
          onclick="console.onStackClick(event);">

          <outlinercol id="current-frame" display="&IsCurrent.header;"
            persist="hidden width"
            class="outlinercol-header outlinercol-inset-header" width="20px"/>
          <outlinercol flex="50" id="function-name"
            label="&FunctionName.header;" persist="hidden width"
            class="outlinercol-header outlinercol-inset-header"/>
          <splitter class="tree-splitter"/>
          <outlinercol flex="25" id="line-number"
            label="&LineNumber.header;" persist="hidden width"
            class="outlinercol-header outlinercol-inset-header"/>
          <splitter class="tree-splitter"/>
          <outlinercol flex="50" id="file-name" persist="hidden width"
            label="&FileName.header;" crop="left"
            class="outlinercol-header outlinercol-inset-header"/>
          <outlinerbody id="call-stack-body" flex="1"/>
        </outliner>

      </box>
      <splitter collapse="before"><grippy/></splitter>
      <box flex="3" orient="vertical"> <!-- have to use box instead of vbox -->
                                       <!-- to get grippy styled right.     -->

        <hbox flex="50" style="overflow: auto">
          <outliner id="source-outliner" flex="1"
            onclick="console.onSourceClick(event);">
            <outlinercol id="breakpoint-col" width="20px"
              display="&Breakpoint.header;" persist="hidden width"
              class="outlinercol-header outlinercell-inset-header"/>
            <outlinercol id="source-line-number" flex="5"
              display="&LineNumber.header;" persist="hidden width"
              class="outlinercol-header outlinercell-inset-header"/>
            <splitter class="tree-splitter"/>          
            <outlinercol id="source-line-text" flex="95"
              display="&SourceText.header;" persist="hidden width"
              class="outlinercol-header outlinercell-inset-header"/>
            <outlinerbody id="source-outliner-body" flex="1"/>
          </outliner>
        </hbox>

        <splitter orient="vertical" collapse="after" autostretch="never">
          <grippy/>
        </splitter>

        <vbox flex="50">
          <iframe id="output-iframe" flex="1" tooltip="tooltip-popup"
            ondraggesture=
              "nsDragAndDrop.startDrag(event, contentAreaDNDObserver);"
            src="chrome://venkman/content/venkman-output-window.html"
            type="content"/>
          <textbox id="input-single-line" class="input-widget"
            onkeypress="console.onSingleLineKeypress(event);"/>
        </vbox>

      </box>
    </hbox>
  </vbox>

</window>

