/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is Mozilla.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications.  Portions created by Netscape Communications are
 * Copyright (C) 2001 by Netscape Communications.  All
 * Rights Reserved.
 * 
 * Contributor(s): 
 *   Vidur Apparao <vidur@netscape.com> (original author)
 */

#include "nsISupports.idl"

interface nsIWSDLService;
interface nsIWSDLPort;
interface nsIWSDLOperation;
interface nsIWSDLMessage;
interface nsIWSDLPart;
interface nsIDOMElement;
interface nsISchemaComponent;
interface nsISchema;

[scriptable, uuid(0458dac0-65de-11d5-9b42-00104bdf5339)]
interface nsIWSDLService : nsISupports {
  readonly attribute AString name;
  readonly attribute nsIDOMElement documentation;
  readonly attribute PRUint32 portCount;
  nsIWSDLPort getPort(in PRUint32 index);
};

[scriptable, uuid(0458dac1-65de-11d5-9b42-00104bdf5339)]
interface nsIWSDLPort : nsISupports {
  const unsigned short STYLE_RPC = 1;
  const unsigned short STYLE_DOCUMENT = 2;
  
  readonly attribute AString name;
  readonly attribute nsIDOMElement documentation;

  readonly attribute AString bindingName;
  readonly attribute unsigned short style;
  readonly attribute AString transport;

  readonly attribute PRUint32 operationCount;
  nsIWSDLOperation getOperation(in PRUint32 index);
};

[scriptable, uuid(0458dac2-65de-11d5-9b42-00104bdf5339)]
interface nsIWSDLOperation : nsISupports {
  readonly attribute AString name;
  readonly attribute nsIDOMElement documentation;

  readonly attribute unsigned short style;
  readonly attribute AString soapAction;

  readonly attribute nsIWSDLMessage input;
  readonly attribute nsIWSDLMessage output;
  readonly attribute nsIWSDLMessage fault;  
};

[scriptable, uuid(0458dac3-65de-11d5-9b42-00104bdf5339)]
interface nsIWSDLMessage : nsISupports {
  const unsigned short   LOCATION_SOAP_BODY = 1;
  const unsigned short   LOCATION_SOAP_HEADER = 2;
  const unsigned short   LOCATION_SOAP_FAULT = 3;

  const unsigned short   USE_LITERAL = 1;
  const unsigned short   USE_ENCODED = 2;

  readonly attribute AString name;
  readonly attribute nsIDOMElement documentation;
  
  readonly attribute unsigned short location;
  readonly attribute unsigned short use;
  readonly attribute AString encodingStyle;
  readonly attribute AString namespace;

  readonly attribute PRUint32 partCount;
  nsIWSDLPart getPart(in PRUint32 index);
};

[scriptable, uuid(0458dac4-65de-11d5-9b42-00104bdf5339)]
interface nsIWSDLPart : nsISupports {
  readonly attribute AString name;
  
  readonly attribute AString type;
  readonly attribute AString elementName;

  /**
   * The schema component that corresponds to this part. If the
   * type attribute is used, this is a nsISchemaType. If the 
   * elementName attribute is used, it is a nsISchemaElement.
   */
  readonly attribute nsISchemaComponent schemaComponent;

  /**
   * The containing schema for the schemaComponent
   */
  readonly attribute nsISchema schema;
};
