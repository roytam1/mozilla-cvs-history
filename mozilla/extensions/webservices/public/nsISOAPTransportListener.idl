/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 2001 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

interface nsIDOMDocument;
interface nsISOAPMessage;

/**
 * This interface recieves control when an unsolicited transport
 * is recieved on a transport.
 */

[scriptable, uuid(99ec6696-535f-11d4-9a58-000064657374)]
interface nsISOAPTransportListener : nsISupports {

  /**
   * This method is invoked when an unsolicited message is
   *   recieved.  First all listeners are tried in the order declared
   *   with the capture flag set.  Then all listeners are tried in
   *   the reverse order declared with the capture flag clear.
   *
   * @param message Actual message.
   *
   * @param capture True if the listener is being permitted to gain
   *   control before all later-added listeners.
   *
   * @return true if message is handled, false if it was not
   */
  boolean handleMessage(in nsISOAPMessage message, in boolean capture);
};
