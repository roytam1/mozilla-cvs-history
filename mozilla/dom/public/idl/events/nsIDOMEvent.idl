/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla browser.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications, Inc.  Portions created by Netscape are
 * Copyright (C) 1999, Mozilla.  All Rights Reserved.
 * 
 * Contributor(s):
 */

#include "domstubs.idl"

[scriptable, uuid(a66b7b80-ff46-bd97-0080-5f8ae38add32)]
interface nsIDOMEvent : nsISupports
{
  const unsigned short CAPTURING_PHASE = 1;
  const unsigned short AT_TARGET       = 2;
  const unsigned short BUBBLING_PHASE  = 3;

  const long MOUSEDOWN    = 0x00000001;
  const long MOUSEUP      = 0x00000002;
  const long MOUSEOVER    = 0x00000004;
  const long MOUSEOUT     = 0x00000008;
  const long MOUSEMOVE    = 0x00000010;
  const long MOUSEDRAG    = 0x00000020;
  const long CLICK        = 0x00000040;
  const long DBLCLICK     = 0x00000080;
  const long KEYDOWN      = 0x00000100;
  const long KEYUP        = 0x00000200;
  const long KEYPRESS     = 0x00000400;
  const long DRAGDROP     = 0x00000800;
  const long FOCUS        = 0x00001000;
  const long BLUR         = 0x00002000;
  const long SELECT       = 0x00004000;
  const long CHANGE       = 0x00008000;
  const long RESET        = 0x00010000;
  const long SUBMIT       = 0x00020000;
  const long SCROLL       = 0x00040000;
  const long LOAD         = 0x00080000;
  const long UNLOAD       = 0x00100000;
  const long XFER_DONE    = 0x00200000;
  const long ABORT        = 0x00400000;
  const long ERROR        = 0x00800000;
  const long LOCATE       = 0x01000000;
  const long MOVE         = 0x02000000;
  const long RESIZE       = 0x04000000;
  const long FORWARD      = 0x08000000;
  const long HELP         = 0x10000000;
  const long BACK         = 0x20000000;
  const long TEXT         = 0x40000000;

  const long ALT_MASK     = 0x00000001;
  const long CONTROL_MASK = 0x00000002;
  const long SHIFT_MASK   = 0x00000004;
  const long META_MASK    = 0x00000008;

  readonly attribute DOMString          type;
  readonly attribute nsIDOMEventTarget  target;
  readonly attribute nsIDOMEventTarget  currentTarget;
  readonly attribute nsIDOMEventTarget  originalTarget;
  readonly attribute unsigned short     eventPhase;
  readonly attribute boolean            bubbles;
  readonly attribute boolean            cancelable;
  readonly attribute DOMTimeStamp       timeStamp;

  void                      stopPropagation();
  void                      preventBubble();
  void                      preventCapture();
  void                      preventDefault();
  void                      initEvent(in DOMString eventTypeArg,
                                      in boolean canBubbleArg,
                                      in boolean cancelableArg);
};
