/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Mozilla.org
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;
interface nsIURI;

[scriptable, uuid(48987797-dd33-46d4-a860-8d420810669c)]

/**
 * The C++ source has access to the browser script source through
 * nsIBrowserWindow. It is intended to be attached to the chrome
 * DOMWindow of a browser window. A DOMWindow that does not happen to
 * be a browser chrome window will simply have no access to any such
 * interface.
 */
interface nsIBrowserDOMWindow : nsISupports
{
  /**
   * values for openURI's aWhere parameter
   */
  const short OPEN_DEFAULTWINDOW = 0;
  const short OPEN_CURRENTWINDOW = 1;
  const short OPEN_NEWWINDOW     = 2;
  const short OPEN_NEWTAB        = 3;

  /**
   * values for openURI's aContext parameter
   */
  const short OPEN_EXTERNAL      = 1; // external link
  const short OPEN_NEW           = 2; // internal open new window

  /**
   * Load a URI
   * @param aURI the URI to open. null is allowed; it means about:blank.
   * @param aWhere see possible values described above.
   * @param aOpener window requesting the open (can be null).
   * @param aContext the context in which the URI is being opened. This
   *                 is used only when aWhere == OPEN_DEFAULTWINDOW.
   * @return the window into which the URI was opened.
  */
  nsIDOMWindow openURI(in nsIURI aURI, in nsIDOMWindow aOpener,
                       in short aWhere, in short aContext);
};

