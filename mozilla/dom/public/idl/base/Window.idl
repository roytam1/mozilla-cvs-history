      interface Window {
/* IID: { 0xa6cf906b, 0x15b3, 0x11d2, \
  { 0x93, 0x2e, 0x00, 0x80, 0x5f, 0x8a, 0xdd, 0x32 } } */
        readonly attribute  Window window;
        readonly attribute  Window self;
        readonly attribute  Document document;
        readonly attribute  Navigator navigator;
        readonly attribute  Screen screen;
        readonly attribute  History history;
        readonly attribute  Window parent;
        readonly attribute  Window top;
        readonly replaceable attribute  Window content;
        readonly replaceable attribute  xpidl nsISidebar sidebar;
        readonly attribute  BarProp menubar;
        readonly attribute  BarProp toolbar;
        readonly attribute  BarProp locationbar;
        readonly attribute  BarProp personalbar;
        readonly attribute  BarProp statusbar;
        readonly attribute  BarProp scrollbars;
        readonly attribute  BarProp directories;
        readonly attribute  boolean closed;
        readonly attribute  WindowCollection frames;
		readonly replaceable attribute  xpidl nsIControllers controllers;
                 attribute  Window opener;
                 attribute  wstring status;
                 attribute  wstring defaultStatus;
                 attribute  wstring name;
                 attribute  long innerWidth;
                 attribute  long innerHeight;
                 attribute  long outerWidth;
                 attribute  long outerHeight;
                 attribute  long screenX;
                 attribute  long screenY;
                 attribute  long pageXOffset;
                 attribute  long pageYOffset;
        readonly attribute  long scrollX;
        readonly attribute  long scrollY;

        void  dump(in wstring str);
        void  alert(/* ... */);
	      boolean  confirm(/* ... */);
        DOMString  prompt(/* ... */);
        void  focus();
        void  blur();
        void  back();
        void  forward();
        void  home();
        void  stop();
        void  print();

        void  moveTo(in long xPos, in long yPos);
        void  moveBy(in long xDif, in long yDif);
        void  resizeTo(in long width, in long height);
        void  resizeBy(in long widthDif, in long heightDif);
        void  sizeToContent();
        void  GetAttention();
				void  scroll(in long xScroll, in long yScroll);
        void  scrollTo(in long xScroll, in long yScroll);
        void  scrollBy(in long xScrollDif, in long yScrollDif);

        void clearTimeout(in long timerID);
        void clearInterval(in long timerID);
        long setTimeout(/* ... */);
        long setInterval(/* ... */);

        void captureEvents(in long eventFlags);
        void releaseEvents(in long eventFlags);
        void routeEvent(in Event evt);
        void enableExternalCapture();
        void disableExternalCapture();
        
        Window open(/* ... */);
        Window openDialog(/* ... */);
        noscript void  close();
        void  close(/* ... */);

				void updateCommands(in DOMString action);

				DOMString escape(in DOMString str);
        DOMString unescape(in DOMString str);

		  void addXPConnectObject(in DOMString id, in xpidl nsISupports XPConnectObj);
		  void removeXPConnectObject(in DOMString id, in xpidl nsISupports XPConnectObj);
		  xpidl nsISupports getXPConnectObject(in DOMString id);
      };

     interface EventTarget {
 /* IID: { 0x1c773b30, 0xd1cf, 0x11d2, \
  { 0xbd, 0x95, 0x00, 0x80, 0x5f, 0x8a, 0xe3, 0xf4 } } */

	   void	addEventListener(in DOMString type, in function EventListener listener, in boolean useCapture);
	   void	removeEventListener(in DOMString type, in function EventListener listener, in boolean useCapture);
	 };

     interface AbstractView {
 /* IID: { 0xf51ebade, 0x8b1a, 0x11d3, \
  { 0xaa, 0xe7, 0x00, 0x10, 0x83, 0x01, 0x23, 0xb4 } } */

      noscript readonly attribute  Document document;
   };
