/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla SVG project.
 * 
 * The Initial Developer of the Original Code is Crocodile Clips Ltd.
 * Portions created by Crocodile Clips are
 * Copyright (C) 2001, Crocodile Clips Ltd.  All Rights Reserved.
 * 
 * Contributor(s):
 *
 *    Alex Fritze <alex.fritze@crocodile-clips.com> (original author)
 * 
 */

#include "nsIDOMSVGElement.idl"

interface nsIDOMSVGAnimatedLength;
interface nsIDOMSVGRect;
interface nsIDOMSVGViewSpec;
interface nsIDOMSVGPoint;
interface nsIDOMSVGNumber;
interface nsIDOMSVGLength;
interface nsIDOMSVGAngle;
interface nsIDOMSVGMatrix;
interface nsIDOMSVGTransform;

[scriptable, uuid(67b8f41e-3577-4c8a-b1de-bef51186fe08)]
interface nsIDOMSVGSVGElement
  : nsIDOMSVGElement
/*
        The SVG DOM makes use of multiple interface inheritance.
        Since XPCOM only supports single interface inheritance,
        the best thing that we can do is to promise that whenever
        an object implements _this_ interface it will also
        implement the following interfaces. (We then have to QI to
        hop between them.)
        
    nsIDOMSVGTests,
    nsIDOMSVGLangSpace,
    nsIDOMSVGExternalResourcesRequired,
    nsIDOMSVGStylable,
    nsIDOMSVGLocatable,
    nsIDOMSVGFitToViewBox,
    nsIDOMSVGZoomAndPan,
    events::nsIDOMEventTarget,
    events::nsIDOMDocumentEvent,
    css::nsIDOMViewCSS,
    css::nsIDOMDocumentCSS
*/
{ 
  readonly attribute nsIDOMSVGAnimatedLength x;
  readonly attribute nsIDOMSVGAnimatedLength y;
  readonly attribute nsIDOMSVGAnimatedLength width;
  readonly attribute nsIDOMSVGAnimatedLength height;
  attribute DOMString         contentScriptType;
      // raises DOMException on setting
  attribute DOMString         contentStyleType;
      // raises DOMException on setting
  readonly attribute nsIDOMSVGRect     viewport;
  readonly attribute float pixelUnitToMillimeterX;
  readonly attribute float pixelUnitToMillimeterY;
  readonly attribute float screenPixelToMillimeterX;
  readonly attribute float screenPixelToMillimeterY;
  attribute boolean useCurrentView;
      // raises DOMException on setting
  readonly attribute nsIDOMSVGViewSpec currentView;
  attribute float currentScale;
      // raises DOMException on setting
  readonly attribute nsIDOMSVGPoint currentTranslate;

  unsigned long suspendRedraw(in unsigned long max_wait_milliseconds);
  void          unsuspendRedraw(in unsigned long suspend_handle_id);
      // raises( DOMException );
  void          unsuspendRedrawAll();
  void          forceRedraw();
  void          pauseAnimations();
  void          unpauseAnimations();
  boolean       animationsPaused();
  float         getCurrentTime();
  void          setCurrentTime(in float seconds);
  nsIDOMNodeList getIntersectionList(in nsIDOMSVGRect rect,
                                     in nsIDOMSVGElement referenceElement);
  nsIDOMNodeList getEnclosureList(in nsIDOMSVGRect rect, in nsIDOMSVGElement referenceElement);
  boolean       checkIntersection(in nsIDOMSVGElement element, in nsIDOMSVGRect rect);
  boolean       checkEnclosure(in nsIDOMSVGElement element, in nsIDOMSVGRect rect);
  void          deSelectAll();
  nsIDOMSVGNumber       createSVGNumber();
  nsIDOMSVGLength       createSVGLength();
  nsIDOMSVGAngle        createSVGAngle();
  nsIDOMSVGPoint        createSVGPoint();
  nsIDOMSVGMatrix       createSVGMatrix();
  nsIDOMSVGRect         createSVGRect();
  nsIDOMSVGTransform    createSVGTransform();
  nsIDOMSVGTransform    createSVGTransformFromMatrix(in nsIDOMSVGMatrix matrix);
  DOMString             createSVGString();
  nsIDOMElement         getElementById(in DOMString elementId);
};





