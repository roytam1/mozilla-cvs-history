/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla browser.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications, Inc.  Portions created by Netscape are
 * Copyright (C) 1999, Mozilla.  All Rights Reserved.
 * 
 * Contributor(s):
 */

#include "domstubs.idl"

[scriptable, uuid(a6cf907c-15b3-11d2-932e-00805f8add32)]
interface nsIDOMNode : nsISupports
{
  const unsigned short      ELEMENT_NODE       = 1;
  const unsigned short      ATTRIBUTE_NODE     = 2;
  const unsigned short      TEXT_NODE          = 3;
  const unsigned short      CDATA_SECTION_NODE = 4;
  const unsigned short      ENTITY_REFERENCE_NODE = 5;
  const unsigned short      ENTITY_NODE        = 6;
  const unsigned short      PROCESSING_INSTRUCTION_NODE = 7;
  const unsigned short      COMMENT_NODE       = 8;
  const unsigned short      DOCUMENT_NODE      = 9;
  const unsigned short      DOCUMENT_TYPE_NODE = 10;
  const unsigned short      DOCUMENT_FRAGMENT_NODE = 11;
  const unsigned short      NOTATION_NODE      = 12;

  readonly attribute DOMString        nodeName;
           attribute DOMString        nodeValue;
                                          // raises(DOMException) on setting
                                          // raises(DOMException) on retrieval
  readonly attribute unsigned short   nodeType;
  readonly attribute nsIDOMNode       parentNode;
  readonly attribute nsIDOMNodeList   childNodes;
  readonly attribute nsIDOMNode       firstChild;
  readonly attribute nsIDOMNode       lastChild;
  readonly attribute nsIDOMNode       previousSibling;
  readonly attribute nsIDOMNode       nextSibling;
  readonly attribute nsIDOMNamedNodeMap attributes;
  // Modified in DOM Level 2:
  readonly attribute nsIDOMDocument   ownerDocument;
  nsIDOMNode                insertBefore(in nsIDOMNode newChild, 
                                         in nsIDOMNode refChild)
                                          raises(DOMException);
  nsIDOMNode                replaceChild(in nsIDOMNode newChild, 
                                         in nsIDOMNode oldChild)
                                          raises(DOMException);
  nsIDOMNode                removeChild(in nsIDOMNode oldChild)
                                         raises(DOMException);
  nsIDOMNode                appendChild(in nsIDOMNode newChild)
                                         raises(DOMException);
  boolean                   hasChildNodes();
  nsIDOMNode                cloneNode(in boolean deep);
  // Modified in DOM Level 2:
  void                      normalize();
  // Introduced in DOM Level 2:
  boolean                   isSupported(in DOMString feature, 
                                        in DOMString version);
  // Introduced in DOM Level 2:
  readonly attribute DOMString        namespaceURI;
  // Introduced in DOM Level 2:
           attribute DOMString        prefix;
                                         // raises(DOMException) on setting

  // Introduced in DOM Level 2:
  readonly attribute DOMString        localName;
  // Introduced in DOM Level 2:
  boolean            hasAttributes();
};


[scriptable, uuid(29fb2a18-1dd2-11b2-8dd9-a6fd5d5ad12f)]
interface nsIDOM3Node : nsISupports
{
  // Introduced in DOM Level 3:
  readonly attribute DOMString        baseURI;

};
