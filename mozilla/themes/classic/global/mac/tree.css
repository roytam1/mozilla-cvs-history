
/******** Tree widget **********/

/** basic tree ****************************************************
 *  basic tree widget for use in main windows where no decoration
 *  is required.
 **/
tree {
  background-color: #EEEEEE;
  color: #000000;
  border: none;
  border-spacing: 0px;
}

/** class="inset" *************************************************
 *  this is the tree class used by dialogs to create treeviews with 
 *  inset borders, and default dialog spacing.
 **/

tree.inset {
  border-left: 1px solid #9D9D9D;
  border-top: 1px solid #9D9D9D;
  border-right: 1px solid #FFFFFF;
  border-bottom: 1px solid #FFFFFF;
  margin: 1px 5px 2px 5px;
}

tree.inset > .tree-container-treerows {
  border: 1px solid #000000;
}


treeitem > treerow {
	border-bottom : 1px solid #FFFFFF;
}

treeitem[selected="true"] > treerow { 
	color: #000000;
	background-color: Highlight;
}
treeitem[dd-dropon="true"] > treerow { 
	color: #000000;
	background-color: Highlight;
}

treecell { 
  white-space: nowrap;
  vertical-align: middle;
  padding: 1px 0px 1px 2px;
} 

.treecell-header, .treecell-inset-header { 
  -moz-binding: url("chrome://global/skin/treeBindings.xml#treecell-header");
  background-color: #CCCCCC; 
  border-left: 1px solid #666666 !important;
  border-top: 1px solid #666666 !important;
  border-right: 1px solid #333333 !important;
  border-bottom: 1px solid #333333 !important;
  color: black;
  padding: 0px;
  vertical-align: middle;
} 

.treecell-header > .treecell-header-box,
.treecell-inset-header > .treecell-header-box {
  padding: 2px 2px 2px 6px;
  border-left: 1px solid #FFFFFF;
  border-top: 1px solid #FFFFFF;
  border-bottom: 1px solid #888888;
  border-right: 1px solid #888888;
}

.treecell-header:hover:active,
.treecell-inset-header:hover:active {
  background-color: #888888;
  border-left: 1px solid #111111;
  border-top: 1px solid #111111;
  border-right: 1px solid #444444;
  border-bottom: 1px solid #444444;
  color: #FFFFFF;
}

.treecell-header[sortActive="true"], 
.treecell-inset-header[sortActive="true"] {
  background-color: #888888;
  border-left: 1px solid #111111 !important;
  border-top: 1px solid #111111 !important;
  border-right: 1px solid #444444 !important;
  border-bottom: 1px solid #444444 !important;
}

.treecell-header:hover:active > .treecell-header-box,
.treecell-inset-header:hover:active > .treecell-header-box,
.treecell-header[sortActive="true"] > .treecell-header-box,
.treecell-inset-header[sortActive="true"] > .treecell-header-box {
  border-left: 1px solid #555555;
  border-top: 1px solid #555555;
  border-right: 1px solid #AAAAAA;
  border-bottom: 1px solid #AAAAAA;
}

.treecell-header-image 
  {
    -moz-binding          : url("chrome://global/skin/treeBindings.xml#treecell-header-image");
    padding               : 0px;
  }

.treecell-header-image-box
  {
  	border-left				: 1px solid #FFFFFF;
  	border-top				: 1px solid #FFFFFF;
  	border-bottom			: 1px solid #888888;
  	border-right			: 1px solid #888888;
    padding                 : 0px;
  }

.treecell-image {
  padding: 0px;
}

/* todo: need to make dupes of the above to indicate columns with
   sort directions */


/** class="propertylist" ******************************************
 *  class for cells in grid-formatted property lists.
 **/
treecell.propertylist {
  padding-left: 5px;
  border-right: 1px solid #CCCCCC;
  border-bottom: 1px solid #CCCCCC;
}

.tree-cell-primary-icon {
  list-style-image: inherit;
  padding-right: 2px;
}

.tree-cell-icon {
  list-style-image: inherit;
  padding-right: 2px;
}

.tree-cell-twisty {
 list-style-image: url("chrome://global/skin/twisty-closed.gif");
 -moz-user-focus:ignore;
 padding-right: 2px;
}

.treecell-indent > .tree-cell-primary-icon {
  padding-left: 14px;
 }

treeitem[container="true"] > treerow > .treecell-indent > .tree-cell-primary-icon {
  padding-left: 0px;
}

treeitem[selected="true"] > treerow > treecell > .tree-cell-twisty {
  list-style-image: url("chrome://global/skin/twisty-closed-selected.gif");
}

.tree-cell-twisty:hover {
 text-decoration: none;
}

.tree-cell-twisty:active {
 text-decoration: none;
 list-style-image: url("chrome://global/skin/twisty-closed-active.gif");
}

.tree-cell-twisty[disabled="true"] {
 list-style-image: none;
}

treeitem[container="true"][open="true"] > treerow > treecell > .tree-cell-twisty {
 list-style-image: url("chrome://global/skin/twisty-open.gif");
}

treeitem[selected="true"][container="true"][open="true"] > treerow > treecell > .tree-cell-twisty {
  list-style-image: url("chrome://global/skin/twisty-open-selected.gif");
}

.tree-cell-twisty[open="true"]:active {
 text-decoration: none;
 list-style-image: url("chrome://global/skin/twisty-closed-active.gif");
}

/* tree header with sort direction indicators */
.sortDirectionIndicator[sortDirection="ascending"]  > .treecell-header-box > .tree-header-sortdirection {
  list-style-image: url("chrome://global/skin/sortAscending.gif");
  margin-right: 3px;
}

.sortDirectionIndicator[sortDirection="descending"] > .treecell-header-box > .tree-header-sortdirection {
  list-style-image: url("chrome://global/skin/sortDescending.gif");
  margin-right: 3px;
}

treecol[sortDirection="true"],
treecol[sortActive="true"]
  {
    background-color       : #DDDDDD;
  }

.treecell-popup-icon
  {
    list-style-image       : url("chrome://global/skin/columnselect.gif");
  }
