/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

/*

  An interface used for runtime pseudo-aggregation of RDF delegate
  objects.

*/

#include "nsrootidl.idl"
#include "nsISupports.idl"
interface nsIRDFResource;

/**
 * This interface should be implemented by an XPCOM factory that
 * is registered to handle "component:/rdf/delegate-factory/[key]/[scheme]"
 * ProgIDs.
 *
 * The factory will be invoked to create delegate objects from
 * nsIRDFResource::GetDelegate().
 */
[scriptable, uuid(A1B89470-A124-11d3-BE59-0020A6361667)]
interface nsIRDFDelegateFactory : nsISupports
{
    /**
     * Create a delegate for the specified RDF resource.
     *
     * The created delegate should forward AddRef() and Release()
     * calls to the aOuter object.
     */
    void CreateDelegate(in nsIRDFResource aOuter,
                        in string aKey,
                        in nsIIDRef aIID,
                        [retval, iid_is(aIID)] out nsQIResult aResult);
};


