/** -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is mozilla.org code.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation. Portions created by Netscape are
 * Copyright (C) 2000-2001 Netscape Communications Corporation. All
 * Rights Reserved.
 * 
 * Contributor(s): 
 *   Stuart Parmenter <pavlov@netscape.com>
 */

#include "nsISupports.idl"
#include "gfxtypes.idl"

interface nsIDrawable;
interface nsIImageFrame;
interface nsIEnumerator;

/**
 * nsIImage interface
 *
 * @author Tim Rowley <tor@cs.brown.edu>
 * @author Stuart Parmenter <pavlov@netscape.com>
 * @version 1.2
 * @see "gfx2"
 */
[scriptable, uuid(5e8405a4-1dd2-11b2-8385-bc8e3446cad3)]
interface nsIImageContainer : nsISupports
{
  /**
   * Create a new \a aWidth x \a aHeight sized image container.
   *
   * @param aWidth The width of the container in which all the nsIImageFrame children will fit.
   * @param aHeight The height of the container in which all the nsIImageFrame children will fit.
   */
  void init(in gfx_dimension aWidth,
            in gfx_dimension aHeight);

  /**
   * The width of the image.
   */
  readonly attribute gfx_dimension width;

  /**
   * The height of the image.
   */
  readonly attribute gfx_dimension height;


  /**
   * Get the current frame that would be drawn if the image was to be drawn now
   */
  readonly attribute nsIImageFrame currentFrame;



  readonly attribute unsigned long numFrames;
  nsIImageFrame getFrameAt(in unsigned long index);

  void appendFrame(in nsIImageFrame item);
  void removeFrame(in nsIImageFrame item);

  nsIEnumerator enumerate();

  void clear();

};
