<?xml version="1.0"?>
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Mozilla Communicator client code, released
# March 31, 1998.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998-1999
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Karsten DÃ¼sterloh <mnyromyr@tprac.de>
#   Simon Paquet <bugzilla@babylonsounds.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

<?xml-stylesheet href="chrome://messenger/skin/folderMenus.css" type="text/css"?>
<?xml-stylesheet href="chrome://communicator/skin/tasksOverlay.css" type="text/css"?>

<?xul-overlay href="chrome://global/content/charsetOverlay.xul"?>
#ifdef XP_MACOSX
<?xul-overlay href="chrome://messenger/content/macMenuOverlay.xul"?>
#endif
<?xul-overlay href="chrome://messenger/content/baseMenuOverlay.xul"?>

<!DOCTYPE overlay [
  <!ENTITY % globalDTD SYSTEM "chrome://global/locale/global.dtd">
  %globalDTD;
  <!ENTITY % messengerDTD SYSTEM "chrome://messenger/locale/messenger.dtd">
  %messengerDTD;
  <!ENTITY % msgViewPickerDTD SYSTEM "chrome://messenger/locale/msgViewPickerOverlay.dtd" >
  %msgViewPickerDTD;
  <!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
  %brandDTD;
]>

<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<script type="application/x-javascript" src="chrome://messenger/content/mailCommands.js"/>
<script type="application/x-javascript" src="chrome://messenger/content/junkCommands.js"/>
<script type="application/x-javascript" src="chrome://messenger/content/mailWindowOverlay.js"/>
<script type="application/x-javascript" src="chrome://messenger/content/mail-offline.js"/>
<script type="application/x-javascript" src="chrome://messenger/content/mailCore.js"/>
<script type="application/x-javascript" src="chrome://global/content/printUtils.js"/>
<script type="application/x-javascript" src="chrome://messenger/content/msgViewPickerOverlay.js"/>
<script type="application/x-javascript" src="chrome://global/content/viewZoomOverlay.js"/>

<stringbundleset id="stringbundleset">
  <stringbundle id="bundle_messenger" src="chrome://messenger/locale/messenger.properties"/>
  <stringbundle id="bundle_shell" src="chrome://messenger/locale/shellservice.properties"/>
  <stringbundle id="bundle_offlinePrompts" src="chrome://messenger/locale/offline.properties"/>
</stringbundleset>

<!-- Performance optimization...we include utilityOverlay.xul which defines some command sets
     which are updated based on events like focus and select. We have our own custom events
     which we use to optmize when we do command updating. To avoid unnecessary command updating,
     we are going to override the events the global edit menu items and select edit menu items
     are updated on with events of our own controlling.
 -->

<commandset id="globalEditMenuItems"
            commandupdater="true"
            events="create-menu-edit"
            oncommandupdate="goUpdateGlobalEditMenuItems()"/>
<commandset id="selectEditMenuItems"
            commandupdater="true"
            events="create-menu-edit"
            oncommandupdate="goUpdateSelectEditMenuItems()"/>

<!-- End command set merging -->

<commandset id="mailFileMenuItems"
            commandupdater="true"
            events="create-menu-file"
            oncommandupdate="goUpdateMailMenuItems(this)">

    <command id="cmd_getNewMessages" oncommand="goDoCommand('cmd_getNewMessages')" disabled="true"/>
    <command id="cmd_close" oncommand="goDoCommand('cmd_close')"/>
    <command id="cmd_open" oncommand="goDoCommand('cmd_open')"/>

    <command id="cmd_file" disabled="true"/>

    <command id="cmd_emptyTrash" oncommand="goDoCommand('cmd_emptyTrash')" disabled="true"/>
    <command id="cmd_compactFolder" oncommand="goDoCommand('cmd_compactFolder')" disabled="true"/>
    <command id="cmd_printSetup" oncommand="goDoCommand('cmd_printSetup')" disabled="true"/>
    <command id="cmd_print" oncommand="goDoCommand('cmd_print')" disabled="true"/>
    <command id="cmd_printpreview" oncommand="goDoCommand('cmd_printpreview')" disabled="true"/>
    <command id="cmd_saveAsFile" oncommand="goDoCommand('cmd_saveAsFile')" disabled="true"/>
    <command id="cmd_saveAsTemplate" oncommand="goDoCommand('cmd_saveAsTemplate')" disabled="true"/>
    <command id="cmd_getNextNMessages" oncommand="goDoCommand('cmd_getNextNMessages')" disabled="true"/>
    <command id="cmd_renameFolder" oncommand="goDoCommand('cmd_renameFolder')" />
    <command id="cmd_sendUnsentMsgs" oncommand="goDoCommand('cmd_sendUnsentMsgs')" />
    <command id="cmd_synchronizeOffline" oncommand="goDoCommand('cmd_synchronizeOffline')" disabled="true"/>
    <command id="cmd_downloadFlagged" oncommand="goDoCommand('cmd_downloadFlagged')" disabled="true"/>
    <command id="cmd_downloadSelected" oncommand="goDoCommand('cmd_downloadSelected')" disabled="true"/>
    <command id="cmd_settingsOffline" oncommand="goDoCommand('cmd_settingsOffline')" disabled="true"/>
</commandset>

<commandset id="mailCommands">
  <command id="cmd_quit"/>
  <!--The cmd_createFilterFromPopup is used to notify the email context popup -->
  <command id="cmd_createFilterFromPopup"/>
  <command id="cmd_pageSetup"/>
  <command id="cmd_CustomizeMailToolbar"
           oncommand="CustomizeMailToolbar('mail-toolbox', 'CustomizeMailToolbar')"/>
</commandset>

<commandset id="mailViewMenuItems"
            commandupdater="true"
            events="create-menu-view"
            oncommandupdate="goUpdateMailMenuItems(this)">

   <command id="cmd_viewPageSource" oncommand="goDoCommand('cmd_viewPageSource')" disabled="true"/>
   <command id="cmd_setFolderCharset" oncommand="goDoCommand('cmd_setFolderCharset')" />

   <command id="cmd_expandAllThreads" oncommand="goDoCommand('cmd_expandAllThreads')" disabled="true"/>
   <command id="cmd_collapseAllThreads" oncommand="goDoCommand('cmd_collapseAllThreads')" disabled="true"/>
   <command id="cmd_viewAllMsgs" oncommand="goDoCommand('cmd_viewAllMsgs')" disabled="true"/>
   <command id="cmd_viewUnreadMsgs" oncommand="goDoCommand('cmd_viewUnreadMsgs')" disabled="true"/>
   <command id="cmd_viewThreadsWithUnread" oncommand="goDoCommand('cmd_viewThreadsWithUnread')" disabled="true"/>
   <command id="cmd_viewWatchedThreadsWithUnread" oncommand="goDoCommand('cmd_viewWatchedThreadsWithUnread')" disabled="true"/>
   <command id="cmd_viewIgnoredThreads" oncommand="goDoCommand('cmd_viewIgnoredThreads')" disabled="true"/>
   <commandset id="viewZoomCommands">
     <command id="cmd_textZoomReduce" oncommand="ZoomManager.reduce();"/>
     <command id="cmd_textZoomEnlarge" oncommand="ZoomManager.enlarge();"/>
     <command id="cmd_textZoomReset" oncommand="ZoomManager.reset();"/>
   </commandset>
</commandset>

<commandset id="mailEditMenuItems"
            commandupdater="true"
            events="create-menu-edit"
            oncommandupdate="goUpdateMailMenuItems(this)">

  <command id="cmd_undo"
         valueDeleteMsg="&undoDeleteMsgCmd.label;"
         valueMoveMsg="&undoMoveMsgCmd.label;"
         valueCopyMsg="&undoCopyMsgCmd.label;"
         valueDefault="&undoDefaultCmd.label;"/>
  <command id="cmd_redo"
         valueDeleteMsg="&redoDeleteMsgCmd.label;"
         valueMoveMsg="&redoMoveMsgCmd.label;"
         valueCopyMsg="&redoCopyMsgCmd.label;"
         valueDefault="&redoDefaultCmd.label;"/>
  <command id="cmd_cut"/>
  <command id="cmd_copy"/>
  <command id="cmd_paste"/>
  <command id="cmd_delete"
         valueFolder="&deleteFolderCmd.label;"
         valueFolderAccessKey="&deleteFolderCmd.accesskey;"
         valueNewsgroup="&unsubscribeNewsgroupCmd.label;"
         valueNewsgroupAccessKey="&unsubscribeNewsgroupCmd.accesskey;"
         valueMessage="&deleteMsgCmd.label;"
         valueMessageAccessKey="&deleteMsgCmd.accesskey;"
         valueIMAPDeletedMessage="&undeleteMsgCmd.label;"
         valueIMAPDeletedMessageAccessKey="&undeleteMsgCmd.accesskey;"
         valueNewsMessage="&cancelNewsMsgCmd.label;"
         valueNewsMessageAccessKey="&cancelNewsMsgCmd.accesskey;"
         valueMessages="&deleteMsgsCmd.label;"
         valueMessagesAccessKey="&deleteMsgsCmd.accesskey;"
         valueIMAPDeletedMessages="&undeleteMsgsCmd.label;"
         valueIMAPDeletedMessagesAccessKey="&undeleteMsgsCmd.accesskey;"
         valueNewsMessages="&cancelNewsMsgsCmd.label;"
         valueNewsMessagesAccessKey="&cancelNewsMsgsCmd.accesskey;"/>
  <command id="cmd_selectAll"/>
  <command id="cmd_selectThread" oncommand="goDoCommand('cmd_selectThread')"/>
  <command id="cmd_selectFlagged" oncommand="goDoCommand('cmd_selectFlagged')"/>
  <command id="cmd_properties" oncommand="goDoCommand('cmd_properties')"
         valueNewsgroup="&folderPropsNewsgroupCmd.label;"
         valueFolder="&folderPropsFolderCmd.label;"
         valueGeneric="&folderPropsCmd.label;"/>
  <command id="cmd_find" oncommand="goDoCommand('cmd_find')" disabled="true"/>
  <command id="cmd_findAgain" oncommand="goDoCommand('cmd_findAgain')" disabled="true"/>
  <command id="cmd_findPrevious"  oncommand="goDoCommand('cmd_findPrevious')"  disabled="true"/>
  <command id="cmd_stop" oncommand="MsgStop();"/>
</commandset>

<commandset id="mailEditContextMenuItems">
  <command id="cmd_copyLink"/>
  <command id="cmd_copyImageLocation"/>
  <command id="cmd_copyImageContents"/>
</commandset>

<commandset id="mailGoMenuItems"
            commandupdater="true"
            events="create-menu-go"
            oncommandupdate="goUpdateMailMenuItems(this)">

  <command id="cmd_nextMsg" oncommand="goDoCommand('cmd_nextMsg')" disabled="true"/>
  <command id="cmd_nextUnreadMsg" oncommand="goDoCommand('cmd_nextUnreadMsg')" disabled="true"/>
  <command id="cmd_nextFlaggedMsg" oncommand="goDoCommand('cmd_nextFlaggedMsg')" disabled="true"/>
  <command id="cmd_nextUnreadThread" oncommand="goDoCommand('cmd_nextUnreadThread')" disabled="true"/>
  <command id="cmd_previousMsg" oncommand="goDoCommand('cmd_previousMsg')" disabled="true"/>
  <command id="cmd_previousUnreadMsg" oncommand="goDoCommand('cmd_previousUnreadMsg')" disabled="true"/>
  <command id="cmd_previousFlaggedMsg" oncommand="goDoCommand('cmd_previousFlaggedMsg')" disabled="true"/>
  <command id="cmd_goStartPage" oncommand="goDoCommand('cmd_goStartPage');"/>
  <command id="cmd_goForward" oncommand="goDoCommand('cmd_goForward')" disabled="true"/>
  <command id="cmd_goBack" oncommand="goDoCommand('cmd_goBack')" disabled="true"/>
</commandset>

<commandset id="mailMessageMenuItems"
            commandupdater="true"
            events="create-menu-message"
            oncommandupdate="goUpdateMailMenuItems(this)">
  <command id="cmd_reply" oncommand="goDoCommand('cmd_reply')"/>
  <command id="cmd_replySender" oncommand="goDoCommand('cmd_replySender')"/>
  <command id="cmd_replyGroup" oncommand="goDoCommand('cmd_replyGroup')"/>
  <command id="cmd_replyall" oncommand="goDoCommand('cmd_replyall')"/>
  <command id="cmd_forward" oncommand="goDoCommand('cmd_forward')"/>
  <command id="cmd_forwardInline" oncommand="goDoCommand('cmd_forwardInline')"/>
  <command id="cmd_forwardAttachment" oncommand="goDoCommand('cmd_forwardAttachment')"/>
  <command id="cmd_editAsNew" oncommand="goDoCommand('cmd_editAsNew')"/>
  <command id="cmd_openMessage" oncommand="goDoCommand('cmd_openMessage')"/>
  <command id="cmd_moveToFolderAgain" oncommand="goDoCommand('cmd_moveToFolderAgain')"/>
  <command id="cmd_createFilterFromMenu" oncommand="goDoCommand('cmd_createFilterFromMenu')"/>
  <command id="cmd_killThread" oncommand="goDoCommand('cmd_killThread')"/>
  <command id="cmd_killSubthread" oncommand="goDoCommand('cmd_killSubthread')"/>
  <command id="cmd_watchThread" oncommand="goDoCommand('cmd_watchThread')"/>
</commandset>

<commandset id="mailToolbarItems"
            commandupdater="true"
            events="mail-toolbar"
            oncommandupdate="goUpdateMailMenuItems(this)">

  <command id="button_reply"/>
  <command id="button_replyall"/>
  <command id="button_forward"/>
  <command id="button_delete"/>
  <command id="button_mark"/>
  <command id="cmd_tag"/>
  <command id="button_getNewMessages"/>
  <command id="button_print"/>
  <command id="button_next"/>
  <command id="button_goBack"/>
  <command id="button_goForward"/>
  <command id="button_file"/>
  <command id="cmd_delete"/>
  <command id="button_junk"/>
  <command id="button_compact"/>
</commandset>

<commandset id="mailGetMsgMenuItems"
            commandupdater="true"
            events="create-menu-getMsgToolbar,create-menu-file"
            oncommandupdate="goUpdateMailMenuItems(this)">

    <command id="cmd_getMsgsForAuthAccounts"
             oncommand="goDoCommand('cmd_getMsgsForAuthAccounts'); event.stopPropagation()"
             disabled="true"/>
</commandset>

<commandset id="mailMarkMenuItems"
              commandupdater="true"
              events="create-menu-mark"
              oncommandupdate="goUpdateMailMenuItems(this)">

    <command id="cmd_markAsRead" oncommand="goDoCommand('cmd_markAsRead'); event.stopPropagation()" disabled="true"/>
    <command id="cmd_markAllRead" oncommand="goDoCommand('cmd_markAllRead'); event.stopPropagation()" disabled="true"/>
    <command id="cmd_markThreadAsRead" oncommand="goDoCommand('cmd_markThreadAsRead'); event.stopPropagation()" disabled="true"/>
    <command id="cmd_markReadByDate" oncommand="goDoCommand('cmd_markReadByDate');" disabled="true"/>
    <command id="cmd_markAsFlagged" oncommand="goDoCommand('cmd_markAsFlagged'); event.stopPropagation()" disabled="true"/>
    <command id="cmd_markAsJunk" oncommand="goDoCommand('cmd_markAsJunk'); event.stopPropagation()" disabled="true"/>
    <command id="cmd_markAsNotJunk" oncommand="goDoCommand('cmd_markAsNotJunk'); event.stopPropagation()" disabled="true"/>
    <command id="cmd_recalculateJunkScore" oncommand="goDoCommand('cmd_recalculateJunkScore');" disabled="true"/>
</commandset>

<commandset id="mailToolsMenuItems"
              commandupdater="true"
              events="create-menu-tasks"
              oncommandupdate="goUpdateMailMenuItems(this)">
  <command id="cmd_applyFilters" oncommand="goDoCommand('cmd_applyFilters');" disabled="true"/>
  <command id="cmd_runJunkControls" oncommand="goDoCommand('cmd_runJunkControls');" disabled="true"/>
  <command id="cmd_deleteJunk" oncommand="goDoCommand('cmd_deleteJunk');" disabled="true"/>
  <command id="cmd_search" oncommand="goDoCommand('cmd_search')"/>
</commandset>

#ifdef XP_MACOSX
<commandset id="macWindowMenuItems">
  <!-- Mac Window menu -->
  <command id="minimizeWindow" label="&minimizeWindow.label;" oncommand="window.minimize();"/>
  <command id="zoomWindow" label="&zoomWindow.label;" oncommand="zoomWindow();"/>
  <command id="Tasks:Mail" oncommand="toMessengerWindow();"/>
  <command id="Tasks:AddressBook" oncommand="toAddressBook();"/>
</commandset>
#endif

<keyset id="mailKeys">
  <key id="space" key=" " modifiers="shift any" oncommand="SpaceHit(event);"/>

  <!-- File Menu -->
  <key id="key_close"/>
#ifndef XP_MACOSX
  <key id="key_renameFolder" keycode="&renameFolder.key;" oncommand="goDoCommand('cmd_renameFolder')"/>
#endif
  <key id="key_quit"/>
  <!-- Edit Menu -->
  <key id="key_undo"/>
  <key id="key_redo"/>
  <key id="key_cut"/>
  <key id="key_copy"/>
  <key id="key_paste"/>
  <key id="key_delete" oncommand="goDoCommand('cmd_delete');" shift="false"/>
#ifdef XP_MACOSX
  <key id="key_delete2" oncommand="goDoCommand('cmd_delete');" shift="false"/>
  <key id="cmd_shiftDelete" keycode="VK_BACK" xulkey="false" oncommand="goDoCommand('cmd_shiftDelete');" modifiers="shift"/>
  <key id="cmd_shiftDelete2" keycode="VK_DELETE" xulkey="false" oncommand="goDoCommand('cmd_shiftDelete');" modifiers="shift"/>
#else
  <key id="cmd_shiftDelete" keycode="VK_DELETE" xulkey="false" oncommand="goDoCommand('cmd_shiftDelete');" modifiers="shift"/>
#endif
  <key id="key_selectAll"/>
  <key id="key_selectThread" key="&selectThreadCmd.key;"             oncommand="goDoCommand('cmd_selectThread');" modifiers="accel, shift"/>

  <key id="key_toggleRead" key="&markAsReadCmd.key;"                 oncommand="goDoCommand('cmd_markAsRead');"/>
  <key id="key_toggleFlagged" key="&markStarredCmd.key;"             oncommand="goDoCommand('cmd_markAsFlagged');"/>
  <key id="key_markJunk" key="&markAsJunkCmd.key;"                   oncommand="goDoCommand('cmd_markAsJunk');"/>
  <key id="key_markNotJunk" key="&markAsNotJunkCmd.key;"             oncommand="goDoCommand('cmd_markAsNotJunk');"
       modifiers="shift"/>

  <key id="key_groupBySort" key="&groupBySortCmd.key;" oncommand="MsgGroupBySort();"/>

#ifdef MOZ_WIDGET_GTK2
  <key id="key_markAllRead" key="&markAllReadCmd.key;"               oncommand="goDoCommand('cmd_markAllRead');" modifiers="shift"/>
#else
  <key id="key_markAllRead" key="&markAllReadCmd.key;"               oncommand="goDoCommand('cmd_markAllRead');" modifiers="accel, shift"/>
#endif

  <key id="key_markThreadAsRead" key="&markThreadAsReadCmd.key;"     oncommand="goDoCommand('cmd_markThreadAsRead')"/>
  <key id="key_markReadByDate" key="&markReadByDateCmd.key;"         oncommand="goDoCommand('cmd_markReadByDate')"/>
  <key id="key_nextMsg" key="&nextMsgCmd.key;"                       oncommand="goDoCommand('cmd_nextMsg')"/>
  <key id="key_nextUnreadMsg" key="&nextUnreadMsgCmd.key;"           oncommand="goDoCommand('cmd_nextUnreadMsg')"/>
  <key id="key_expandAllThreads" key="&expandAllThreadsCmd.key;"     oncommand="goDoCommand('cmd_expandAllThreads')"/>
  <key key="&expandAllThreadsCmd.key;" modifiers="shift"             oncommand="goDoCommand('cmd_expandAllThreads')"/>
  <key id="key_collapseAllThreads" key="&collapseAllThreadsCmd.key;" oncommand="goDoCommand('cmd_collapseAllThreads')"/>
  <key key="&collapseAllThreadsCmd.key;" modifiers="shift"           oncommand="goDoCommand('cmd_collapseAllThreads')"/>
  <key id="key_nextUnreadThread" key="&nextUnreadThreadCmd.key;"     oncommand="goDoCommand('cmd_nextUnreadThread')"/>
  <key id="key_previousMsg" key="&prevMsgCmd.key;"                   oncommand="goDoCommand('cmd_previousMsg')"/>
  <key id="key_previousUnreadMsg" key="&prevUnreadMsgCmd.key;"       oncommand="goDoCommand('cmd_previousUnreadMsg')"/>
  <key id="key_goForward" key="&goForwardCmd.commandKey;"            oncommand="goDoCommand('cmd_goForward')"/>
  <key id="key_goBack" key="&goBackCmd.commandKey;"                  oncommand="goDoCommand('cmd_goBack')"/>
  <key id="key_reply" key="&replyMsgCmd.key;"                        oncommand="goDoCommand('cmd_reply')" modifiers="accel"/>
  <key id="key_replyall" key="&replyToAllMsgCmd.key;"                oncommand="goDoCommand('cmd_replyall')" modifiers="accel, shift"/>
  <key id="key_forward" key="&forwardMsgCmd.key;"                    oncommand="goDoCommand('cmd_forward')" modifiers="accel"/>
  <key id="key_editAsNew" key="&editMsgAsNewCmd.key;"                oncommand="goDoCommand('cmd_editAsNew')" modifiers="accel"/>
  <key id="key_watchThread" key="&watchThreadMenu.key;"              oncommand="goDoCommand('cmd_watchThread')" />
  <key id="key_killThread" key="&killThreadMenu.key;"                oncommand="goDoCommand('cmd_killThread')" />
  <key id="key_killSubthread" key="&killSubthreadMenu.key;"          oncommand="goDoCommand('cmd_killSubthread')" modifiers="shift" />
  <key id="key_openMessage" key="&openMessageWindowCmd.key;"         oncommand="goDoCommand('cmd_openMessage')" modifiers="accel"/>
#ifdef XP_MACOSX
  <key id="key_moveToFolderAgain" key="&moveToFolderAgainCmd.key;"   oncommand="goDoCommand('cmd_moveToFolderAgain')" modifiers="alt, accel"/>
#else
  <key id="key_moveToFolderAgain" key="&moveToFolderAgainCmd.key;"   oncommand="goDoCommand('cmd_moveToFolderAgain')" modifiers="accel, shift"/>
#endif
  <key id="key_print" key="&printCmd.key;"                           oncommand="goDoCommand('cmd_print')" modifiers="accel"/>
  <key id="key_saveAsFile" key="&saveAsFileCmd.key;"                 oncommand="goDoCommand('cmd_saveAsFile')" modifiers="accel"/>
  <key id="key_viewPageSource" key="&pageSourceCmd.key;"             oncommand="goDoCommand('cmd_viewPageSource')" modifiers="accel"/>
  <key id="key_getNewMessages" key="&getNewMsgCmd.key;"              oncommand="goDoCommand('cmd_getNewMessages')" modifiers="accel"/>
#ifdef XP_WIN
  <key id="key_getNewMessages2" keycode="VK_F5" oncommand="goDoCommand('cmd_getNewMessages')"/>
#elifdef XP_UNIX
  <key id="key_getNewMessages2" keycode="VK_F9" oncommand="goDoCommand('cmd_getNewMessages')"/>
#endif
  <key id="key_getAllNewMessages"
       key="&getAllNewMsgCmd.key;"
       oncommand="goDoCommand('cmd_getMsgsForAuthAccounts');"
       modifiers="accel, shift"/>
  <key id="key_find" key="&findCmd.key;"  oncommand="goDoCommand('cmd_find')" modifiers="accel"/>
  <key id="key_findAgain" key="&findAgainCmd.key;"   oncommand="goDoCommand('cmd_findAgain')" modifiers="accel"/>
  <key id="key_findPrev"  key="&findPrevCmd.key;"    oncommand="goDoCommand('cmd_findPrevious')"  modifiers="accel, shift"/>
  <key keycode="&findAgainCmd.key2;"   oncommand="goDoCommand('cmd_findAgain')"/>
  <key keycode="&findPrevCmd.key2;"    oncommand="goDoCommand('cmd_findPrevious')"  modifiers="shift"/>
  <key id="key_quickSearchFocus" key="&quickSearchCmd.key;"  oncommand="QuickSearchFocus()" modifiers="accel"/>
  <key id="key_stop" keycode="VK_ESCAPE" command="cmd_stop"/>

  <keyset id="viewZoomKeys">
    <key id="key_textZoomReduce" key="&textZoomReduceCmd.commandkey;" command="cmd_textZoomReduce"  modifiers="accel"/>
    <key key="&textZoomReduceCmd.commandkey;" command="cmd_textZoomReduce"  modifiers="accel shift"/>
    <key id="key_textZoomEnlarge" key="&textZoomEnlargeCmd.commandkey;" command="cmd_textZoomEnlarge" modifiers="accel"/>
    <key key="&textZoomEnlargeCmd.commandkey;" command="cmd_textZoomEnlarge" modifiers="accel shift"/>
    <key key="&textZoomEnlargeCmd.commandkey2;" command="cmd_textZoomEnlarge" modifiers="accel"/>
    <key key="&textZoomEnlargeCmd.commandkey2;" command="cmd_textZoomEnlarge" modifiers="accel shift"/>
    <key id="key_textZoomReset"   key="&textZoomResetCmd.commandkey;"    command="cmd_textZoomReset"   modifiers="accel"/>
  </keyset>

  <!-- Tab/F6 Keys -->
  <key keycode="VK_TAB" oncommand="SwitchPaneFocus(event);" modifiers="control,shift"/>
  <key keycode="VK_TAB" oncommand="SwitchPaneFocus(event);" modifiers="control"/>
  <key keycode="VK_F6" oncommand="SwitchPaneFocus(event);" modifiers="control,shift"/>
  <key keycode="VK_F6" oncommand="SwitchPaneFocus(event);" modifiers="control"/>
  <key keycode="VK_F6" oncommand="SwitchPaneFocus(event);" modifiers="shift"/>
  <key keycode="VK_F6" oncommand="SwitchPaneFocus(event);"/>

  <!-- View Toggle Keys (F8) -->
  <key id="key_toggleMessagePane" keycode="VK_F8" oncommand="MsgToggleMessagePane();" disabled="true"/>

  <!-- Tag Keys -->
  <key id="key_tag0" key="&tagCmd0.key;" oncommand="RemoveAllMessageTags();"/>
  <key id="key_tag1" key="&tagCmd1.key;" oncommand="ToggleMessageTagKey(1);"/>
  <key id="key_tag2" key="&tagCmd2.key;" oncommand="ToggleMessageTagKey(2);"/>
  <key id="key_tag3" key="&tagCmd3.key;" oncommand="ToggleMessageTagKey(3);"/>
  <key id="key_tag4" key="&tagCmd4.key;" oncommand="ToggleMessageTagKey(4);"/>
  <key id="key_tag5" key="&tagCmd5.key;" oncommand="ToggleMessageTagKey(5);"/>
  <key id="key_tag6" key="&tagCmd6.key;" oncommand="ToggleMessageTagKey(6);"/>
  <key id="key_tag7" key="&tagCmd7.key;" oncommand="ToggleMessageTagKey(7);"/>
  <key id="key_tag8" key="&tagCmd8.key;" oncommand="ToggleMessageTagKey(8);"/>
  <key id="key_tag9" key="&tagCmd9.key;" oncommand="ToggleMessageTagKey(9);"/>

  <!-- Tools Keys -->
#ifdef MOZ_WIDGET_GTK2
  <key id="key_searchMail" key="&searchMailCmd.key;" oncommand="goDoCommand('cmd_search')" modifiers="shift"/>
#else
  <key id="key_searchMail" key="&searchMailCmd.key;" oncommand="goDoCommand('cmd_search')" modifiers="accel, shift"/>
#endif
  <key id="key_mail"  key="&messengerCmd.commandkey;" oncommand="toMessengerWindow();" modifiers="accel"/>
  <key id="key_addressbook"  key="&addressBookCmd.commandkey;" oncommand="toAddressBook();" modifiers="accel"/>
#ifdef XP_MACOSX
  <!-- Mac Window menu keys -->
  <key id="key_minimizeWindow" command="minimizeWindow" key="&minimizeWindow.key;" modifiers="accel"/>
    <!-- the following 3 keys are used in the application menu on Mac OS X Cocoa widgets -->
  <key id="key_preferencesCmdMac" key="&preferencesCmdMac.commandkey;" modifiers="&preferencesCmdMac.modifiers;"/>
  <key id="key_hideThisAppCmdMac" key="&hideThisAppCmdMac.commandkey;" modifiers="&hideThisAppCmdMac.modifiers;"/>
  <key id="key_hideOtherAppsCmdMac" key="&hideOtherAppsCmdMac.commandkey;" modifiers="&hideOtherAppsCmdMac.modifiers;"/>
#endif

  <!-- Common keys for the base menu overlay -->
  <keyset id="baseMenuKeyset"/>
</keyset>

  <popup id="threadPaneContext"
         onpopupshowing="return fillThreadPaneContextMenu();"
         onpopuphiding="if (event.target == this) threadPaneOnPopupHiding();">
    <menuitem id="threadPaneContext-openNewWindow"
              label="&contextOpenNewWindow.label;"
              accesskey="&contextOpenNewWindow.accesskey;"
              oncommand="MsgOpenNewWindowForMessage();"/>
    <menuitem id="threadPaneContet-openNewTab"
              label="&contextOpenNewTab.label;"
              accesskey="&contextOpenNewTab.accesskey;"
              oncommand="MsgOpenNewTabForMessage();"/>
    <menuseparator id="threadPaneContext-sep-open"/>
    <menuitem id="threadPaneContext-replySender"
              label="&contextReplySender.label;"
              accesskey="&contextReplySender.accesskey;"
              oncommand="MsgReplySender(event);"/>
    <menuitem id="threadPaneContext-replyNewsgroup"
              label="&contextReplyNewsgroup.label;"
              accesskey="&contextReplyNewsgroup.accesskey;"
              oncommand="MsgReplyGroup(event);"/>
    <menuitem id="threadPaneContext-replyAll"
              label="&contextReplyAll.label;"
              accesskey="&contextReplyAll.accesskey;"
              oncommand="MsgReplyToAllMessage(event);"/>
    <menuitem id="threadPaneContext-forward"
              label="&contextForward.label;"
              accesskey="&contextForward.accesskey;"
              oncommand="MsgForwardMessage(event);"/>
    <menuitem id="threadPaneContext-forwardAsAttachment"
              label="&contextForwardAsAttachment.label;"
              accesskey="&contextForwardAsAttachment.accesskey;"
              oncommand="MsgForwardAsAttachment(event);"/>
    <menuitem id="threadPaneContext-editAsNew"
              label="&contextEditAsNew.label;"
              accesskey="&contextEditAsNew.accesskey;"
              oncommand="MsgEditMessageAsNew();"/>
    <menuseparator id="threadPaneContext-sep-reply"/>
    <menuitem id="threadPaneContext-copyMessageUrl"
              label="&copyMessageLocation.label;"
              accesskey="&copyMessageLocation.accesskey;"
              oncommand="CopyMessageUrl()"/>
    <menu id="threadPaneContext-moveMenu"
          label="&contextMoveMsgMenu.label;"
          accesskey="&contextMoveMsgMenu.accesskey;"
          oncommand="MsgMoveMessage(event.target._folder)">
      <menupopup id="threadPaneContext-fileHereMenu"
                 type="folder"
                 mode="filing"
                 showFileHereLabel="true"
                 showRecent="true"
                 fileHereLabel="&fileHereMenu.label;"
                 fileHereAccessKey="&fileHereMenu.accesskey;"
                 recentLabel="&contextMoveCopyMsgRecentMenu.label;"
                 recentAccessKey="&contextMoveCopyMsgRecentMenu.accesskey;"/>
    </menu>
    <menu id="threadPaneContext-copyMenu"
          label="&contextCopyMsgMenu.label;"
          accesskey="&contextCopyMsgMenu.accesskey;"
          oncommand="MsgCopyMessage(event.target._folder)">
      <menupopup id="threadPaneContext-copyHereMenu"
                 type="folder"
                 mode="filing"
                 showFileHereLabel="true"
                 showRecent="true"
                 fileHereLabel="&copyHereMenu.label;"
                 fileHereAccessKey="&copyHereMenu.accesskey;"
                 recentLabel="&contextMoveCopyMsgRecentMenu.label;"
                 recentAccessKey="&contextMoveCopyMsgRecentMenu.accesskey;"/>
    </menu>
    <menuitem id="threadPaneContext-moveToFolderAgain"
              command="cmd_moveToFolderAgain"
              label="&moveToFolderAgain.label;"
              accesskey="&moveToFolderAgain.accesskey;"/>
    <menu id="threadPaneContext-tags" label="&tagMenu.label;" accesskey="&tagMenu.accesskey;">
      <menupopup id="threadPaneContext-tagpopup"
                 onpopupshowing="InitMessageTags(this)">
        <menuitem id="threadPaneContext-tagRemoveAll"
                  oncommand="RemoveAllMessageTags();"/>
        <menuseparator id="threadPaneContext-sep-afterTagRemoveAll"/>
        <menuseparator id="threadPaneContext-sep-beforeAddNewTag"/>
        <menuitem id="addNewTag"
                  label="&addNewTag.label;"
                  accesskey="&addNewTag.accesskey;"
                  oncommand="AddTag();"/>
      </menupopup>
    </menu>
    <menu id="threadPaneContext-mark"
          label="&markMenu.label;"
          accesskey="&markMenu.accesskey;">
      <menupopup id="threadPaneContext-markPopup"
                 onpopupshowing="InitMessageMark()">
        <menuitem id="threadPaneContext-markRead"
                  type="checkbox"
                  label="&markAsReadCmd.label;"
                  accesskey="&markAsReadCmd.accesskey;"
                  command="cmd_markAsRead"/>
        <menuitem id="threadPaneContext-markThreadAsRead"
                  label="&markThreadAsReadCmd.label;"
                  accesskey="&markThreadAsReadCmd.accesskey;"
                  command="cmd_markThreadAsRead"/>
        <menuitem id="threadPaneContext-markReadByDate"
                  label="&markReadByDateCmd.label;"
                  accesskey="&markReadByDateCmd.accesskey;"
                  command="cmd_markReadByDate"/>
        <menuitem id="threadPaneContext-markAllRead"
                  label="&markAllReadCmd.label;"
                  accesskey="&markAllReadCmd.accesskey;"
                  command="cmd_markAllRead"/>
        <menuseparator id="threadPaneContext-sep-afterMarkAllRead"/>
        <menuitem id="threadPaneContext-markFlagged"
                  type="checkbox"
                  label="&markStarredCmd.label;"
                  accesskey="&markStarredCmd.accesskey;"
                  command="cmd_markAsFlagged"/>
        <menuseparator id="threadPaneContext-sep-afterMarkFlagged"/>
        <menuitem id="threadPaneContext-markAsJunk"
                  label="&markAsJunkCmd.label;"
                  accesskey="&markAsJunkCmd.accesskey;"
                  command="cmd_markAsJunk"/>
        <menuitem id="threadPaneContext-markAsNotJunk"
                  label="&markAsNotJunkCmd.label;"
                  accesskey="&markAsNotJunkCmd.accesskey;"
                  command="cmd_markAsNotJunk"/>
        <menuitem id="threadPaneContext-recalculateJunkScore"
                  label="&recalculateJunkScoreCmd.label;"
                  accesskey="&recalculateJunkScoreCmd.accesskey;"
                  command="cmd_recalculateJunkScore"/>
      </menupopup>
    </menu>
    <menuseparator id="threadPaneContext-sep-afterMarkMenu"/>
    <menuitem id="threadPaneContext-saveAs"
              label="&contextSaveAs.label;"
              accesskey="&contextSaveAs.accesskey;"
              oncommand="MsgSaveAsFile();"/>
    <menuitem id="threadPaneContext-printpreview"
              label="&contextPrintPreview.label;"
              accesskey="&contextPrintPreview.accesskey;"
              oncommand="PrintEnginePrintPreview();"/>
    <menuitem id="threadPaneContext-print"
              label="&contextPrint.label;"
              accesskey="&contextPrint.accesskey;"
              oncommand="PrintEnginePrint();"/>
    <menuitem id="threadPaneContext-delete"
              command="cmd_delete"/>
    <menuitem id="downloadSelected"
              label="&downloadSelectedCmd.label;"
              accesskey="&downloadSelectedCmd.accesskey;"
              command="cmd_downloadSelected"/>
  </popup>

  <popup id="folderPaneContext"
         onpopupshowing="return fillFolderPaneContextMenu();"
         onpopuphiding="if (event.target == this) folderPaneOnPopupHiding();">
    <menuitem id="folderPaneContext-getMessages"
              label="&folderContextGetMessages.label;"
              accesskey="&folderContextGetMessages.accesskey;"
              oncommand="MsgGetMessage();"/>
    <menuitem id="folderPaneContext-openNewWindow"
              label="&folderContextOpenNewWindow.label;"
              accesskey="&folderContextOpenNewWindow.accesskey;"
              oncommand="MsgOpenNewWindowForFolder(null,-1);"/>
    <menuitem id="folderPaneContext-openNewTab"
              label="&folderContextOpenNewTab.label;"
              accesskey="&folderContextOpenNewTab.accesskey;"
              oncommand="MsgOpenNewTabForFolder(null,-1);"/>
    <menuitem id="folderPaneContext-searchMessages"
              label="&folderContextSearchMessages.label;"
              accesskey="&folderContextSearchMessages.accesskey;"
              command="cmd_search"/>
    <menuitem id="folderPaneContext-subscribe"
              label="&folderContextSubscribe.label;"
              accesskey="&folderContextSubscribe.accesskey;"
              oncommand="MsgSubscribe();"/>
    <menuitem id="folderPaneContext-newsUnsubscribe"
              label="&folderContextUnsubscribe.label;"
              accesskey="&folderContextUnsubscribe.accesskey;"
              oncommand="MsgUnsubscribe();"/>
    <menuseparator id="folderPaneContext-sep1"/>
    <menuitem id="folderPaneContext-new"
              label="&folderContextNew.label;"
              accesskey="&folderContextNew.accesskey;"
              oncommand="MsgNewFolder(NewFolder);"/>
    <menuitem id="folderPaneContext-remove"
              label="&folderContextRemove.label;"
              accesskey="&folderContextRemove.accesskey;"
              oncommand="MsgDeleteFolder();"/>
    <menuitem id="folderPaneContext-rename"
              label="&folderContextRename.label;"
              accesskey="&folderContextRename.accesskey;"
              oncommand="MsgRenameFolder();"/>
    <menuseparator id="folderPaneContext-sep2"/>
    <menuitem id="folderPaneContext-compact"
              label="&folderContextCompact.label;"
              accesskey="&folderContextCompact.accesskey;"
              oncommand="MsgCompactFolder(false);"/>
    <menuitem id="folderPaneContext-markMailFolderAllRead"
              label="&folderContextMarkMailFolderRead.label;"
              accesskey="&folderContextMarkMailFolderRead.accesskey;"
              oncommand="MsgMarkAllRead();"/>
    <menuitem id="folderPaneContext-markNewsgroupAllRead"
              label="&folderContextMarkNewsgroupRead.label;"
              accesskey="&folderContextMarkNewsgroupRead.accesskey;"
              oncommand="MsgMarkAllRead();"/>
    <menuitem id="folderPaneContext-emptyTrash"
              label="&folderContextEmptyTrash.label;"
              accesskey="&folderContextEmptyTrash.accesskey;"
              oncommand="MsgEmptyTrash();"/>
    <menuitem id="folderPaneContext-emptyJunk"
              label="&folderContextEmptyJunk.label;"
              accesskey="&folderContextEmptyJunk.accesskey;"
              oncommand="deleteAllInFolder('emptyJunk');"/>
    <menuitem id="folderPaneContext-sendUnsentMessages"
              label="&folderContextSendUnsentMessages.label;"
              accesskey="&folderContextSendUnsentMessages.accesskey;"
              oncommand="goDoCommand('cmd_sendUnsentMsgs')"/>
    <menuseparator id="folderPaneContext-sep3"/>
    <menuitem id="folderPaneContext-favoriteFolder"
              type="checkbox"
              label="&folderContextFavoriteFolder.label;"
              accesskey="&folderContextFavoriteFolder.accesskey;"
              check="false"
              oncommand="ToggleFavoriteFolderFlag();"/>
    <menuitem id="folderPaneContext-properties"
              label="&folderContextProperties.label;"
              accesskey="&folderContextProperties.accesskey;"
              oncommand="MsgFolderProperties();"/>
  </popup>

  <popup id="messagePaneContext"
          onpopupshowing="if (event.target != this) return true; gContextMenu = new nsContextMenu(this); return fillMessagePaneContextMenu();"
          onpopuphiding="if (event.target == this) gContextMenu = null;">
    <menuseparator id="messagePaneContext-sep-link"/>
    <menuitem id="messagePaneContext-selectall"
              label="&selectAllCmd.label;"
              accesskey="&selectAllCmd.accesskey;"
              command="cmd_selectAll"/>
    <menuitem id="messagePaneContext-copy"
              label="&copyCmd.label;"
              accesskey="&copyCmd.accesskey;"
              command="cmd_copy"/>
    <menuseparator id="messagePaneContext-sep-open"/>
    <menuitem id="messagePaneContext-replySender"
              label="&contextReplySender.label;"
              accesskey="&contextReplySender.accesskey;"
              oncommand="MsgReplySender(event);"/>
    <menuitem id="messagePaneContext-replyNewsgroup"
              label="&contextReplyNewsgroup.label;"
              accesskey="&contextReplyNewsgroup.accesskey;"
              oncommand="MsgReplyMessage(event);"/>
    <menuitem id="messagePaneContext-replyAll"
              label="&contextReplyAll.label;"
              accesskey="&contextReplyAll.accesskey;"
              oncommand="MsgReplyToAllMessage(event);"/>
    <menuitem id="messagePaneContext-forward"
              label="&contextForward.label;"
              accesskey="&contextForward.accesskey;"
              oncommand="MsgForwardMessage(event);"/>
    <menuitem id="messagePaneContext-editAsNew"
              label="&contextEditAsNew.label;"
              accesskey="&contextEditAsNew.accesskey;"
              oncommand="MsgEditMessageAsNew();"/>
    <menuseparator id="messagePaneContext-sep-reply"/>
    <menuitem id="messagePaneContext-copyMessageUrl"
              label="&copyMessageLocation.label;"
              accesskey="&copyMessageLocation.accesskey;"
              oncommand="CopyMessageUrl()"/>
    <menu id="messagePaneContext-moveMenu"
          label="&contextMoveMsgMenu.label;"
          accesskey="&contextMoveMsgMenu.accesskey;"
          oncommand="MsgMoveMessage(event.target._folder)">
      <menupopup id="messagePaneContext-fileHereMenu"
                 type="folder"
                 mode="filing"
                 showFileHereLabel="true"
                 showRecent="true"
                 fileHereLabel="&fileHereMenu.label;"
                 fileHereAccessKey="&fileHereMenu.accesskey;"
                 recentLabel="&contextMoveCopyMsgRecentMenu.label;"
                 recentAccessKey="&contextMoveCopyMsgRecentMenu.accesskey;"/>
    </menu>
    <menu id="messagePaneContext-copyMenu"
          label="&contextCopyMsgMenu.label;"
          accesskey="&contextCopyMsgMenu.accesskey;"
          oncommand="MsgCopyMessage(event.target._folder)">
      <menupopup id="messagePaneContext-copyHereMenu"
                 type="folder"
                 mode="filing"
                 showFileHereLabel="true"
                 showRecent="true"
                 fileHereLabel="&copyHereMenu.label;"
                 fileHereAccessKey="&copyHereMenu.accesskey;"
                 recentLabel="&contextMoveCopyMsgRecentMenu.label;"
                 recentAccessKey="&contextMoveCopyMsgRecentMenu.accesskey;"/>
    </menu>
    <menuitem id="messagePaneContext-moveToFolderAgain" command="cmd_moveToFolderAgain"
              label="&moveToFolderAgain.label;" accesskey="&moveToFolderAgain.accesskey;"/>
    <menuseparator id="messagePaneContext-sep-tags-1"/>
    <menu id="messagePaneContext-tags"
          label="&tagMenu.label;"
          accesskey="&tagMenu.accesskey;">
      <menupopup id="messagePaneContext-tagpopup"
                 onpopupshowing="InitMessageTags(this)">
        <menuitem id="messagePaneContext-tagRemoveAll"
                  oncommand="RemoveAllMessageTags();"/>
        <menuseparator id="messagePaneContext-sep-afterTagRemoveAll"/>
        <menuseparator id="messagePaneContext-sep-beforeAddNewTag"/>
        <menuitem id="addNewTag"
                  label="&addNewTag.label;"
                  accesskey="&addNewTag.accesskey;"
                  oncommand="AddTag();"/>
      </menupopup>
    </menu>
    <menu id="messagePaneContext-mark"
          label="&markMenu.label;"
          accesskey="&markMenu.accesskey;">
      <menupopup id="messagePaneContext-markPopup"
                 onpopupshowing="InitMessageMark()">
        <menuitem id="messagePaneContext-markRead"
                  type="checkbox"
                  label="&markAsReadCmd.label;"
                  accesskey="&markAsReadCmd.accesskey;"
                  command="cmd_markAsRead"/>
        <menuitem id="messagePaneContext-markThreadAsRead"
                  label="&markThreadAsReadCmd.label;"
                  accesskey="&markThreadAsReadCmd.accesskey;"
                  command="cmd_markThreadAsRead"/>
        <menuitem id="messagePaneContext-markReadByDate"
                  label="&markReadByDateCmd.label;"
                  accesskey="&markReadByDateCmd.accesskey;"
                  command="cmd_markReadByDate"/>
        <menuitem id="messagePaneContext-markAllRead"
                  label="&markAllReadCmd.label;"
                  accesskey="&markAllReadCmd.accesskey;"
                  command="cmd_markAllRead"/>
        <menuseparator id="messagePaneContext-afterMarkAllRead"/>
        <menuitem id="messagePaneContext-markFlagged"
                  type="checkbox"
                  label="&markStarredCmd.label;"
                  accesskey="&markStarredCmd.accesskey;"
                  command="cmd_markAsFlagged"/>
        <menuseparator id="messagePaneContext-sep-afterMarkFlagged"/>
        <menuitem id="messagePaneContext-markAsJunk"
                  label="&markAsJunkCmd.label;"
                  accesskey="&markAsJunkCmd.accesskey;"
                  command="cmd_markAsJunk"/>
        <menuitem id="messagePaneContext-markAsNotJunk"
                  label="&markAsNotJunkCmd.label;"
                  accesskey="&markAsNotJunkCmd.accesskey;"
                  command="cmd_markAsNotJunk"/>
        <menuitem id="messagePaneContext-recalculateJunkScore"
                  label="&recalculateJunkScoreCmd.label;"
                  accesskey="&recalculateJunkScoreCmd.accesskey;"
                  command="cmd_recalculateJunkScore"/>

      </menupopup>
    </menu>
    <menuseparator id="messagePaneContext-sep-saveAs"/>
    <menuitem id="messagePaneContext-saveAs"
              label="&contextSaveAs.label;"
              accesskey="&contextSaveAs.accesskey;"
              oncommand="MsgSaveAsFile();"/>
    <menuitem id="messagePaneContext-printpreview"
              label="&contextPrintPreview.label;"
              accesskey="&contextPrintPreview.accesskey;"
              oncommand="PrintEnginePrintPreview();"/>
    <menuitem id="messagePaneContext-print"
              label="&contextPrint.label;"
              accesskey="&contextPrint.accesskey;"
              oncommand="PrintEnginePrint();"/>
    <menuitem id="messagePaneContext-delete"
              command="cmd_delete"/>
    <menuseparator id="messagePaneContext-sep-edit"/>
    <menuitem id="messagePaneContext-copylink"
              label="&copyLinkCmd.label;"
              accesskey="&copyLinkCmd.accesskey;"
              command="cmd_copyLink"/>
    <menuitem id="messagePaneContext-copyimage"
              label="&copyImageCmd.label;"
              accesskey="&copyImageCmd.accesskey;"
              command="cmd_copyImageLocation"/>
    <menuitem id="messagePaneContext-addemail"
              label="&AddToAddressBook.label;"
              accesskey="&AddToAddressBook.accesskey;"
              oncommand="addEmail();"/>
    <menuitem id="messagePaneContext-composeemailto"
              label="&SendMailTo.label;"
              accesskey="&SendMailTo.accesskey;"
              oncommand="composeEmailTo();"/>
    <menuitem id="messagePaneContext-copyemail"
              label="&copyEmailCmd.label;"
              accesskey="&copyEmailCmd.accesskey;"
              oncommand="gContextMenu.copyEmail();"/>
    <menuseparator id="messagePaneContext-sep-copy"/>
    <menuitem id="messagePaneContext-savelink"
              label="&saveLinkCmd.label;"
              accesskey="&saveLinkCmd.accesskey;"
              oncommand="gContextMenu.saveLink();"/>
    <menuitem id="messagePaneContext-saveimage"
              label="&saveImageCmd.label;"
              accesskey="&saveImageCmd.accesskey;"
              oncommand="gContextMenu.saveImage();"/>
    <menuseparator id="messagePaneContext-sep-reportPhishing"/>
    <menuitem id="messagePaneContext-reportPhishingURL"
              label="&reportPhishingURL.label;"
              accesskey="&reportPhishingURL.accesskey;"
              oncommand="gPhishingDetector.reportPhishingURL(gContextMenu.linkURL);"/>
  </popup>

  <popup id="toolbar-context-menu"
         onpopupshowing="onViewToolbarsPopupShowing(event, 'mail-toolbox');">
    <menuseparator id="customizeMailToolbarMenuSeparator"/>
    <menuitem id="CustomizeMailToolbar"
              command="cmd_CustomizeMailToolbar"
              label="&customizeToolbar.label;"
              accesskey="&customizeToolbar.accesskey;"/>
  </popup>

<toolbox id="mail-toolbox" class="toolbox-top" mode="full">
  <!-- Menu -->
  <toolbar type="menubar" id="mail-toolbar-menubar2" class="chromeclass-menubar" customizable="true"
#ifdef XP_MACOSX
           defaultset="menubar-items"
#else
          defaultset="menubar-items,spring,throbber-box"
#endif
          context="toolbar-context-menu" mode="icons">
    <toolbaritem id="menubar-items" align="center">
      <menubar id="mail-menubar" style="border:0px;padding:0px;margin:0px;-moz-appearance:none">
        <!-- File -->
        <menu id="menu_File">
          <menupopup id="menu_FilePopup" onpopupshowing="file_init();">
          <menu id="menu_New">
            <menupopup id="menu_NewPopup" onpopupshowing="menu_new_init();">
              <menuitem id="newNewMsgCmd" label="&newNewMsgCmd.label;"
                        accesskey="&newNewMsgCmd.accesskey;"
                        key="key_newMessage2"
                        oncommand="MsgNewMessage(null);"/>
              <menuitem id="menu_newFolder" label="&newFolderCmd.label;"
                         oncommand="MsgNewFolder(NewFolder);"
                         accesskey="&newFolderCmd.accesskey;"/>
              <menuitem id="menu_newVirtualFolder" label="&newVirtualFolderCmd.label;"
                         oncommand="MsgVirtualFolderProperties(false);"
                         accesskey="&newVirtualFolderCmd.accesskey;"/>
              <menuitem id="newAccountMenuItem" label="&newAccountCmd.label;"
                         accesskey="&newAccountCmd.accesskey;"
                         oncommand="MsgAccountWizard();"/>
              <menuseparator id="newPopupMenuSeparator"/>
              <menuitem id="menu_newCard"/>
            </menupopup>
          </menu>
          <menuitem id="openMessageFileMenuitem" label="&openMessageFileCmd.label;"
            accesskey="&openMessageFileCmd.accesskey;"
            oncommand="MsgOpenFromFile();"/>
          <menu id="fileAttachmentMenu" label="&openAttachmentCmd.label;" accesskey="&openAttachmentCmd.accesskey;" disabled="true" persist="hidden">
            <menupopup id="attachmentMenuList" onpopupshowing="FillAttachmentListPopup(this);"/>
          </menu>
          <menuitem id="menu_close"/>
          <menuseparator id="fileMenuAfterCloseSeparator"/>
          <menu id="menu_saveAs" label="&saveAsMenu.label;" accesskey="&saveAsMenu.accesskey;">
            <menupopup id="menu_SavePopup">
              <menuitem id="menu_saveAsFile" label="&saveAsFileCmd.label;"
               accesskey="&saveAsFileCmd.accesskey;"
               key="key_saveAsFile"
               command="cmd_saveAsFile"/>
              <menuitem id="menu_saveAsTemplate" label="&saveAsTemplateCmd.label;"
               accesskey="&saveAsTemplateCmd.accesskey;"
               command="cmd_saveAsTemplate"/>
            </menupopup>
          </menu>
          <menuseparator id="fileMenuAfterSaveSeparator"/>
          <menu label="&getNewMsgForCmd.label;" accesskey="&getNewMsgForCmd.accesskey;"
                oncommand="MsgGetMessagesForAccount(event.target._folder)">
            <menupopup type="folder" mode="getMail" id="menu_getAllNewMsgPopup"
                       expandFolders="false">
              <menuitem id="menu_getnewmsgs_all_accounts"
                        label="&getAllNewMsgCmdPopupMenu.label;"
                        accesskey="&getAllNewMsgCmdPopupMenu.accesskey;"
                        key="key_getAllNewMessages"
                        command="cmd_getMsgsForAuthAccounts"/>
              <menuitem id="menu_getnewmsgs_current_account"
                        label="&getNewMsgCurrentAccountCmdPopupMenu.label;"
                        accesskey="&getNewMsgCurrentAccountCmdPopupMenu.accesskey;"
                        key="key_getNewMessages"
                        command="cmd_getNewMessages"/>
              <menuseparator/>
            </menupopup>
          </menu>
          <menuitem id="menu_getnextnmsg" label="&getNextNMsgCmd.label;" accesskey="&getNextNMsgCmd.accesskey;"
                    command="cmd_getNextNMessages"/>
          <menuitem id="menu_sendunsentmsgs" label="&sendUnsentCmd.label;"
                    accesskey="&sendUnsentCmd.accesskey;" command="cmd_sendUnsentMsgs"/>
          <menuitem id="menu_subscribe" label="&subscribeCmd.label;"
                    accesskey="&subscribeCmd.accesskey;" oncommand="MsgSubscribe();"/>
          <menuseparator id="fileMenuAfterSubscribeSeparator"/>
          <menuitem id="menu_renameFolder" label="&renameFolder.label;"
                 accesskey="&renameFolder.accesskey;"
                 key="key_renameFolder"
                 command="cmd_renameFolder"/>
          <menuitem id="menu_compactFolder" label="&compactFolders.label;" accesskey="&compactFolder.accesskey;" command="cmd_compactFolder"/>
          <menuitem id="menu_emptyTrash" label="&emptyTrashCmd.label;"
                 accesskey="&emptyTrashCmd.accesskey;"
                 command="cmd_emptyTrash"/>
          <menuseparator id="trashMenuSeparator"/>
          <menu id="offlineMenuItem" label="&offlineMenu.label;" accesskey="&offlineMenu.accesskey;">
            <menupopup id="menu_OfflinePopup">
              <menuitem id="goOfflineMenuItem" type="checkbox" label="&offlineGoOfflineCmd.label;"
                        accesskey="&offlineGoOfflineCmd.accesskey;" oncommand="MailOfflineMgr.toggleOfflineStatus();"/>
              <menuseparator id="offlineMenuAfterGoSeparator"/>
              <menuitem id="menu_synchronizeOffline"
                        label="&synchronizeOfflineCmd.label;"
                        accesskey="&synchronizeOfflineCmd.accesskey;"
                        command="cmd_synchronizeOffline"/>
              <menuitem id="menu_settingsOffline"
                        label="&settingsOfflineCmd.label;"
                        accesskey="&settingsOfflineCmd.accesskey;"
                        command="cmd_settingsOffline"/>
              <menuseparator id="offlineMenuAfterSettingsSeparator"/>
              <menuitem id="menu_downloadFlagged"
                        label="&downloadStarredCmd.label;"
                        accesskey="&downloadStarredCmd.accesskey;"
                        command="cmd_downloadFlagged"/>
              <menuitem id="menu_downloadSelected"
                        label="&downloadSelectedCmd.label;"
                        accesskey="&downloadSelectedCmd.accesskey;"
                        command="cmd_downloadSelected"/>
            </menupopup>
          </menu>
          <menuseparator id="fileMenuAfterOfflineSeparator"/>
          <menuitem id="printSetupMenuItem" label="&printSetupCmd.label;" accesskey="&printSetupCmd.accesskey;" command="cmd_printSetup"/>
#ifndef XP_MACOSX
          <menuitem id="printPreviewMenuItem" label="&printPreviewCmd.label;" accesskey="&printPreviewCmd.accesskey;" command="cmd_printpreview"/>
#endif
          <menuitem id="printMenuItem" key="key_print" label="&printCmd.label;" accesskey="&printCmd.accesskey;" command="cmd_print"/>
        </menupopup>
      </menu>

    <!-- Edit -->
    <menu id="menu_Edit" oncommand="CommandUpdate_UndoRedo();">
      <menupopup id="menu_EditPopup" onpopupshowing="InitEditMessagesMenu()">
        <menuitem id="menu_undo" label="&undoDefaultCmd.label;" accesskey="&undoDefaultCmd.accesskey;" key="key_undo" command="cmd_undo"/>
        <menuitem id="menu_redo" label="&redoDefaultCmd.label;" accesskey="&redoDefaultCmd.accesskey;" key="key_redo" command="cmd_redo"/>
        <menuseparator id="editMenuAfterRedoSeparator"/>
        <menuitem id="menu_cut"/>
        <menuitem id="menu_copy"/>
        <menuitem id="menu_paste"/>
        <menuitem id="menu_delete" command="cmd_delete"/>
        <menuseparator id="editMenuAfterDeleteSeparator"/>
        <menu id="menu_select" label="&selectMenu.label;" accesskey="&selectMenu.accesskey;">
          <menupopup id="menu_SelectPopup">
            <menuitem id="menu_SelectAll" label="&all.label;"
                      accesskey="&all.accesskey;" key="key_selectAll"
                      command="cmd_selectAll"/>
            <menuseparator id="selectMenuSeparator"/>
            <menuitem id="menu_selectThread" label="&selectThreadCmd.label;"
             accesskey="&selectThreadCmd.accesskey;"
             key="key_selectThread"
             command="cmd_selectThread"/>
            <menuitem id="menu_selectFlagged"
                      label="&selectFlaggedCmd.label;"
                      accesskey="&selectFlaggedCmd.accesskey;"
                      command="cmd_selectFlagged"/>
          </menupopup>
        </menu>
        <menuseparator id="editMenuAfterSelectSeparator"/>
        <menu id="menu_find" label="&findMenu.label;" accesskey="&findMenu.accesskey;">
          <menupopup id="menu_FindPopup">
            <menuitem id="menu_findCmd" label="&findCmd.label;" key="key_find" accesskey="&findCmd.accesskey;" command="cmd_find"/>
            <menuitem id="menu_findAgainCmd" label="&findAgainCmd.label;" key="key_findAgain" accesskey="&findAgainCmd.accesskey;" command="cmd_findAgain"/>
            <menuseparator id="editMenuAfterFindSeparator"/>
            <menuitem id="searchMailCmd" label="&searchMailCmd.label;"
                      key="key_searchMail"
                      accesskey="&searchMailCmd.accesskey;"
                      command="cmd_search"/>
            <menuitem id="searchAddressesCmd" label="&searchAddressesCmd.label;"
                      accesskey="&searchAddressesCmd.accesskey;"
                      oncommand="MsgSearchAddresses()"/>
          </menupopup>
        </menu>
        <menuseparator id="editPropertiesSeparator"/>
        <menuitem id="menu_favoriteFolder"
                  type="checkbox"
                  label="&menuFavoriteFolder.label;"
                  accesskey="&menuFavoriteFolder.accesskey;"
                  check="false"
                  oncommand="ToggleFavoriteFolderFlag();"/>
        <menuitem id="menu_properties" label="&folderPropsCmd.label;"
                  accesskey="&folderPropsCmd.accesskey;"
                  command="cmd_properties"/>
#ifdef XP_UNIX
#ifndef XP_MACOSX
        <menuitem id="menu_accountmgr" label="&accountManagerCmd.label;" accesskey="&accountManagerCmdUnix.accesskey;" oncommand="MsgAccountManager(null);"/>
        <menuitem id="menu_preferences" oncommand="openOptionsDialog()"/>
#endif
#endif
      </menupopup>
    </menu>

    <!-- View -->
    <menu id="menu_View">
      <menupopup id="menu_View_Popup" onpopupshowing="view_init();">
        <menu id="menu_Toolbars" onpopupshowing="onViewToolbarsPopupShowing(event, 'mail-toolbox');">
          <menupopup id="view_toolbars_popup">
            <menuseparator id="viewMenuBeforeCustomizeMailToolbarsSeparator"/>
            <menuitem id="customizeMailToolbars"
                      command="cmd_CustomizeMailToolbar"
                      label="&customizeToolbar.label;"
                      accesskey="&customizeToolbar.accesskey;"/>
          </menupopup>
        </menu>
        <menuitem id="menu_showTaskbar" type="checkbox"/>
        <menuseparator id="viewMenuAfterTaskbarSeparator"/>
        <menu id="menu_MessagePaneLayout" label="&messagePaneLayoutStyle.label;" accesskey="&messagePaneLayoutStyle.accesskey;">
          <menupopup id="view_layout_popup" onpopupshowing="InitViewLayoutStyleMenu(event)">
            <menuitem id="messagePaneClassic" type="radio" label="&messagePaneClassic.label;" name="viewlayoutgroup"
                      accesskey="&messagePaneClassic.accesskey;" oncommand="ChangeMailLayout(kClassicMailLayout);"/>
            <menuitem id="messagePaneWide" type="radio" label="&messagePaneWide.label;" name="viewlayoutgroup"
                      accesskey="&messagePaneWide.accesskey;" oncommand="ChangeMailLayout(kWideMailLayout);"/>
            <menuitem id="messagePaneVertical" type="radio" label="&messagePaneVertical.label;" name="viewlayoutgroup"
                      accesskey="&messagePaneVertical.accesskey;" oncommand="ChangeMailLayout(kVerticalMailLayout);"/>
            <menuseparator id="viewMenuAfterPaneVerticalSeparator"/>
            <menuitem id="menu_showMessage" type="checkbox" label="&showMessageCmd.label;" key="key_toggleMessagePane"
                      accesskey="&showMessageCmd.accesskey;" oncommand="MsgToggleMessagePane();"/>
          </menupopup>
        </menu>
        <menu id="menu_FolderViews" label="&folderView.label;" accesskey="&folderView.accesskey;">
          <menupopup id="menu_FolderViewsPopup" onpopupshowing="InitViewFolderViewsMenu(event)">
            <menuitem id="menu_allFolders"      label="&allFolders.label;" accesskey="&allFolders.accesskey;"
                      type="radio" name="viewmessages" oncommand="loadFolderView(0);"/>
            <menuitem id="menu_unreadFolders"   label="&unreadFolders.label;" accesskey="&unreadFolders.accesskey;"
                      type="radio" name="viewmessages" oncommand="loadFolderView(1);"/>
            <menuitem id="menu_favoriteFolders" label="&favoriteFolders.label;" accesskey="&favoriteFolders.accesskey;"
                      type="radio" name="viewmessages" oncommand="loadFolderView(2);"/>
            <menuitem id="menu_recentFolders"   label="&recentFolders.label;" accesskey="&recentFolders.accesskey;"
                      type="radio" name="viewmessages" oncommand="loadFolderView(3);"/>
          </menupopup>
        </menu>
        <menuseparator id="viewSortMenuSeparator"/>
        <menu id="viewSortMenu" accesskey="&sortMenu.accesskey;" label="&sortMenu.label;">
          <menupopup id="menu_viewSortPopup" onpopupshowing="InitViewSortByMenu()">
            <menuitem id="sortByDateMenuitem" type="radio" name="sortby" label="&sortByDateCmd.label;" accesskey="&sortByDateCmd.accesskey;" oncommand="MsgSortThreadPane('byDate')"/>
            <menuitem id="sortByReceivedMenuitem" type="radio" name="sortby" label="&sortByReceivedCmd.label;" accesskey="&sortByReceivedCmd.accesskey;" oncommand="MsgSortThreadPane('byReceived')"/>
            <menuitem id="sortByFlagMenuitem" type="radio" name="sortby" label="&sortByStarCmd.label;" accesskey="&sortByStarCmd.accesskey;" oncommand="MsgSortThreadPane('byFlagged')"/>
            <menuitem id="sortByOrderReceivedMenuitem" type="radio" name="sortby" label="&sortByOrderReceivedCmd.label;"  accesskey="&sortByOrderReceivedCmd.accesskey;" oncommand="MsgSortThreadPane('byId')"/>
            <menuitem id="sortByPriorityMenuitem" type="radio" name="sortby" label="&sortByPriorityCmd.label;" accesskey="&sortByPriorityCmd.accesskey;" oncommand="MsgSortThreadPane('byPriority')"/>
            <menuitem id="sortByFromMenuitem" type="radio" name="sortby" label="&sortByFromCmd.label;" accesskey="&sortByFromCmd.accesskey;" oncommand="MsgSortThreadPane('byAuthor')"/>
            <menuitem id="sortByRecipientMenuitem" type="radio" name="sortby" label="&sortByRecipientCmd.label;" accesskey="&sortByRecipientCmd.accesskey;" oncommand="MsgSortThreadPane('byRecipient')"/>
            <menuitem id="sortBySizeMenuitem" type="radio" name="sortby" label="&sortBySizeCmd.label;" accesskey="&sortBySizeCmd.accesskey;" oncommand="MsgSortThreadPane('bySize')"/>
            <menuitem id="sortByStatusMenuitem" type="radio" name="sortby" label="&sortByStatusCmd.label;" accesskey="&sortByStatusCmd.accesskey;" oncommand="MsgSortThreadPane('byStatus')"/>
            <menuitem id="sortBySubjectMenuitem" type="radio" name="sortby" label="&sortBySubjectCmd.label;" accesskey="&sortBySubjectCmd.accesskey;" oncommand="MsgSortThreadPane('bySubject')"/>
            <menuitem id="sortByUnreadMenuitem" type="radio" name="sortby" label="&sortByUnreadCmd.label;"  accesskey="&sortByUnreadCmd.accesskey;" oncommand="MsgSortThreadPane('byUnread')"/>
            <menuitem id="sortByTagsMenuitem" type="radio" name="sortby" label="&sortByTagsCmd.label;" accesskey="&sortByTagsCmd.accesskey;" oncommand="MsgSortThreadPane('byTags')"/>
            <menuitem id="sortByJunkStatusMenuitem" type="radio" name="sortby" label="&sortByJunkStatusCmd.label;" accesskey="&sortByJunkStatusCmd.accesskey;" oncommand="MsgSortThreadPane('byJunkStatus')"/>
            <menuitem id="sortByAttachmentsMenuitem" type="radio" name="sortby" label="&sortByAttachmentsCmd.label;" accesskey="&sortByAttachmentsCmd.accesskey;" oncommand="MsgSortThreadPane('byAttachments')"/>
            <menuseparator id="sortAfterAttachmentSeparator"/>
            <menuitem id="sortAscending" type="radio" name="sortdirection" label="&sortAscending.label;" accesskey="&sortAscending.accesskey;" oncommand="MsgSortAscending()"/>
            <menuitem id="sortDescending" type="radio" name="sortdirection" label="&sortDescending.label;" accesskey="&sortDescending.accesskey;" oncommand="MsgSortDescending()"/>
            <menuseparator id="sortAfterDescendingSeparator"/>
            <menuitem id="sortThreaded" type="radio" name="threaded" label="&sortThreaded.label;" accesskey="&sortThreaded.accesskey;" oncommand="MsgSortThreaded();"/>
            <menuitem id="sortUnthreaded" type="radio" name="threaded" label="&sortUnthreaded.label;" accesskey="&sortUnthreaded.accesskey;" oncommand="MsgSortUnthreaded();"/>
            <menuitem id="groupBySort" type="radio" name="group" label="&groupBySort.label;" accesskey="&groupBySort.accesskey;" oncommand="MsgGroupBySort();"
                      key="key_groupBySort"/>
          </menupopup>
        </menu>
        <menu id="viewMessageViewMenu" label="&msgsMenu.label;" accesskey="&msgsMenu.accesskey;"
              command="mailHideMenus" oncommand="ViewChangeByMenuitem(event.target);">
            <menupopup id="viewMessagePopup" onpopupshowing="RefreshViewPopup(this, false);">
              <menuitem id="viewMessageAll"    value="0" type="radio" label="&viewAll.label;" accesskey="&viewAll.accesskey;"/>
              <menuitem id="viewMessageUnread" value="1" type="radio" label="&viewUnread.label;" accesskey="&viewUnread.accesskey;"/>
              <menuitem id="viewMessageNotDeleted" value="3" type="radio" label="&viewNotDeleted.label;" accesskey="&viewNotDeleted.accesskey;"/>
              <menuseparator id="messageViewAfterUnreadSeparator"/>
              <menu id="viewMessageTags" label="&viewTags.label;" accesskey="&viewTags.accesskey;">
                <menupopup id="viewMessageTagsPopup" onpopupshowing="RefreshTagsPopup(this, false);"/>
              </menu>
              <menu id="viewMessageCustomViews" label="&viewCustomViews.label;" accesskey="&viewCustomViews.accesskey;">
                <menupopup id="viewMessageCustomViewsPopup" onpopupshowing="RefreshCustomViewsPopup(this, false);"/>
              </menu>
              <menuseparator id="messageViewAfterCustomSeparator"/>
              <menuitem id="viewMessageVirtualFolder" value="7" label="&viewVirtualFolder.label;" accesskey="&viewVirtualFolder.accesskey;"/>
              <menuitem id="viewMessageCustomize"     value="8" label="&viewCustomizeView.label;" accesskey="&viewCustomizeView.accesskey;"/>
            </menupopup>
          </menu>

          <menu label="&threads.label;" id="viewMessagesMenu" accesskey="&threads.accesskey;">
            <menupopup id="menu_ThreadsPopup" onpopupshowing="InitViewMessagesMenu()">
              <menuitem id="viewAllMessagesMenuItem" type="radio" name="viewmessages" label="&allMsgsCmd.label;" accesskey="&allMsgsCmd.accesskey;" disabled="true" command="cmd_viewAllMsgs"/>
              <menuitem id="viewUnreadMessagesMenuItem" type="radio" name="viewmessages" label="&unreadMsgsCmd.label;" accesskey="&unreadMsgsCmd.accesskey;" disabled="true" command="cmd_viewUnreadMsgs"/>
              <menuitem id="viewThreadsWithUnreadMenuItem" type="radio" name="viewmessages" label="&threadsWithUnreadCmd.label;" accesskey="&threadsWithUnreadCmd.accesskey;" disabled="true" command="cmd_viewThreadsWithUnread"/>
              <menuitem id="viewWatchedThreadsWithUnreadMenuItem" type="radio" name="viewmessages" label="&watchedThreadsWithUnreadCmd.label;" accesskey="&watchedThreadsWithUnreadCmd.accesskey;" disabled="true" command="cmd_viewWatchedThreadsWithUnread"/>
              <menuseparator id="threadsAfterWatchedSeparator"/>
              <menuitem id="viewIgnoredThreadsMenuItem" type="checkbox" label="&ignoredThreadsCmd.label;" disabled="true" command="cmd_viewIgnoredThreads" accesskey="&ignoredThreadsCmd.accesskey;"/>
              <menuseparator id="threadsAfterIgnoredSeparator"/>
              <menuitem id="menu_expandAllThreads" label="&expandAllThreadsCmd.label;" accesskey="&expandAllThreadsCmd.accesskey;" key="key_expandAllThreads" disabled="true" command="cmd_expandAllThreads"/>
              <menuitem id="collapseAllThreads" label="&collapseAllThreadsCmd.label;" accesskey="&collapseAllThreadsCmd.accesskey;" key="key_collapseAllThreads" disabled="true" command="cmd_collapseAllThreads"/>
            </menupopup>
          </menu>
          <menuseparator id="viewAfterThreadsSeparator"/>
          <menu id="viewheadersmenu" label="&headersMenu.label;" accesskey="&headersMenu.accesskey;">
            <menupopup id="menu_HeadersPopup" onpopupshowing="InitViewHeadersMenu();">
              <menuitem id="viewallheaders"
               type="radio"
               name="viewheadergroup"
               label="&headersAllCmd.label;"
               accesskey="&headersAllCmd.accesskey;"
               oncommand="MsgViewAllHeaders();"/>
              <menuitem id="viewnormalheaders"
               type="radio"
               name="viewheadergroup"
               label="&headersNormalCmd.label;"
               accesskey="&headersNormalCmd.accesskey;"
               oncommand="MsgViewNormalHeaders();"/>
            </menupopup>
          </menu>
          <menu id="viewBodyMenu" accesskey="&bodyMenu.accesskey;" label="&bodyMenu.label;">
            <menupopup id="viewBodyPopMenu" onpopupshowing="InitViewBodyMenu()">
              <menuitem id="bodyAllowHTML" type="radio" name="bodyPlaintextVsHTMLPref" label="&bodyAllowHTML.label;"
                        accesskey="&bodyAllowHTML.accesskey;" oncommand="MsgBodyAllowHTML()"/>
              <menuitem id="bodySanitized" type="radio" name="bodyPlaintextVsHTMLPref" label="&bodySanitized.label;"
                        accesskey="&bodySanitized.accesskey;"
                        oncommand="MsgBodySanitized()"/>
              <menuitem id="bodyAsPlaintext" type="radio" name="bodyPlaintextVsHTMLPref" label="&bodyAsPlaintext.label;"
                        accesskey="&bodyAsPlaintext.accesskey;" oncommand="MsgBodyAsPlaintext()"/>
            </menupopup>
          </menu>
          <menuitem id="viewAttachmentsInlineMenuitem" label="&viewAttachmentsInlineCmd.label;" accesskey="&viewAttachmentsInlineCmd.accesskey;"
            oncommand="ToggleInlineAttachment(event.target)" type="checkbox" checked="true"/>
          <menuseparator id="viewAfterAttachmentsSeparator"/>
          <menu id="viewTextSizeMenu" label="&textSize.label;" accesskey="&textSize.accesskey;">
            <menupopup id="menu_TextSizePopup">
          <menuitem id="menu_textZoomEnlarge" key="key_textZoomEnlarge" label="&textZoomEnlargeCmd.label;" accesskey="&textZoomEnlargeCmd.accesskey;"
                    command="cmd_textZoomEnlarge"/>
          <menuitem id="menu_textZoomReduce" key="key_textZoomReduce" label="&textZoomReduceCmd.label;" accesskey="&textZoomReduceCmd.accesskey;"
                    command="cmd_textZoomReduce"/>
              <menuseparator id="textSizeAfterReduceSeparator"/>
              <menuitem key="key_textZoomReset" label="&textZoomResetCmd.label;" accesskey="&textZoomResetCmd.accesskey;" command="cmd_textZoomReset"/>
            </menupopup>
          </menu>
          <menu id="mailviewCharsetMenu" />
          <menuseparator id="viewAfterCharsetSeparator"/>
          <menuitem id="pageSourceMenuItem" label="&pageSourceCmd.label;" key="key_viewPageSource" accesskey="&pageSourceCmd.accesskey;" command="cmd_viewPageSource"/>
        </menupopup>
        </menu>

        <!-- Go -->
        <menu id="menu_Go" label="&goMenu.label;" accesskey="&goMenu.accesskey;">
          <menupopup id="menu_GoPopup" onpopupshowing="InitGoMessagesMenu();">
          <menu id="goNextMenu" label="&nextMenu.label;" accesskey="&nextMenu.accesskey;">
            <menupopup id="menu_GoNextPopup">
              <menuitem id="menu_nextMsg" label="&nextMsgCmd.label;" accesskey="&nextMsgCmd.accesskey;" command="cmd_nextMsg"
                        key="key_nextMsg"/>
              <menuitem id="menu_nextUnreadMsg" label="&nextUnreadMsgCmd.label;" accesskey="&nextUnreadMsgCmd.accesskey;" command="cmd_nextUnreadMsg"
                        key="key_nextUnreadMsg"/>
              <menuitem id="menu_nextFlaggedMsg" label="&nextStarredMsgCmd.label;" accesskey="&nextStarredMsgCmd.accesskey;" command="cmd_nextFlaggedMsg"/>
              <menuseparator id="goNextAfterFlaggedSeparator"/>
              <menuitem id="menu_nextUnreadThread" label="&nextUnreadThread.label;" accesskey="&nextUnreadThreadCmd.accesskey;" command="cmd_nextUnreadThread"
                        key="key_nextUnreadThread"/>
            </menupopup>
          </menu>
          <menu id="goPreviousMenu" label="&prevMenu.label;" accesskey="&prevMenu.accesskey;">
            <menupopup id="menu_GoPreviousPopup">
              <menuitem id="menu_prevMsg" label="&prevMsgCmd.label;" accesskey="&prevMsgCmd.accesskey;" command="cmd_previousMsg"
                        key="key_previousMsg"/>
              <menuitem id="menu_prevUnreadMsg" label="&prevUnreadMsgCmd.label;" accesskey="&prevUnreadMsgCmd.accesskey;" command="cmd_previousUnreadMsg"
                        key="key_previousUnreadMsg"/>
              <menuitem id="menu_prevFlaggedMsg" label="&prevStarredMsgCmd.label;" accesskey="&prevStarredMsgCmd.accesskey;" command="cmd_previousFlaggedMsg"/>
            </menupopup>
          </menu>
          <menuitem id="menu_goForward" label="&goForwardCmd.label;" accesskey="&goForwardCmd.accesskey;" command="cmd_goForward"
                    key="key_goForward"/>
          <menuitem id="menu_goBack" label="&goBackCmd.label;" accesskey="&goBackCmd.accesskey;" command="cmd_goBack"
                    key="key_goBack"/>
          <menuseparator id="goNextSeparator"/>
          <menuitem id="goStartPage" label="&startPageCmd.label;" accesskey="&startPageCmd.accesskey;" command="cmd_goStartPage"/>
        </menupopup>
        </menu>

        <!-- Message -->
        <menu id="messageMenu" label="&msgMenu.label;" accesskey="&msgMenu.accesskey;">
          <menupopup id="messageMenuPopup" onpopupshowing="InitMessageMenu();">
            <menuitem id="newMsgCmd" label="&newMsgCmd.label;"
              accesskey="&newMsgCmd.accesskey;"
              key="key_newMessage2"
              oncommand="MsgNewMessage(null);"/>
            <menuitem id="replyMainMenu" label="&replyMsgCmd.label;"
              accesskey="&replyMsgCmd.accesskey;"
              key="key_reply"
              command="cmd_reply"/>
            <menuitem id="replySenderMainMenu" label="&replySenderCmd.label;"
              accesskey="&replySenderCmd.accesskey;"
              command="cmd_replySender"/>
            <menuitem id="replyNewsgroupMainMenu" label="&replyNewsgroupCmd.label;"
              accesskey="&replyNewsgroupCmd.accesskey;"
              key="key_reply"
              command="cmd_replyGroup"/>
            <menuitem id="menu_replyToAll" label="&replyToAllMsgCmd.label;"
              accesskey="&replyToAllMsgCmd.accesskey;"
              key="key_replyall"
              command="cmd_replyall"/>
            <menuitem id="menu_forwardMsg" label="&forwardMsgCmd.label;"
              accesskey="&forwardMsgCmd.accesskey;"
              key="key_forward"
              command="cmd_forward"/>
            <menu id="forwardAsMenu" label="&forwardAsMenu.label;" accesskey="&forwardAsMenu.accesskey;">
              <menupopup id="menu_forwardAsPopup">
                <menuitem id="menu_forwardAsInline"
                          label="&forwardAsInline.label;"
                          accesskey="&forwardAsInline.accesskey;"
                          command="cmd_forwardInline"/>
                <menuitem id="menu_forwardAsAttachment"
                          label="&forwardAsAttachmentCmd.label;"
                          accesskey="&forwardAsAttachmentCmd.accesskey;"
                          command="cmd_forwardAttachment"/>
              </menupopup>
            </menu>
            <menuitem id="menu_editMsgAsNew" label="&editMsgAsNewCmd.label;"
                accesskey="&editMsgAsNewCmd.accesskey;"
                key="key_editAsNew"
                command="cmd_editAsNew"/>
            <menuitem id="openMessageWindowMenuitem" label="&openMessageWindowCmd.label;"
              command="cmd_openMessage"
              accesskey="&openMessageWindowCmd.accesskey;"
              key="key_openMessage"/>
            <menuseparator id="messageAfterOpenMsgSeparator"/>
            <menu id="moveMenu" accesskey="&moveMsgMenu.accesskey;"
                  label="&moveMsgMenu.label;"
                  oncommand="MsgMoveMessage(event.target._folder)">
              <menupopup type="folder" mode="filing" showFileHereLabel="true"
                         showRecent="true" fileHereLabel="&fileHereMenu.label;"
                         fileHereAccessKey="&fileHereMenu.accesskey;"
                         recentLabel="&moveCopyMsgRecentMenu.label;"
                         recentAccessKey="&moveCopyMsgRecentMenu.accesskey;"/>
            </menu>
            <menu id="copyMenu" accesskey="&copyMsgMenu.accesskey;"
                  label="&copyMsgMenu.label;"
                  oncommand="MsgCopyMessage(event.target._folder)">
              <menupopup type="folder" mode="filing" showFileHereLabel="true"
                         showRecent="true" fileHereLabel="&copyHereMenu.label;"
                         copyHereAccessKey="&fileHereMenu.accesskey;"
                         recentLabel="&moveCopyMsgRecentMenu.label;"
                         recentAccessKey="&moveCopyMsgRecentMenu.accesskey;"/>
            </menu>
            <menuitem id="moveToFolderAgain" key="key_moveToFolderAgain" command="cmd_moveToFolderAgain"
                      label="&moveToFolderAgain.label;" accesskey="&moveToFolderAgain.accesskey;"/>
            <menu id="tagMenu" label="&tagMenu.label;" accesskey="&tagMenu.accesskey;" command="cmd_tag">
              <menupopup id="tagMenu-tagpopup" onpopupshowing="InitMessageTags(this)">
              <menuitem id="tagMenu-tagRemoveAll" oncommand="RemoveAllMessageTags();"/>
                <menuseparator id="tagMenuAfterRemoveSeparator"/>
                <menuseparator id="tagMenuBeforeAddSeparator"/>
                <menuitem id="addNewTag" label="&addNewTag.label;" accesskey="&addNewTag.accesskey;"
                          oncommand="AddTag();"/>
              </menupopup>
            </menu>
            <menu id="markMenu" label="&markMenu.label;" accesskey="&markMenu.accesskey;">
              <menupopup id="menu_MarkPopup" onpopupshowing="InitMessageMark()">
                <menuitem type="checkbox" id="markReadMenuItem" label="&markAsReadCmd.label;" accesskey="&markAsReadCmd.accesskey;" command="cmd_markAsRead"
                          key="key_toggleRead"/>
                <menuitem id="menu_markThreadAsRead" label="&markThreadAsReadCmd.label;" accesskey="&markThreadAsReadCmd.accesskey;" command="cmd_markThreadAsRead"
                          key="key_markThreadAsRead"/>
                <menuitem id="menu_markReadByDate" label="&markReadByDateCmd.label;" accesskey="&markReadByDateCmd.accesskey;" command="cmd_markReadByDate"
                          key="key_markReadByDate"/>
                <menuitem id="menu_markAllRead" label="&markAllReadCmd.label;" key="key_markAllRead" accesskey="&markAllReadCmd.accesskey;" command="cmd_markAllRead"/>
                <menuseparator id="markMenuAfterAllReadSeparator"/>
                <menuitem id="markFlaggedMenuItem"
                          type="checkbox"
                          label="&markStarredCmd.label;"
                          accesskey="&markStarredCmd.accesskey;"
                          command="cmd_markAsFlagged"
                          key="key_toggleFlagged"/>
                <menuseparator id="markMenuAfterFlaggedSeparator"/>
                <menuitem id="menu_markAsJunk" label="&markAsJunkCmd.label;"
                          accesskey="&markAsJunkCmd.accesskey;"
                          command="cmd_markAsJunk"
                          key="key_markJunk"/>
                <menuitem id="menu_markAsNotJunk" label="&markAsNotJunkCmd.label;"
                          key="key_markNotJunk"
                          accesskey="&markAsNotJunkCmd.accesskey;"
                          command="cmd_markAsNotJunk"/>
                <menuitem id="menu_recalculateJunkScore"
                          label="&recalculateJunkScoreCmd.label;"
                          accesskey="&recalculateJunkScoreCmd.accesskey;"
                          command="cmd_recalculateJunkScore"/>
              </menupopup>
            </menu>
            <menuseparator id="messageMenuAfterMarkSeparator"/>
            <menuitem id="createFilter" label="&createFilter.label;"
                      accesskey="&createFilter.accesskey;"
                      command="cmd_createFilterFromMenu"/>
        <menuseparator id="threadItemsSeparator"/>
        <menuitem label="&killThreadMenu.label;"
            accesskey="&killThreadMenu.accesskey;"
            id="killThread"
            command="cmd_killThread"
            key="key_killThread"/>
        <menuitem label="&killSubthreadMenu.label;"
            accesskey="&killSubthreadMenu.accesskey;"
            id="killSubthread"
            command="cmd_killSubthread"
            key="key_killSubthread"/>
        <menuitem label="&watchThreadMenu.label;"
            accesskey="&watchThreadMenu.accesskey;"
            id="watchThread"
            command="cmd_watchThread"
            key="key_watchThread"/>
      </menupopup>
    </menu>

    <!-- Tools -->
    <menu id="tasksMenu" label="&tasksMenu.label;" accesskey="&tasksMenu.accesskey;">
      <menupopup id="taskPopup" onpopupshowing="document.commandDispatcher.updateCommands('create-menu-tasks')">
#ifndef XP_MACOSX
        <menuitem hidden="true" accesskey="&messengerCmd.accesskey;" label="&messengerCmd.label;"
                  key="key_mail" oncommand="toMessengerWindow();" id="tasksMenuMail" class="menuitem-iconic menu-iconic"/>
        <menuitem id="addressBook" label="&addressBookCmd.label;" accesskey="&addressBookCmd.accesskey;" key="key_addressbook"
                  oncommand="toOpenWindowByType('mail:addressbook', 'chrome://messenger/content/addressbook/addressbook.xul');"/>
#endif
        <menuitem id="addonsManager" label="&addons.label;" accesskey="&addons.accesskey;"
                  oncommand="openAddonsMgr();"/>
        <menuseparator id="devToolsSeparator"/>
        <menuitem id="filtersCmd" label="&filtersCmd.label;"
                  accesskey="&filtersCmd.accesskey;"
                  oncommand="MsgFilters(null, null);"/>
        <menuitem id="applyFilters"
                  label="&filtersApply.label;"
                  accesskey="&filtersApply.accesskey;"
                  command="cmd_applyFilters"/>
        <menuseparator id="tasksMenuAfterApplySeparator"/>
        <menuitem id="runJunkControls"
            label="&runJunkControls.label;"
            accesskey="&runJunkControls.accesskey;"
            command="cmd_runJunkControls"/>
        <menuitem id="deleteJunk"
            label="&deleteJunk.label;"
            accesskey="&deleteJunk.accesskey;"
            command="cmd_deleteJunk"/>
        <menuseparator id="tasksMenuAfterDeleteSeparator"/>
        <menuitem id="menu_import" label="&importCmd.label;"
                  accesskey="&importCmd.accesskey;"
                  oncommand="toImport();"/>
        <menuitem id="javaScriptConsole" label="&errorConsoleCmd.label;" accesskey="&errorConsoleCmd.accesskey;" oncommand="toJavaScriptConsole();"/>
#ifndef XP_UNIX
        <menuseparator id="prefSep"/>
        <menuitem id="menu_accountmgr" label="&accountManagerCmd.label;" accesskey="&accountManagerCmd.accesskey;" oncommand="MsgAccountManager(null);"/>
        <menuitem id="menu_preferences" oncommand="openOptionsDialog()"/>
#else
#ifdef XP_MACOSX
        <menuseparator id="prefSep"/>
        <menuitem id="menu_accountmgr" label="&accountManagerCmd.label;" accesskey="&accountManagerCmd.accesskey;" oncommand="MsgAccountManager(null);"/>
        <menuitem id="menu_preferences" label="&preferencesCmdMac.label;" key="key_preferencesCmdMac" oncommand="openOptionsDialog()"/>
        <menuitem id="menu_mac_services" label="&servicesMenuMac.label;"/>
        <menuitem id="menu_mac_hide_app" label="&hideThisAppCmdMac.label;" key="key_hideThisAppCmdMac"/>
        <menuitem id="menu_mac_hide_others" label="&hideOtherAppsCmdMac.label;" key="key_hideOtherAppsCmdMac"/>
        <menuitem id="menu_mac_show_all" label="&showAllAppsCmdMac.label;"/>
#endif
#endif
       </menupopup>
      </menu>

#ifdef XP_MACOSX
<!-- Mac window menu -->
#include ../../../toolkit/content/macWindowMenu.inc
#endif

      <!-- Help -->
      <menu id="helpMenu"/>

      <spacer id="menubar_spacer" flex="100%"/>
      </menubar>
    </toolbaritem>
  </toolbar>

  <toolbarpalette id="MailToolbarPalette">
    <toolbarbutton id="button-getmsg"
                   type="menu-button"
                   class="toolbarbutton-1"
                   label="&getMsgButton.label;"
                   tooltiptext="&getMsgButton.tooltip;"
                   oncommand="MsgGetMessagesForAccount(event.target._folder)"
                   observes="button_getNewMessages">
      <menupopup id="button-getMsgPopup"
                 onpopupshowing="getMsgToolbarMenu_init();"
                 type="folder"
                 expandFolders="false"
                 mode="getMail">
        <menuitem id="button-getAllNewMsg"
                  label="&getAllNewMsgCmd.label;"
                  accesskey="&getAllNewMsgCmd.accesskey;"
                  command="cmd_getMsgsForAuthAccounts"/>
        <menuseparator id="button-getAllNewMsgSeparator"/>
      </menupopup>
    </toolbarbutton>
    <toolbarbutton id="button-newmsg"
                   class="toolbarbutton-1"
                   label="&newMsgButton.label;"
                   tooltiptext="&newMsgButton.tooltip;"
                   oncommand="MsgNewMessage(event)"/>
    <toolbarbutton id="button-reply"
                   class="toolbarbutton-1"
                   label="&replyButton.label;"
                   tooltiptext="&replyButton.tooltip;"
                   observes="button_reply"
                   oncommand="MsgReplyMessage(event)"/>
    <toolbarbutton id="button-replyall"
                   class="toolbarbutton-1"
                   label="&replyAllButton.label;"
                   tooltiptext="&replyAllButton.tooltip;"
                   observes="button_replyall"
                   oncommand="MsgReplyToAllMessage(event)"/>
    <toolbarbutton id="button-forward"
                   class="toolbarbutton-1"
                   label="&forwardButton.label;"
                   tooltiptext="&forwardButton.tooltip;"
                   observes="button_forward"
                   oncommand="MsgForwardMessage(event)"/>
    <toolbarbutton id="button-file"
                   type="menu"
                   class="toolbarbutton-1"
                   label="&fileButton.label;"
                   observes="button_file"
                   oncommand="MsgMoveMessage(event.target._folder)">
      <menupopup id="button-filePopup"
                 type="folder"
                 mode="filing"
                 showRecent="true"
                 showFileHereLabel="true"
                 fileHereLabel="&fileHereMenu.label;"
                 fileHereAccessKey="&fileHereMenu.accesskey;"
                 recentLabel="&moveCopyMsgRecentMenu.label;"
                 recentAccessKey="&moveCopyMsgRecentMenu.accesskey;"/>
    </toolbarbutton>
    <toolbarbutton id="button-goback"
                   class="toolbarbutton-1"
                   type="menu-button"
                   label="&backButton1.label;"
                   chromedir="&locale.dir;"
                   oncommand="goDoCommand('cmd_goBack')"
                   tooltiptext="&goBackButton.tooltip;"
                   observes="button_goBack">
      <menupopup id="button-goBackPopup" onpopupshowing="backToolbarMenu_init(this)">
        <menuitem id="button-goBack" label="&goBackCmd.label;" command="cmd_goBack"/>
        <menuseparator id="button-goBackSeparator"/>
      </menupopup>
    </toolbarbutton>
    <toolbarbutton id="button-goforward"
                   class="toolbarbutton-1"
                   type="menu-button"
                   label="&goForwardButton1.label;"
                   chromedir="&locale.dir;"
                   oncommand="goDoCommand('cmd_goForward')"
                   tooltiptext="&goForwardButton.tooltip;"
                   observes="button_goForward">
      <menupopup id="button-goForwardPopup" onpopupshowing="forwardToolbarMenu_init(this)">
        <menuitem id="button-goForward"
                  label="&goForwardCmd.label;"
                  command="cmd_goForward"/>
        <menuseparator id="button-goForwardSeparator"/>
      </menupopup>
    </toolbarbutton>
    <toolbarbutton id="button-previous"
                   class="toolbarbutton-1"
                   label="&previousButton.label;"
                   chromedir="&locale.dir;"
                   oncommand="goDoCommand('button_previous')"
                   tooltiptext="&previousButton.tooltip;"
                   observes="button_previous"/>
    <toolbarbutton id="button-next"
                   class="toolbarbutton-1"
                   label="&nextButton.label;"
                   chromedir="&locale.dir;"
                   oncommand="goDoCommand('button_next')"
                   tooltiptext="&nextButton.tooltip;"
                   observes="button_next"/>
    <toolbaritem id="button-junk">
      <deck id="junk-deck" observes="button_junk">
        <toolbarbutton id="button-isJunk"
                       class="toolbarbutton-1 junk-button"
                       label="&junkButton.label;"
                       tooltiptext="&junkButton.tooltip;"
                       observes="button_junk"
                       oncommand="goDoCommand('button_junk')"/>
        <toolbarbutton id="button-notJunk"
                       class="toolbarbutton-1 junk-button"
                       label="&notJunkButton.label;"
                       tooltiptext="&notJunkButton.tooltip;"
                       observes="button_junk"
                       oncommand="goDoCommand('button_junk')"/>
      </deck>
    </toolbaritem>
    <toolbarbutton id="button-delete"
                   class="toolbarbutton-1"
                   label="&deleteButton.label;"
                   tooltiptext="&deleteButton.tooltip;"
                   observes="button_delete"
                   oncommand="goDoCommand(event.shiftKey ? 'cmd_shiftDelete' : 'cmd_delete')"/>
#ifdef XP_MACOSX
    <toolbarbutton id="button-print"
                   class="toolbarbutton-1"
                   label="&printButton.label;"
                   observes="button_print"
                   oncommand="goDoCommand('cmd_print')"
                   tooltiptext="&printButton.tooltip;"/>
#else
    <toolbarbutton id="button-print"
                   class="toolbarbutton-1"
                   label="&printButton.label;"
                   observes="button_print"
                   oncommand="goDoCommand('cmd_print')"
                   tooltiptext="&printButton.tooltip;"
                   type="menu-button">
      <menupopup id="printMenu" onpopupshowing="goUpdateCommand('cmd_printpreview');">
        <menuitem id="button-printMenu"
                  label="&printCmd.label;"
                  accesskey="&printCmd.accesskey;"
                  default="true"/>
        <menuitem id="button-printPreviewMenu"
                  label="&printPreviewCmd.label;"
                  accesskey="&printPreviewCmd.accesskey;"
                  command="cmd_printpreview"/>
      </menupopup>
    </toolbarbutton>
#endif
    <toolbarbutton id="button-mark"
                   type="menu-button"
                   class="toolbarbutton-1"
                   label="&markButton.label;"
                   oncommand="goDoCommand('button_mark')"
                   observes="button_mark"
                   tooltiptext="&markButton.tooltip;">
      <menupopup id="button-markPopup" onpopupshowing="InitMessageMark()">
        <menuitem id="markReadToolbarItem"
                  type="checkbox"
                  key="key_toggleRead"
                  label="&markAsReadCmd.label;"
                  accesskey="&markAsReadCmd.accesskey;"
                  command="cmd_markAsRead" />
        <menuitem id="button-markThreadAsRead"
                  label="&markThreadAsReadCmd.label;"
                  key="key_markThreadAsRead"
                  accesskey="&markThreadAsReadCmd.accesskey;"
                  command="cmd_markThreadAsRead"/>
        <menuitem id="button-markReadByDate"
                  label="&markReadByDateCmd.label;"
                  key="key_markReadByDate"
                  accesskey="&markReadByDateCmd.accesskey;"
                  command="cmd_markReadByDate"/>
        <menuitem id="button-markAllRead"
                  label="&markAllReadCmd.label;"
                  key="key_markAllRead"
                  accesskey="&markAllReadCmd.accesskey;"
                  command="cmd_markAllRead"/>
        <menuseparator id="button-markAllReadSeparator"/>
        <menuitem id="markFlaggedToolbarItem"
                  type="checkbox"
                  label="&markStarredCmd.label;"
                  accesskey="&markStarredCmd.accesskey;"
                  key="key_toggleFlagged"
                  command="cmd_markAsFlagged"/>
      </menupopup>
    </toolbarbutton>
    <toolbarbutton id="button-compact" class="toolbarbutton-1"
                   label="&compactButton.label;"
                   tooltiptext="&compactButton.tooltip;"
                   oncommand="goDoCommand('button_compact');"
                   observes="button_compact"/>
    <toolbarbutton id="button-tag"
                   type="menu"
                   class="toolbarbutton-1"
                   label="&tagButton.label;"
                   tooltiptext="&tagButton.tooltip;"
                   command="cmd_tag">
      <menupopup id="button-tagpopup" onpopupshowing="InitMessageTags(this)">
        <menuitem id="button-tagRemoveAll" oncommand="RemoveAllMessageTags();"/>
        <menuseparator id="button-afterTagRemoveAllSeparator"/>
        <menuseparator id="beforeAddNewTagSeparator"/>
        <menuitem id="addNewTag"
                  label="&addNewTag.label;"
                  accesskey="&addNewTag.accesskey;"
                  oncommand="AddTag();"/>
      </menupopup>
    </toolbarbutton>
    <toolbarbutton id="button-address"
                   class="toolbarbutton-1"
                   label="&addressBookButton.label;"
                   oncommand="toAddressBook();"
                   tooltiptext="&addressBookButton.tooltip;"/>
    <toolbaritem id="throbber-box"
                 title="&throbberItem.title;"
                 align="center"
                 pack="center">
      <button id="navigator-throbber" disabled="true"/>
    </toolbaritem>
    <toolbarbutton id="button-stop"
                   class="toolbarbutton-1"
                   label="&stopButton.label;"
                   tooltiptext="&stopButton.tooltip;"
                   command="cmd_stop"/>
    <toolbaritem id="search-container"
                 title="&searchItem.title;"
                 align="center"
                 class="chromeclass-toolbar-additional">
      <textbox id="searchInput" timeout="800" flex="1"
               onfocus="onSearchInputFocus(event);"
               onclick="onSearchInputClick(event);"
               onmousedown="onSearchInputMousedown(event);"
               onblur="onSearchInputBlur(event);"
               oncommand="onEnterInSearchBar();"
               onkeypress="onSearchKeyPress();"
               chromedir="&locale.dir;">
        <button id="quick-search-button" type="menu" chromedir="&locale.dir;">
          <menupopup id="quick-search-menupopup"
                     value="2"
                     persist="value"
                     onpopupshowing="InitQuickSearchPopup();"
                     popupalign="topleft"
                     popupanchor="bottomleft">
            <menuitem id="searchSubjectMenu"
                      value="0"
                      label="&searchSubjectMenu.label;"
                      type="radio"
                      oncommand="changeQuickSearchMode(this)"/>
            <menuitem id="searchFromMenu"
                      value="1"
                      label="&searchFromMenu.label;"
                      type="radio"
                      oncommand="changeQuickSearchMode(this)" />
            <menuitem id="searchSubjectOrFromMenu"
                      value="2"
                      label="&searchSubjectOrFromMenu.label;"
                      type="radio"
                      oncommand="changeQuickSearchMode(this)"/>
            <menuitem id="searchRecipient"
                      value="5"
                      label="&searchRecipient.label;"
                      type="radio"
                      oncommand="changeQuickSearchMode(this)"/>
            <menuitem id="searchMessageBody"
                      value="3"
                      label="&searchMessageBody.label;"
                      type="radio"
                      oncommand="changeQuickSearchMode(this)"/>
            <menuseparator id="afterSearchMessageBodySeparator"/>
            <!-- if the value for the save as virtual folder menu changes,
                 please update the VK_DOWN key handler in searchbar.xml
            -->
            <menuitem id="quickSearchSaveAsVirtualFolder"
                      value="5"
                      label="&saveAsVirtualFolderMenu.label;"
                      oncommand="saveViewAsVirtualFolder()"/>
          </menupopup>
        </button>
      </textbox>
    </toolbaritem>
    <toolbaritem id="folder-location-container"
                 title="&folderLocationToolbarItem.title;"
                 align="center"
                 class="chromeclass-toolbar-additional">
      <!--XXX The src attribute is there to give the menulist icon horizontal
          margin (bug 381364). Remove it once bug 381548 is fixed. -->
      <menulist id="locationFolders"
                class="folderMenuItem"
                label=" "
                src=""
                context="folderPaneContext"
                width="170"
                crop="center">
        <menupopup id="folderLocationPopup"
                   class="folderLocationPopup"
                   height="400"
                   flex="1"
                   oncommand="OnLocationTreeSelect(this);"/>
      </menulist>
    </toolbaritem>
    <toolbaritem id="mailviews-container"
                 title="&mailViewsToolbarItem.title;"
                 align="center"
                 class="chromeclass-toolbar-additional">
      <label id="viewPickerLabel"
             value="&viewPicker.label;"
             control="viewPicker"
             accesskey="&viewPicker.accesskey;"/>
      <menulist id="viewPicker" oncommand="ViewChangeByMenuitem(event.target);">
        <menupopup id="viewPickerPopup" onpopupshowing="RefreshViewPopup(this, false);">
          <menuitem id="viewPickerAll" value="0" label="&viewAll.label;"/>
          <menuitem id="viewPickerUnread" value="1" label="&viewUnread.label;"/>
          <menuitem id="viewPickerNotDeleted" value="3" label="&viewNotDeleted.label;"/>
          <menuseparator id="afterViewPickerUnreadSeparator"/>
          <menu id="viewPickerTags" label="&viewTags.label;">
            <menupopup id="viewPickerTagsPopup"
                       class="menulist-menupopup"
                       onpopupshowing="RefreshTagsPopup(this, true);"/>
          </menu>
          <menu id="viewPickerCustomViews" label="&viewCustomViews.label;">
            <menupopup id="viewPickerCustomViewsPopup"
                       class="menulist-menupopup"
                       onpopupshowing="RefreshCustomViewsPopup(this, true);"/>
          </menu>
          <menuseparator id="afterViewPickerCustomViewsSeparator"/>
          <menuitem id="viewPickerVirtualFolder"
                    value="7"
                    label="&viewVirtualFolder.label;"/>
          <menuitem id="viewPickerCustomize"
                    value="8"
                    label="&viewCustomizeView.label;"/>
        </menupopup>
      </menulist>
    </toolbaritem>
  </toolbarpalette>

  <!-- If changes are made to the default set of toolbar buttons, you may need to rev the id
       of mail-bar in order to force the new default items to show up for users who customized their toolbar
       in earlier versions. Bumping the id means users will have to re-customize their toolbar!
  -->
  <toolbar id="mail-bar2" class="toolbar-primary chromeclass-toolbar"
           toolbarname="&showMessengerToolbarCmd.label;"
           accesskey="&showMessengerToolbarCmd.accesskey;"
           fullscreentoolbar="true" mode="full"
           customizable="true"
           context="toolbar-context-menu"
#ifdef XP_MACOSX
           defaultset="button-getmsg,button-newmsg,button-address,spacer,button-reply,button-replyall,button-forward,spacer,button-tag,button-delete,button-junk,button-print,spacer,button-goback,button-goforward,spring,search-container,throbber-box">
#else
           defaultset="button-getmsg,button-newmsg,button-address,separator,button-reply,button-replyall,button-forward,separator,button-tag,button-delete,button-junk,button-print,separator,button-goback,button-goforward,spring,search-container">
#endif
  </toolbar>
  <toolbarset id="customToolbars" context="toolbar-context-menu"/>
</toolbox>

<!-- The msgNotificationBar appears on top of the message and displays
     information like: junk, contains remote images, or is a suspected phishing
     URL.
-->
<deck id="msgNotificationBar" selectedIndex="0" collapsed="true">
  <hbox id="msgNotificationNoStatus"/>

  <hbox id="phishingBar" class="msgNotificationBar" align="center">
    <image id="phishingBarImage"/>
    <vbox flex="1">
      <description flex="1" class="msgNotificationBarText">&phishingBarMessage1.label;</description>
      <label id="reportPhishingError" value="&reportPhishingError.label;" class="msgNotificaton-smallText text-link" collapsed="true"/>
    </vbox>
    <button label="&removePhishingBarButton1.label;" oncommand="IgnorePhishingWarning();"/>
  </hbox>

  <hbox id="junkBar" class="msgNotificationBar" align="center">
    <image id="junkBarImage"/>
    <description flex="1" class="msgNotificationBarText">&junkBarMessage1.label;</description>
    <button label="&junkBarButton1.label;" oncommand="JunkSelectedMessages(false);"/>
  </hbox>

  <hbox id="remoteContentBar" class="msgNotificationBar" align="center">
    <image id="remoteContentImage"/>
    <vbox flex="1">
      <description class="msgNotificationBarText">&remoteContentMessage1.label;</description>
      <label id="allowRemoteContentForAuthorDesc" class="msgNotificaton-smallText text-link"
             onclick="allowRemoteContentForSender();"/>
    </vbox>
    <button label="&loadRemoteContentButton1.label;" oncommand="LoadMsgWithRemoteContent();"/>
  </hbox>
</deck>

<statusbar class="chromeclass-status" id="status-bar">
  <hbox insertbefore="unreadMessageCount"  id="statusTextBox" flex="1">
    <statusbarpanel id="offline-status" class="statusbarpanel-iconic" oncommand="MailOfflineMgr.toggleOfflineStatus();"/>
    <statusbarpanel id="statusText" label="&statusText.label;" flex="1"/>
    <statusbarpanel class="statusbarpanel-progress" collapsed="true" id="statusbar-progresspanel">
      <progressmeter class="progressmeter-statusbar" id="statusbar-icon" mode="normal" value="0"/>
    </statusbarpanel>
    <statusbarpanel class="statusbarpanel-progress"
                    id="quotaPanel" hidden="true">
      <stack>
        <progressmeter class="progressmeter-statusbar"
                       id="quotaMeter"
                       mode="normal"
                       value="0" />
        <label id="quotaLabel"
               onclick="MsgFolderProperties('QuotaTab');" />
      </stack>
    </statusbarpanel>
  </hbox>
</statusbar>

</overlay>
