<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Mozilla SIP client project.
   -
   - The Initial Developer of the Original Code is 8x8 Inc.
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Alex Fritze <alex@croczilla.com> (original author)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either of the GNU General Public License Version 2 or later (the "GPL"),
   - or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://zap/skin/zap.css" type="text/css"?>

<?xul-overlay href="chrome://zap/content/identity-form.xul"?>

<!DOCTYPE window SYSTEM "chrome://zap/locale/zap.dtd">

<page id="zap_identity"
      class="zap-form"
      xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      onload="initPage()">

  <!-- Scripts -->
  <script type="application/x-javascript" src="chrome://global/content/globalOverlay.js"/>
  <script type="text/javascript" src="chrome://zap/content/chromeUtils.js"/>

  <script type="application/x-javascript">
  <![CDATA[
    var wIdentity;
    function initPage() {
      widgetStateChanged = formWidgetStateChanged;
      initIdentityForm();
      wIdentity = parent.getIdentity(parent.getSelectedSidebarResource().Value);
      wIdentity.fillDocument(document);
      wIdentity.initXULTemplate(document.getElementById("identity-template-1"), true);
    }    

    function del() {
      if (parent.wConfig["urn:mozilla:zap:identity"] == wIdentity.resource.Value) {
        parent.wPromptService.alert(null, "Delete Identity",
                                    "The identity profile '"+wIdentity["http://home.netscape.com/NC-rdf#Name"]+
                                    "' can't be deleted because it is the currently active identity. "+
                                    " Please activate a different identity in the toolbar "+
                                    "before deleting this one.");
        return;
      }

      var ok = parent.wPromptService.confirm(null, "Delete Identity", 
                                             "Are you sure you wish to delete identity '"+wIdentity["http://home.netscape.com/NC-rdf#Name"]+"'?");
      if (ok) {
        parent.unregisterIdentity(wIdentity);
        wIdentity.remove();
        parent.selectSidebarNode("urn:mozilla:zap:home");
      }
    }
    
    function commit() {
      wIdentity.updateFromDocument(document);
      if (parent.wConfig["urn:mozilla:zap:identity"] == wIdentity.resource.Value)
        parent.currentIdentityUpdated();
      // (re-)register if this identity is currently registered or if it has
      // the automatic registration flag set:
      if (wIdentity["urn:mozilla:zap:registration_status"] == "registered" ||
          wIdentity["urn:mozilla:zap:automatic_registration"] == "true")
        parent.registerIdentity(wIdentity);
    }

    function cancel() {
      wIdentity.fillDocument(document);
    }

    function registerNow() {
      parent.registerIdentity(wIdentity);
    }

    function unregisterNow() {
      parent.unregisterIdentity(wIdentity);
    }

  ]]>
  </script>

  <vbox class="zap-form-body">
    <box class="zap-form-title-box">
      <label value="&identity.title;" crop="right"/>
      <spacer flex="1"/>
      <button label="&delete.button;" oncommand="del()"/>
    </box>

    <vbox id="identity-template-1"
          containment="urn:mozilla:zap:current-identity"
          datasources="rdf:null"
          flags="dont-buid-content"
          ref="urn:mozilla:zap:root">
      <template>
        <rule><!-- NON-REGISTERED IDENTITY -->
          <conditions>
            <content uri="?dummy"/>
            <member container="?dummy" child="?node"/>
            <triple subject="?node"
                    predicate="urn:mozilla:zap:registration_status"
                    object=""/>                
          </conditions>
          <action>
            <groupbox flex="1" uri="?node">
              <caption><label value="Status"/></caption>
              <hbox flex="1">
                <label value="&notRegistered.label;"/>
                <spacer flex="1"/>
                <button label="&register.button;" oncommand="registerNow()"/>
              </hbox>
            </groupbox>
          </action>
        </rule>
        <rule><!-- REGISTERED IDENTITY -->
          <conditions>
            <content uri="?dummy"/>
            <member container="?dummy" child="?node"/>
            <triple subject="?node"
                    predicate="urn:mozilla:zap:registration_status"
                    object="registered"/>                
          </conditions>
          <action>
            <groupbox flex="1" uri="?node">
              <caption><label value="Status"/></caption>
              <hbox flex="1">
                <label value="&registered.label;"/>
                <spacer flex="1"/>
                <button label="&unregister.button;" oncommand="unregisterNow()"/>
              </hbox>
            </groupbox>
          </action>
        </rule>
        <rule><!-- REGISTERING IDENTITY -->
          <conditions>
            <content uri="?dummy"/>
            <member container="?dummy" child="?node"/>
            <triple subject="?node"
                    predicate="urn:mozilla:zap:registration_status"
                    object="registering"/>   
          </conditions>
          <action>
            <groupbox flex="1" uri="?node">
              <caption><label value="Status"/></caption>
              <hbox flex="1">
                <label value="&registering.label;"/>
                <spacer flex="1"/>
                <button label="&noregister.button;" oncommand="unregisterNow()"/>
              </hbox>
            </groupbox>
          </action>
        </rule>
      </template>
    </vbox>
    
    <vbox id="zap_identity_form"/>
  </vbox>
  <hbox style="display:none" class="zap-form-buttonbar">
    <spacer flex="1"/>
    <button label="&delete.button;" oncommand="del()" />
  </hbox>
  <hbox class="zap-form-hidden-buttonbar" id="buttonbar">
    <spacer flex="1"/>
    <button id="apply" label="&apply.button;" oncommand="commit()" />
    <button label="&cancel.button;" oncommand="cancel()" />
  </hbox>
</page>
