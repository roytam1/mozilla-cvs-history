<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Mozilla SIP client project.
   -
   - The Initial Developer of the Original Code is 8x8 Inc.
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Alex Fritze <alex@croczilla.com> (original author)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either of the GNU General Public License Version 2 or later (the "GPL"),
   - or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://zap/skin/zap.css" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://zap/locale/zap.dtd">

<window id="zap_logs"
        class="zap_form"
        width="640" height="480" screenX="20" screenY="20" 
        persist="width height screenX screenY sizemode"
        title = "zap! call logs"
        onload="windowInit();"
        xmlns = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <!-- Scripts -->
  <script type="application/x-javascript" src="chrome://global/content/globalOverlay.js"/>
  <script type="text/javascript" src="chrome://zap/content/chromeUtils.js"/>

  <script type="application/x-javascript">
  <![CDATA[

  var wContentDoc;

  function windowInit() {
    Components.utils.import("gre:FileUtils.js");
    wContentDoc = document.getElementById("content").contentDocument;
    // determine log filter from uri query part:
    var callidpar = /\?callid=(.+)/(document.documentURI);
    if (!callidpar) return;
    var callid = unescape(callidpar[1]);
    var title = "SIP Call Logs for "+callid;
    document.getElementById("title").value = title; 
    wContentDoc.open("text/plain");
    wContentDoc.title = title;

    processSbox(getProfileFile("zap.sbox"),
                function(record) {
                  if (record.indexOf(callid) != -1)
                    wContentDoc.write(record);
                });

    wContentDoc.close();
  }

  // This is a quick and dirty, *very* slow and inaccurate function for
  // running a 'process' function over all records in the given
  // sbox-formatted file. XXX we need this in C++
  var MAX_SBOX_RECORD_SIZE = 10240;
  function processSbox(file, process) {
    var is = openFileForReading(file);
    if (!is) return;
    var avail;
    var buffer = "";
    var record_matcher = /- From (?:.|\n|\r)*?\n\n/m;
    while (1) {
      if (is && buffer.length < MAX_SBOX_RECORD_SIZE) {
        var avail = is.available();
        if (!avail) {
          is.close();
          is = null;
        }
        else {
          buffer += is.readEx(Math.min(MAX_SBOX_RECORD_SIZE, avail));
        }
      }
      var match = record_matcher(buffer);
      if (!match) break;
      process(match[0]);
      buffer = buffer.substring(match.index+match[0].length);
    }
    if (is)
      is.close();
  }


  ]]>
  </script>
    <label class="zap-form-title" crop="end" id="title"/>
  <iframe id="content" flex="1" />
    <hbox>
      <spacer flex="1"/>
      <button label="&print.button;" oncommand="wContentDoc.defaultView.print()"/>
    </hbox>
</window>
