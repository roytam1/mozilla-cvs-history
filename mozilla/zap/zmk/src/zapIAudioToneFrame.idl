/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SIP client project.
 *
 * The Initial Developer of the Original Code is 8x8 Inc.
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex@croczilla.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "zapIMediaFrame.idl"

/**
 * \ingroup ZMK_MODULE
 * An RFC2833 audio/tone media frame.
 */
[scriptable, uuid(fdfc20e0-21b5-46dd-b275-5af169d17d3a)]
interface zapIAudioToneFrame : zapIMediaFrame
{
  /**
   * Marker bit. Signifies the start of a new tone.
   */
  attribute boolean M;
  
  /**
   * modulation frequency in Hz (9 bits: 0 to 511Hz). If the 'T' bit
   * is set this must be divided by 3.
   */
  attribute unsigned short modulation;

  /**
   * 'T' bit. If set, the modulation frequency is to be divided by 3.
   */
  attribute boolean T;
  
  /**
   * Power level of the tone in dBm0 after dropping sign.  (6 bits: 0
   * to -63dBm0)
   */
  attribute unsigned short volume;

  /**
   * Duration of tone in timestamp units (16 bits).
   */
  attribute unsigned short duration;

  /**
   * Number of frequencies in this tone.
   */
  readonly attribute unsigned short frequencyCount;

  /**
   * Accessor for nth frequency (0-based).
   * Frequencies are in Hz (12 bits: 0 to 4095Hz)
   */
  unsigned short getFrequencyAt(in unsigned short n);

  /**
   * Add a frequency to the frame.
   * Frequencies are in Hz (12 bits: 0 to 4095Hz)
   */
  void addFrequency(in unsigned short frequency);
};

