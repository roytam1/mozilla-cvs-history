/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SIP client project.
 *
 * The Initial Developer of the Original Code is 8x8 Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex@croczilla.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface zapISipInviteRCListener;
interface zapISipDialog;
interface zapISipRequest;
interface zapISipAddress;
interface zapISipInviteResponseHandler;

[scriptable, uuid(dd497847-1b53-4d86-a6aa-b9d41f1499fc)]
interface zapISipInviteRC : nsISupports
{
  /**
   * INVITE request object that will be sent out by
   * sendInvite(). Request client users should ammend the request as
   * appropriate before calling sendInvite().
   */
  attribute zapISipRequest request;

  /**
   * A listener receiving notifications of received responses. The
   * request client user must remove the listener by setting this
   * attribute to null once finished with the request client. This is
   * important to prevent potential leaks due to circular references.
   */
  attribute zapISipInviteRCListener listener;

  /**
   * The dialog associated with this request. Will be null if this is
   * a request outside of a dialog.
   */
  readonly attribute zapISipDialog dialog;

  /**
   * Send the current INVITE request.
   *
   * Once a request has been sent it can be cancelled with a call to
   * zapISipInviteRC::cancel().
   *
   * sendInvite() may be called repeatedly but only AFTER a FINAL
   * FAILURE RESPONSE has been received.
   *
   * For requests outside of a dialog, the CSeq number will
   * automatically be incremented by 1 for each request (RFC3261
   * 8.1.3.5). For requests within a dialog, CSeq will be set to the
   * incremented local sequence number.
   */
  void sendInvite(in zapISipInviteResponseHandler rh);
  
  /**
   * Cancel the ongoing invite by sending a CANCEL request (RFC3261
   * 9.1).
   *
   * Must only be called AFTER a request has been sent using
   * zapISipInviteRC::sendInvite() and BEFORE a final response has
   * been received.
   *
   * If cancel() is called before the request client has received a
   * provisional response, sending of the CANCEL request will be
   * delayed until the request client receives such a
   * response. (RFC3261 9.1)
   */
  void cancel();
};
