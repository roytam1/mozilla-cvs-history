/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SIP client project.
 *
 * The Initial Developer of the Original Code is 8x8 Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex@croczilla.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "zapISipSyntaxObject.idl"

/**
 * \ingroup SIP_SYNTAX_LAYER
 * Base interface for URIs
 */
[scriptable, uuid(a6b0812c-5ccb-4c9a-b9e7-0307dd866f83)]
interface zapISipURI : zapISipSyntaxObject
{
};

/**
 * \ingroup SIP_SYNTAX_LAYER
 * A SIP or SIPS URI as defined in RFC3261
 */
[scriptable, uuid(0ad293f0-54a8-418b-894d-20904b396154)]
interface zapISipSIPURI : zapISipURI
{
  /**
   * Determines whether this is a sip or sips URI.
   */
  attribute boolean sips;

  /**
   * Unescaped user or telephone-subscriber part of the URI. Empty string if this URI doesn't specify a userinfo part.
   */
  attribute ACString user;

  /**
   * Unescaped password part of the URI. Null if this URI doesn't
   * specify a password.
   */
  attribute ACString password;

  /**
   * host part of the URI.
   */
  attribute ACString host;

  /**
   * port part of the URI. Empty string if the URI doesn't specify a
   * port.
   */
  attribute ACString port;

  /**
   * Returns the unescaped value of the URI parameter 'name' or the
   * empty string if the parameter doesn't exist.
   *
   * 'name' should be an unescaped string. It will be compared
   * case-insensitively to the unescaped names of existing parameters.
   */
  ACString getURIParameter(in ACString name);

  /**
   * Returns true if the URI parameter 'name' exists.
   *
   * 'name' should be an unescaped string. It will be compared
   * case-insensitively to the unescaped names of existing parameters.
   */   
  boolean hasURIParameter(in ACString name);

  /**
   * Set the URI parameter 'name' to 'value'.
   *
   * Both 'name' and 'value' should be unescaped strings. The previous
   * value of 'name' (if any) will be overwritten. 
   */
  void setURIParameter(in ACString name, in ACString value);

  /**
   * Remove the URI parameter 'name'.
   *
   * 'name' should be an unescaped string. It will be compared
   * case-insensitively to the unescaped names of existing parameters.
   */   
  void removeURIParameter(in ACString name);

  /**
   * Returns an array containing the unescaped names of all existing
   * URI parameters in this URI.
   */
  void getURIParameterNames(out unsigned long count,
                            [retval, array, size_is(count)] out string names);

  ACString getHeader(in ACString name);
  boolean hasHeader(in ACString name);
  void setHeader(in ACString name, in ACString value);
  void removeHeader(in ACString name);
  void getHeaderNames(out unsigned long count,
                      [retval, array, size_is(count)] out string names);

  /**
   * Compare this SIP URI to 'other' as specified in RFC3261 19.1.4.
   */
  boolean equals(in zapISipSIPURI other);
};
