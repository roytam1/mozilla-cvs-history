/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SIP client project.
 *
 * The Initial Developer of the Original Code is 8x8 Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex@croczilla.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "zapISipSyntaxObject.idl"

interface zapISipHeader;
interface zapISipContentLengthHeader;
interface zapISipViaHeader;
interface zapISipCallIDHeader;
interface zapISipToHeader;
interface zapISipFromHeader;
interface zapISipCSeqHeader;
interface zapISipContactHeader;

[scriptable, uuid(6dad27eb-ed2d-430c-9f60-bd97cc8efe1b)]
interface zapISipMessage : zapISipSyntaxObject
{
  /**
   * true if this message is a request (and implements zapISipRequest)
   * false if this message is a response (and implements zapISipResponse)
   */
  attribute boolean isRequest;
  
  attribute ACString version;
  
  readonly attribute unsigned long headerCount;

  /**
   * Returns the canonical header name for the header at position 'i'.
   * Short header names defined in RFC3261 will be expanded into their
   * long equivalents.
   */
  AUTF8String headerNameAt(in unsigned long i);
  
  zapISipHeader headerAt(in unsigned long i);
  void appendHeader(in zapISipHeader header);
  void insertHeaderBefore(in zapISipHeader header, in unsigned long i);
  void removeHeaderAt(in unsigned long i);
  void removeHeader(in zapISipHeader header);
  
  attribute ACString body;

  /**
   * Helper to get a list of all headers with the given name. The list
   * will be sorted with the top-most matching header coming first.
   */
  void getHeaders(in ACString name, out unsigned long count,
                  [retval, array, size_is(count)] out zapISipHeader headers);

  /**
   * Helper to get the indices of all headers with the given name. The
   * list will be sorted with the top-most matching header coming
   * first (low->high indices)
   */
  void getHeaderIndices(in ACString name, out unsigned long count,
                        [retval, array, size_is(count)] out unsigned long indices);

  /**
   * Helper to remove all headers with the given name.
   */
  void removeHeaders(in ACString name);
  
  /**
   * Helper to get the top-most header with the given name.
   */
  zapISipHeader getTopHeader(in ACString name);
  
  /**
   * Helper to get a single header of the given name
   * Throws an error if there are multiple headers with the given name.
   */
  zapISipHeader getSingleHeader(in ACString name);

  /**
   * Helper to get the top-most Via header.
   */
  zapISipViaHeader getTopViaHeader();

  /**
   * Helper to get the top-most Contact header.
   */
  zapISipContactHeader getTopContactHeader();
  
  /**
   * Helper to get the Call-ID header.
   * Throws an error if there are multiple Call-ID headers, null if
   * there is none.
   */
  zapISipCallIDHeader getCallIDHeader();
  
  /**
   * Helper to get the To header.
   * Throws an error if there are multiple To headers, null if there
   * is none.
   */
  zapISipToHeader getToHeader();

  /**
   * Helper to get the From header.
   * Throws an error if there are multiple From headers, null if there
   * is none.
   */
  zapISipFromHeader getFromHeader();

  /**
   * Helper to get the CSeq header.
   * Throws an error if there are multiple CSeq headers, null if there
   * is none.
   */
  zapISipCSeqHeader getCSeqHeader();
  
  /**
   * Helper to set Content-Type, Content-Length and body content .
   */
  void setContent(in ACString contentType, in ACString contentSubType,
                  in ACString bodyContent);
};