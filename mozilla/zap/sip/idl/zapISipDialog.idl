/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SIP client project.
 *
 * The Initial Developer of the Original Code is 8x8 Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex@croczilla.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface zapISipDialogListener;
interface zapISipRequestHandler;
interface zapISipNonInviteRC;
interface zapISipInviteRC;
interface zapISipURI;
interface zapISipAddress;

[scriptable, uuid(a3995457-2090-490b-a9dc-b73dfbcac3dd)]
interface zapISipDialog : nsISupports
{
  attribute zapISipDialogListener listener;
  attribute zapISipRequestHandler requestHandler;

  /**
   * Obtain a request client object for transactionally sending a
   * NON-INVITE request within this dialog. The
   * zapISipNonInviteRC::request attribute will be initialized with a
   * suitable request template for the given method.
   */
  zapISipNonInviteRC createNonInviteRequestClient(in ACString method);
  
  zapISipInviteRC createInviteRequestClient();

  /**
   * Call-ID + ";" + localTag + ";" + remoteTag
   */
  readonly attribute ACString dialogID;

  /**
   * Call-ID
   */
  readonly attribute ACString callID;
  
  /**
   * For dialogs constructed at UAS end, the local tag equals the To
   * tag of response that established the dialog.
   *
   * For dialog constructed at UAC end, the local tag equals the From
   * tag of request that led to establishing of the dialog.
   */
  readonly attribute ACString localTag;

  /**
   * For dialogs constructed at UAS end, the remote tag equals the From
   * tag of request that led to establishing of the dialog.
   *
   * For dialogs constructed at UAC end, the remote tag equals the To tag
   * of response that established dialog.
   */
  readonly attribute ACString remoteTag;

  /**
   * Local sequence number for sequencing requests sent from the local
   * side of this dialog.
   *
   * The special value 2^32-1 (UNINITIALIZED_SEQUENCE_NUMBER) indicates
   * that the sequence number is not initialized yet (because there
   * has not been a request inside the dialog from our end).
   */
  readonly attribute unsigned long localSequenceNumber;
  
  /**
   * Remote sequence number for sequencing requests sent from the
   * remote side of this dialog.
   *
   * The special value 2^32-1 (UNINITIALIZED_SEQUENCE_NUMBER)
   * indicates that the sequence number is not initialized yet
   * (because there has not been a request inside the dialog from the
   * remote end).
   */
  readonly attribute unsigned long remoteSequenceNumber;

  /**
   * Local URI
   */
  readonly attribute zapISipURI localURI;
  
  /**
   * Remote URI
   */
  readonly attribute zapISipURI remoteURI;

  /**
   * Remote target (taken from Contact field of initial request/response)
   */
  readonly attribute zapISipURI remoteTarget;

  /**
   * Secure flag
   */
  readonly attribute boolean secure;
  
  /**
   * Route set (taken from Record-Route header)
   */
  void getRouteSet(out unsigned long count,
                   [array, retval, size_is(count)] out
                   zapISipAddress routeset);
  
  /**
   * "EARLY", "CONFIRMED" or "TERMINATED"
   */
  readonly attribute ACString dialogState;

  /**
   * 2^32-1 constant indicating an uninitialized sequence number.
   * (By virtue of initial sequence number being < 2^31, we can
   * assume that 2^32-1 will never be reached within a dialog)
   */
  const unsigned long UNINITIALIZED_SEQUENCE_NUMBER = 0xFFFFFFFF;
};
