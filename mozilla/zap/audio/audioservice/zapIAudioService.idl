/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla SIP client project.
 *
 * The Initial Developer of the Original Code is 8x8 Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alex Fritze <alex@croczilla.com> (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface zapIAudioDevice;
interface zapIAudioTransport;

%{ C++
// {ACE1FF95-D415-4AB5-972A-D05BA3900D5E}
#define ZAP_AUDIOSERVICE_CID \
{ 0xace1ff95, 0xd415, 0x4ab5, { 0x97, 0x2a, 0xd0, 0x5b, 0xa3, 0x90, 0x0d, 0x5e } }

#define ZAP_AUDIOSERVICE_CONTRACTID "@mozilla.org/zap/audioservice;1"
%}
     
[scriptable, uuid(52ea2b92-2305-4466-adab-74d9b2a34ae3)]
interface zapIAudioService : nsISupports
{
  readonly attribute zapIAudioDevice defaultInputDevice;
  readonly attribute zapIAudioDevice defaultOutputDevice;

  zapIAudioTransport openAudioTransport(in zapIAudioDevice inputDevice,
                                        in unsigned long inputChannelCount,
                                        in unsigned long inputSampleFormat,
                                        in double suggestedInputLatency,
                                        in zapIAudioDevice outputDevice,
                                        in unsigned long outputChannelCount,
                                        in unsigned long outputSampleFormat,
                                        in double suggestedOutputLatency,
                                        in double sampleRate,
                                        in unsigned long framesPerBuffer,
                                        in unsigned long flags);

  // constants for {input,output}SampleFormat:
  const unsigned long sampleFormat_Float32 = 0x00000001;
  const unsigned long sampleFormat_Int32   = 0x00000002;
  const unsigned long sampleFormat_Int24   = 0x00000004;
  const unsigned long sampleFormat_Int16   = 0x00000008;
  const unsigned long sampleFormat_Int8    = 0x00000010;
  const unsigned long sampleFormat_UInt8   = 0x00000020;
  const unsigned long sampleFormat_Custom  = 0x00010000;
  const unsigned long sampleFormatFlag_NonInterleaved = 0x80000000;

};
