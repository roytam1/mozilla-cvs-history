Terminals: $$ ! != !== $END $IDENTIFIER $NUMBER $STRING % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? DELETE FALSE NEW NULL THIS
           TRUE TYPEOF VOID [ ] ^ \| |\|\|| ~
Nonterminals: :% :PROGRAM :EXPRESSION #<a :COMMA-EXPRESSION ANY-VALUE> #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> #<a :CONDITIONAL-EXPRESSION ANY-VALUE>
              #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> #<a :BITWISE-XOR-EXPRESSION
              ANY-VALUE> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> #<a :EQUALITY-EXPRESSION ANY-VALUE> #<a :RELATIONAL-EXPRESSION ANY-VALUE> #<a :SHIFT-EXPRESSION
              ANY-VALUE> #<a :ADDITIVE-EXPRESSION ANY-VALUE> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> #<a :UNARY-EXPRESSION ANY-VALUE> #<a :POSTFIX-EXPRESSION
              ANY-VALUE> #<a :NEW-EXPRESSION ANY-VALUE> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :PRIMARY-RVALUE #<a :COMMA-EXPRESSION NO-L-VALUE>
              #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> #<a :LOGICAL-AND-EXPRESSION
              NO-L-VALUE> #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> #<a :EQUALITY-EXPRESSION
              NO-L-VALUE> #<a :RELATIONAL-EXPRESSION NO-L-VALUE> #<a :SHIFT-EXPRESSION NO-L-VALUE> #<a :ADDITIVE-EXPRESSION NO-L-VALUE> #<a :MULTIPLICATIVE-EXPRESSION
              NO-L-VALUE> #<a :UNARY-EXPRESSION NO-L-VALUE> #<a :POSTFIX-EXPRESSION NO-L-VALUE> :LVALUE #<a :MEMBER-LVALUE NO-CALL> :PRIMARY-LVALUE
              #<a :MEMBER-LVALUE CALL> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> #<a :NEW-EXPRESSION NO-L-VALUE> #<a :MEMBER-EXPRESSION NO-CALL
              NO-L-VALUE> :ARGUMENTS :ARGUMENT-LIST
Rules:
  :% -> :PROGRAM                                                      P0   [NIL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  :PROGRAM -> :EXPRESSION $END                                        P135 [PROGRAM]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  :EXPRESSION -> #<a :COMMA-EXPRESSION ANY-VALUE>                     P134 [EXPRESSION-COMMA-EXPRESSION]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :COMMA-EXPRESSION ANY-VALUE> -> #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>   P132 [COMMA-EXPRESSION-ASSIGNMENT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> #<a :CONDITIONAL-EXPRESSION ANY-VALUE>   P128 [ASSIGNMENT-EXPRESSION-CONDITIONAL]
                                         | :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>   P130 [ASSIGNMENT-EXPRESSION-ASSIGNMENT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>   P124 [CONDITIONAL-EXPRESSION-LOGICAL-OR]
                                          | #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION
                                            ANY-VALUE>
                                             P126 [CONDITIONAL-EXPRESSION-CONDITIONAL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>   P120 [LOGICAL-OR-EXPRESSION-LOGICAL-AND]
                                         | #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>
                                            P122 [LOGICAL-OR-EXPRESSION-OR]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE>   P116 [LOGICAL-AND-EXPRESSION-BITWISE-OR]
                                          | #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
                                             P118 [LOGICAL-AND-EXPRESSION-AND]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>   P112 [BITWISE-OR-EXPRESSION-BITWISE-XOR]
                                         | #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
                                            P114 [BITWISE-OR-EXPRESSION-OR]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE>   P108 [BITWISE-XOR-EXPRESSION-BITWISE-AND]
                                          | #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
                                             P110 [BITWISE-XOR-EXPRESSION-XOR]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE>   P104 [BITWISE-AND-EXPRESSION-EQUALITY]
                                          | #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
                                             P106 [BITWISE-AND-EXPRESSION-AND]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE>   P94  [EQUALITY-EXPRESSION-RELATIONAL]
                                       | #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                          P96  [EQUALITY-EXPRESSION-EQUAL]
                                       | #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                          P98  [EQUALITY-EXPRESSION-NOT-EQUAL]
                                       | #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                          P100 [EQUALITY-EXPRESSION-STRICT-EQUAL]
                                       | #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                          P102 [EQUALITY-EXPRESSION-STRICT-NOT-EQUAL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE>   P84  [RELATIONAL-EXPRESSION-SHIFT]
                                         | #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
                                            P86  [RELATIONAL-EXPRESSION-LESS]
                                         | #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
                                            P88  [RELATIONAL-EXPRESSION-GREATER]
                                         | #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
                                            P90  [RELATIONAL-EXPRESSION-LESS-OR-EQUAL]
                                         | #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
                                            P92  [RELATIONAL-EXPRESSION-GREATER-OR-EQUAL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE>   P76  [SHIFT-EXPRESSION-ADDITIVE]
                                    | #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>   P78  [SHIFT-EXPRESSION-LEFT]
                                    | #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>   P80  [SHIFT-EXPRESSION-RIGHT-SIGNED]
                                    | #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
                                       P82  [SHIFT-EXPRESSION-RIGHT-UNSIGNED]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>   P70  [ADDITIVE-EXPRESSION-MULTIPLICATIVE]
                                       | #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
                                          P72  [ADDITIVE-EXPRESSION-ADD]
                                       | #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
                                          P74  [ADDITIVE-EXPRESSION-SUBTRACT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :UNARY-EXPRESSION ANY-VALUE>   P62  [MULTIPLICATIVE-EXPRESSION-UNARY]
                                             | #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
                                                P64  [MULTIPLICATIVE-EXPRESSION-MULTIPLY]
                                             | #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
                                                P66  [MULTIPLICATIVE-EXPRESSION-DIVIDE]
                                             | #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
                                                P68  [MULTIPLICATIVE-EXPRESSION-REMAINDER]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :UNARY-EXPRESSION ANY-VALUE> -> #<a :POSTFIX-EXPRESSION ANY-VALUE>   P40  [UNARY-EXPRESSION-POSTFIX]
                                    | DELETE :LVALUE                  P42  [UNARY-EXPRESSION-DELETE]
                                    | VOID #<a :UNARY-EXPRESSION ANY-VALUE>   P44  [UNARY-EXPRESSION-VOID]
                                    | TYPEOF :LVALUE                  P46  [UNARY-EXPRESSION-TYPEOF-LVALUE]
                                    | TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>   P48  [UNARY-EXPRESSION-TYPEOF-EXPRESSION]
                                    | ++ :LVALUE                      P50  [UNARY-EXPRESSION-INCREMENT]
                                    | -- :LVALUE                      P52  [UNARY-EXPRESSION-DECREMENT]
                                    | + #<a :UNARY-EXPRESSION ANY-VALUE>   P54  [UNARY-EXPRESSION-PLUS]
                                    | - #<a :UNARY-EXPRESSION ANY-VALUE>   P56  [UNARY-EXPRESSION-MINUS]
                                    | ~ #<a :UNARY-EXPRESSION ANY-VALUE>   P58  [UNARY-EXPRESSION-BITWISE-NOT]
                                    | ! #<a :UNARY-EXPRESSION ANY-VALUE>   P60  [UNARY-EXPRESSION-LOGICAL-NOT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :POSTFIX-EXPRESSION ANY-VALUE> -> #<a :NEW-EXPRESSION ANY-VALUE>   P33  [POSTFIX-EXPRESSION-NEW]
                                      | #<a :MEMBER-EXPRESSION CALL ANY-VALUE>   P35  [POSTFIX-EXPRESSION-MEMBER-EXPRESSION-CALL]
                                      | :LVALUE ++                    P36  [POSTFIX-EXPRESSION-INCREMENT]
                                      | :LVALUE --                    P38  [POSTFIX-EXPRESSION-DECREMENT]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  #<a :NEW-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>   P23  [NEW-EXPRESSION-MEMBER-EXPRESSION]
                                  | NEW #<a :NEW-EXPRESSION ANY-VALUE>   P25  [NEW-EXPRESSION-NEW]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> :PRIMARY-RVALUE        P17  [MEMBER-EXPRESSION-PRIMARY-RVALUE]
                                             | #<a :MEMBER-LVALUE NO-CALL>   P20  [MEMBER-EXPRESSION-MEMBER-LVALUE]
                                             | NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS   P21  [MEMBER-EXPRESSION-NEW]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  :PRIMARY-RVALUE -> THIS                                             P1   [PRIMARY-RVALUE-THIS]
                   | NULL                                             P2   [PRIMARY-RVALUE-NULL]
                   | TRUE                                             P3   [PRIMARY-RVALUE-TRUE]
                   | FALSE                                            P4   [PRIMARY-RVALUE-FALSE]
                   | $NUMBER                                          P5   [PRIMARY-RVALUE-NUMBER]
                   | $STRING                                          P6   [PRIMARY-RVALUE-STRING]
                   | \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)          P7   [PRIMARY-RVALUE-PARENTHESES]
    Initial terminals: $NUMBER $STRING \( FALSE NULL THIS TRUE

  #<a :COMMA-EXPRESSION NO-L-VALUE> -> #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE>   P133 [COMMA-EXPRESSION-ASSIGNMENT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> #<a :CONDITIONAL-EXPRESSION NO-L-VALUE>   P129 [ASSIGNMENT-EXPRESSION-CONDITIONAL]
                                          | :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>   P131 [ASSIGNMENT-EXPRESSION-ASSIGNMENT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE>   P125 [CONDITIONAL-EXPRESSION-LOGICAL-OR]
                                           | #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION
                                             ANY-VALUE>
                                              P127 [CONDITIONAL-EXPRESSION-CONDITIONAL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE>   P121 [LOGICAL-OR-EXPRESSION-LOGICAL-AND]
                                          | #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>
                                             P123 [LOGICAL-OR-EXPRESSION-OR]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-OR-EXPRESSION NO-L-VALUE>   P117 [LOGICAL-AND-EXPRESSION-BITWISE-OR]
                                           | #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
                                              P119 [LOGICAL-AND-EXPRESSION-AND]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE>   P113 [BITWISE-OR-EXPRESSION-BITWISE-XOR]
                                          | #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
                                             P115 [BITWISE-OR-EXPRESSION-OR]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-AND-EXPRESSION NO-L-VALUE>   P109 [BITWISE-XOR-EXPRESSION-BITWISE-AND]
                                           | #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
                                              P111 [BITWISE-XOR-EXPRESSION-XOR]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION NO-L-VALUE>   P105 [BITWISE-AND-EXPRESSION-EQUALITY]
                                           | #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
                                              P107 [BITWISE-AND-EXPRESSION-AND]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION NO-L-VALUE>   P95  [EQUALITY-EXPRESSION-RELATIONAL]
                                        | #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                           P97  [EQUALITY-EXPRESSION-EQUAL]
                                        | #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                           P99  [EQUALITY-EXPRESSION-NOT-EQUAL]
                                        | #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                           P101 [EQUALITY-EXPRESSION-STRICT-EQUAL]
                                        | #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
                                           P103 [EQUALITY-EXPRESSION-STRICT-NOT-EQUAL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION NO-L-VALUE>   P85  [RELATIONAL-EXPRESSION-SHIFT]
                                          | #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
                                             P87  [RELATIONAL-EXPRESSION-LESS]
                                          | #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
                                             P89  [RELATIONAL-EXPRESSION-GREATER]
                                          | #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
                                             P91  [RELATIONAL-EXPRESSION-LESS-OR-EQUAL]
                                          | #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
                                             P93  [RELATIONAL-EXPRESSION-GREATER-OR-EQUAL]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION NO-L-VALUE>   P77  [SHIFT-EXPRESSION-ADDITIVE]
                                     | #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>   P79  [SHIFT-EXPRESSION-LEFT]
                                     | #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>   P81  [SHIFT-EXPRESSION-RIGHT-SIGNED]
                                     | #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
                                        P83  [SHIFT-EXPRESSION-RIGHT-UNSIGNED]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE>   P71  [ADDITIVE-EXPRESSION-MULTIPLICATIVE]
                                        | #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
                                           P73  [ADDITIVE-EXPRESSION-ADD]
                                        | #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
                                           P75  [ADDITIVE-EXPRESSION-SUBTRACT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :UNARY-EXPRESSION NO-L-VALUE>   P63  [MULTIPLICATIVE-EXPRESSION-UNARY]
                                              | #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
                                                 P65  [MULTIPLICATIVE-EXPRESSION-MULTIPLY]
                                              | #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
                                                 P67  [MULTIPLICATIVE-EXPRESSION-DIVIDE]
                                              | #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
                                                 P69  [MULTIPLICATIVE-EXPRESSION-REMAINDER]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :UNARY-EXPRESSION NO-L-VALUE> -> #<a :POSTFIX-EXPRESSION NO-L-VALUE>   P41  [UNARY-EXPRESSION-POSTFIX]
                                     | DELETE :LVALUE                 P43  [UNARY-EXPRESSION-DELETE]
                                     | VOID #<a :UNARY-EXPRESSION ANY-VALUE>   P45  [UNARY-EXPRESSION-VOID]
                                     | TYPEOF :LVALUE                 P47  [UNARY-EXPRESSION-TYPEOF-LVALUE]
                                     | TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>   P49  [UNARY-EXPRESSION-TYPEOF-EXPRESSION]
                                     | ++ :LVALUE                     P51  [UNARY-EXPRESSION-INCREMENT]
                                     | -- :LVALUE                     P53  [UNARY-EXPRESSION-DECREMENT]
                                     | + #<a :UNARY-EXPRESSION ANY-VALUE>   P55  [UNARY-EXPRESSION-PLUS]
                                     | - #<a :UNARY-EXPRESSION ANY-VALUE>   P57  [UNARY-EXPRESSION-MINUS]
                                     | ~ #<a :UNARY-EXPRESSION ANY-VALUE>   P59  [UNARY-EXPRESSION-BITWISE-NOT]
                                     | ! #<a :UNARY-EXPRESSION ANY-VALUE>   P61  [UNARY-EXPRESSION-LOGICAL-NOT]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

  #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> #<a :NEW-EXPRESSION NO-L-VALUE>   P34  [POSTFIX-EXPRESSION-NEW]
                                       | :LVALUE ++                   P37  [POSTFIX-EXPRESSION-INCREMENT]
                                       | :LVALUE --                   P39  [POSTFIX-EXPRESSION-DECREMENT]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  :LVALUE -> #<a :MEMBER-LVALUE CALL>                                 P31  [LVALUE-MEMBER-LVALUE-CALL]
           | #<a :MEMBER-LVALUE NO-CALL>                              P32  [LVALUE-MEMBER-LVALUE-NO-CALL]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  #<a :MEMBER-LVALUE NO-CALL> -> :PRIMARY-LVALUE                      P10  [MEMBER-LVALUE-PRIMARY-LVALUE]
                               | #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]   P14  [MEMBER-LVALUE-ARRAY]
                               | #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER   P16  [MEMBER-LVALUE-PROPERTY]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  :PRIMARY-LVALUE -> $IDENTIFIER                                      P8   [PRIMARY-LVALUE-IDENTIFIER]
                   | \( :LVALUE \)                                    P9   [PRIMARY-LVALUE-PARENTHESES]
    Initial terminals: $IDENTIFIER \(

  #<a :MEMBER-LVALUE CALL> -> :LVALUE :ARGUMENTS                      P11  [MEMBER-LVALUE-CALL-MEMBER-LVALUE]
                            | #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS   P12  [MEMBER-LVALUE-CALL-MEMBER-EXPRESSION-NO-CALL]
                            | #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]   P13  [MEMBER-LVALUE-ARRAY]
                            | #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER   P15  [MEMBER-LVALUE-PROPERTY]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> #<a :MEMBER-LVALUE CALL>   P19  [MEMBER-EXPRESSION-MEMBER-LVALUE]
    Initial terminals: $IDENTIFIER $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  #<a :NEW-EXPRESSION NO-L-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE>   P24  [NEW-EXPRESSION-MEMBER-EXPRESSION]
                                   | NEW #<a :NEW-EXPRESSION ANY-VALUE>   P26  [NEW-EXPRESSION-NEW]
    Initial terminals: $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> :PRIMARY-RVALUE       P18  [MEMBER-EXPRESSION-PRIMARY-RVALUE]
                                              | NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS   P22  [MEMBER-EXPRESSION-NEW]
    Initial terminals: $NUMBER $STRING \( FALSE NEW NULL THIS TRUE

  :ARGUMENTS -> \( \)                                                 P27  [ARGUMENTS-EMPTY]
              | \( :ARGUMENT-LIST \)                                  P28  [ARGUMENTS-LIST]
    Initial terminals: \(

  :ARGUMENT-LIST -> #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>             P29  [ARGUMENT-LIST-ONE]
                  | :ARGUMENT-LIST \, #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>   P30  [ARGUMENT-LIST-MORE]
    Initial terminals: ! $IDENTIFIER $NUMBER $STRING \( + ++ - -- DELETE FALSE NEW NULL THIS TRUE TYPEOF VOID ~

States:
  S0:
    :% -> . :PROGRAM                                                  {$$}
      :PROGRAM -> . :EXPRESSION $END                                  {$$}
      :EXPRESSION -> . #<a :COMMA-EXPRESSION ANY-VALUE>               {$END}
      #<a :COMMA-EXPRESSION ANY-VALUE> -> . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {$END}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {$END}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {$END}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {$END}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {$END ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {$END ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {$END && ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {$END && ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {$END && ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {$END && ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== $END & && < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== $END % & && * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== $END % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== $END % & && * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S3  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4
           #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :COMMA-EXPRESSION ANY-VALUE> => S7
           #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10
           #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :EXPRESSION => S32  :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :PROGRAM => S39

  S1:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ! . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S273

  S2:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce SHIFT-EXPRESSION-ADDITIVE   + => shift S183
                 - => shift S184

  S3:
    #<a :COMMA-EXPRESSION ANY-VALUE> -> #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .  {$END ]}
    Transitions: $END ] => reduce COMMA-EXPRESSION-ASSIGNMENT

  S4:
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> .  {$END && \) \, \: ? ] ^ \| |\|\||}
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> . & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
    Transitions: $END && \) \, \: ? ] ^ \| |\|\|| => reduce BITWISE-XOR-EXPRESSION-BITWISE-AND   & => shift S224

  S5:
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> .  {$END && \) \, \: ? ] |\|\||}
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> . \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] \| |\|\||}
    Transitions: $END && \) \, \: ? ] |\|\|| => reduce LOGICAL-AND-EXPRESSION-BITWISE-OR   \| => shift S220

  S6:
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> .  {$END && \) \, \: ? ] \| |\|\||}
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> . ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
    Transitions: $END && \) \, \: ? ] \| |\|\|| => reduce BITWISE-OR-EXPRESSION-BITWISE-XOR   ^ => shift S222

  S7:
    :EXPRESSION -> #<a :COMMA-EXPRESSION ANY-VALUE> .                 {$END ]}
    Transitions: $END ] => reduce EXPRESSION-COMMA-EXPRESSION

  S8:
    #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> #<a :CONDITIONAL-EXPRESSION ANY-VALUE> .  {$END \) \, \: ]}
    Transitions: $END \) \, \: ] => reduce ASSIGNMENT-EXPRESSION-CONDITIONAL

  S9:
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> .  {$END & && \) \, \: ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    Transitions: != => shift S226   !== => shift S227   $END & && \) \, \: ? ] ^ \| |\|\|| => reduce BITWISE-AND-EXPRESSION-EQUALITY
                 == => shift S228   === => shift S229

  S10:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> .  {$END \) \, \: ? ] |\|\||}
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> . && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] |\|\||}
    Transitions: $END \) \, \: ? ] |\|\|| => reduce LOGICAL-OR-EXPRESSION-LOGICAL-AND   && => shift S218

  S11:
    #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> . ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END \) \, \: ]}
    #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> .  {$END \) \, \: ]}
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> . |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>
        {$END \) \, \: ? ] |\|\||}
    Transitions: $END \) \, \: ] => reduce CONDITIONAL-EXPRESSION-LOGICAL-OR   ? => shift S267   |\|\|| => shift S268

  S12:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> . \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> . [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-MEMBER-EXPRESSION-CALL
                 \. => shift S108   [ => shift S109

  S13:
    #<a :NEW-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce NEW-EXPRESSION-MEMBER-EXPRESSION
                 \. => shift S91   [ => shift S93

  S14:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> . :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: \( => shift S47
    Gotos: :ARGUMENTS => S107

  S15:
    :LVALUE -> #<a :MEMBER-LVALUE CALL> .                             {\( ++ -- =}
    #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> #<a :MEMBER-LVALUE CALL> .
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-MEMBER-LVALUE
                 \( ++ -- = => reduce LVALUE-MEMBER-LVALUE-CALL

  S16:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> #<a :MEMBER-LVALUE NO-CALL> .
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    :LVALUE -> #<a :MEMBER-LVALUE NO-CALL> .                          {\( ++ -- =}
    Transitions: != !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-MEMBER-LVALUE
                 \( ++ -- = => reduce LVALUE-MEMBER-LVALUE-NO-CALL

  S17:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce ADDITIVE-EXPRESSION-MULTIPLICATIVE
                 % => shift S186   * => shift S187   / => shift S188

  S18:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> #<a :NEW-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-NEW

  S19:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> #<a :POSTFIX-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-POSTFIX

  S20:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: == === ? ] ^ \| |\|\|| => reduce EQUALITY-EXPRESSION-RELATIONAL   < => shift S231   <= => shift S232
                 > => shift S233   >= => shift S234

  S21:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> .  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\|| => reduce RELATIONAL-EXPRESSION-SHIFT   << => shift S200
                 >> => shift S201   >>> => shift S202

  S22:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce MULTIPLICATIVE-EXPRESSION-UNARY

  S23:
    :PRIMARY-LVALUE -> $IDENTIFIER .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-LVALUE-IDENTIFIER

  S24:
    :PRIMARY-RVALUE -> $NUMBER .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-NUMBER

  S25:
    :PRIMARY-RVALUE -> $STRING .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-STRING

  S26:
    :PRIMARY-RVALUE -> \( . #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( \) * \. / [}
    :PRIMARY-LVALUE -> \( . :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\( \) ++ -- \. = [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\( \) ++ -- \. = [}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& ^ \|}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {+ - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {+ - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {+ - < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / [}
      #<a :COMMA-EXPRESSION NO-L-VALUE> -> . #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE>  {\)}
      #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> . #<a :CONDITIONAL-EXPRESSION NO-L-VALUE>  {\)}
      #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\)}
      #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE>  {\)}
      #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
      #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE>  {\)}
      #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\)}
      #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> . #<a :BITWISE-OR-EXPRESSION NO-L-VALUE>  {\)}
      #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {\)}
      #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE>  {\)}
      #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {\)}
      #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> . #<a :BITWISE-AND-EXPRESSION NO-L-VALUE>  {\)}
      #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {\)}
      #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> . #<a :EQUALITY-EXPRESSION NO-L-VALUE>  {\)}
      #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {\)}
      #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> . #<a :RELATIONAL-EXPRESSION NO-L-VALUE>  {\)}
      #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> . #<a :SHIFT-EXPRESSION NO-L-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION NO-L-VALUE> -> . #<a :ADDITIVE-EXPRESSION NO-L-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION NO-L-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION NO-L-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION NO-L-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE>  {\)}
      #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> . #<a :UNARY-EXPRESSION NO-L-VALUE>  {\)}
      #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . #<a :POSTFIX-EXPRESSION NO-L-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . DELETE :LVALUE           {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF :LVALUE           {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ++ :LVALUE               {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . -- :LVALUE               {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . #<a :NEW-EXPRESSION NO-L-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE ++             {\)}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE --             {\)}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( \) ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( \) ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * ++ -- \. / = [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * + - \. / [}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE>  {\)}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {\)}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\( \)}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\( \)}
    Transitions: ! => shift S124   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S151
                 ++ => shift S152   - => shift S153   -- => shift S154   DELETE => shift S155   FALSE => shift S33   NEW => shift S157
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S159   VOID => shift S160   ~ => shift S161
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S61  #<a :NEW-EXPRESSION NO-L-VALUE> => S64  #<a :POSTFIX-EXPRESSION NO-L-VALUE> => S65
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S125  #<a :ADDITIVE-EXPRESSION NO-L-VALUE> => S126  #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> => S127
           #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S128  #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> => S129
           #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S130  #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> => S131
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S132  #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> => S133
           #<a :COMMA-EXPRESSION NO-L-VALUE> => S134  #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> => S135  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S136
           #<a :EQUALITY-EXPRESSION NO-L-VALUE> => S137  #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S138
           #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> => S139  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S140
           #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> => S141  #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S144  #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> => S145
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S146  #<a :RELATIONAL-EXPRESSION NO-L-VALUE> => S147  #<a :SHIFT-EXPRESSION ANY-VALUE> => S148
           #<a :SHIFT-EXPRESSION NO-L-VALUE> => S149  #<a :UNARY-EXPRESSION NO-L-VALUE> => S150  :LVALUE => S156  :PRIMARY-RVALUE => S158

  S27:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> + . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S123

  S28:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ++ . :LVALUE                  {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S74  :LVALUE => S122

  S29:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> - . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S121

  S30:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> -- . :LVALUE                  {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S74  :LVALUE => S120

  S31:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> DELETE . :LVALUE              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S74  :LVALUE => S119

  S32:
    :PROGRAM -> :EXPRESSION . $END                                    {$$}
    Transitions: $END => shift S118

  S33:
    :PRIMARY-RVALUE -> FALSE .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-FALSE

  S34:
    #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> :LVALUE . = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {$END \) \, \: ]}
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE . --                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE . ++                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: \( => shift S47   ++ => shift S48   -- => shift S49   = => shift S116
    Gotos: :ARGUMENTS => S50

  S35:
    #<a :NEW-EXPRESSION ANY-VALUE> -> NEW . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S87
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-LVALUE NO-CALL> => S85  :PRIMARY-RVALUE => S88  #<a :NEW-EXPRESSION ANY-VALUE> => S90
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S114

  S36:
    :PRIMARY-RVALUE -> NULL .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-NULL

  S37:
    #<a :MEMBER-LVALUE NO-CALL> -> :PRIMARY-LVALUE .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||
                   => reduce MEMBER-LVALUE-PRIMARY-LVALUE


  S38:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> :PRIMARY-RVALUE .
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> :PRIMARY-RVALUE .   {\(}
    Transitions: != !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE
                 \( => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE

  S39:
    :% -> :PROGRAM .                                                  {$$}
    Transitions: $$ => accept

  S40:
    :PRIMARY-RVALUE -> THIS .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-THIS

  S41:
    :PRIMARY-RVALUE -> TRUE .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-TRUE

  S42:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF . #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF . :LVALUE              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . #<a :POSTFIX-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . DELETE :LVALUE           {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF :LVALUE           {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ++ :LVALUE               {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . -- :LVALUE               {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . #<a :NEW-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE ++             {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE --             {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \( \) * + ++ \, - -- / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + ++ \, - -- / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: ! => shift S58   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S67
                 ++ => shift S68   - => shift S69   -- => shift S70   DELETE => shift S71   FALSE => shift S33   NEW => shift S73
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S75   VOID => shift S76   ~ => shift S77
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S61  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           #<a :NEW-EXPRESSION NO-L-VALUE> => S64  #<a :POSTFIX-EXPRESSION NO-L-VALUE> => S65  #<a :UNARY-EXPRESSION NO-L-VALUE> => S66
           :LVALUE => S72  :PRIMARY-RVALUE => S74

  S43:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> VOID . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S57

  S44:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ~ . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           #<a :UNARY-EXPRESSION ANY-VALUE> => S45  :LVALUE => S46

  S45:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ~ #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-BITWISE-NOT

  S46:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE . --                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE . ++                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: \( => shift S47   ++ => shift S48   -- => shift S49
    Gotos: :ARGUMENTS => S50

  S47:
    :ARGUMENTS -> \( . :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    :ARGUMENTS -> \( . \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\) \,}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) \, ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) \, ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) \, ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) \, ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) \, ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {&& \) \, ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) \, ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& \) \, ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \) \, ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {& && \) \, ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + \, - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + \, - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + \, - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
      :ARGUMENT-LIST -> . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>       {\) \,}
      :ARGUMENT-LIST -> . :ARGUMENT-LIST \, #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\) \,}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   \) => shift S52
                 + => shift S27   ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S51  :ARGUMENT-LIST => S53

  S48:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE ++ .                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-INCREMENT

  S49:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE -- .                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-DECREMENT

  S50:
    #<a :MEMBER-LVALUE CALL> -> :LVALUE :ARGUMENTS .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||
                   => reduce MEMBER-LVALUE-CALL-MEMBER-LVALUE


  S51:
    :ARGUMENT-LIST -> #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .         {\) \,}
    Transitions: \) \, => reduce ARGUMENT-LIST-ONE

  S52:
    :ARGUMENTS -> \( \) .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce ARGUMENTS-EMPTY

  S53:
    :ARGUMENTS -> \( :ARGUMENT-LIST . \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    :ARGUMENT-LIST -> :ARGUMENT-LIST . \, #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\) \,}
    Transitions: \) => shift S54   \, => shift S55

  S54:
    :ARGUMENTS -> \( :ARGUMENT-LIST \) .
        {!= !== $END % & && \( * + ++ - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \( * + ++ - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce ARGUMENTS-LIST

  S55:
    :ARGUMENT-LIST -> :ARGUMENT-LIST \, . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {\) \,}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\) \,}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) \, ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) \, ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) \, ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) \, ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) \, ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {&& \) \, ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) \, ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& \) \, ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \) \, ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {& && \) \, ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) \, < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + \, - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + \, - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + \, - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S56

  S56:
    :ARGUMENT-LIST -> :ARGUMENT-LIST \, #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .  {\) \,}
    Transitions: \) \, => reduce ARGUMENT-LIST-MORE

  S57:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> VOID #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-VOID

  S58:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ! . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S113

  S59:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> . \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> . [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: \. => shift S108   [ => shift S109

  S60:
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: \. => shift S91   [ => shift S93

  S61:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> . :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
    #<a :NEW-EXPRESSION NO-L-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce NEW-EXPRESSION-MEMBER-EXPRESSION
                 \( => shift S47
    Gotos: :ARGUMENTS => S107

  S62:
    :LVALUE -> #<a :MEMBER-LVALUE CALL> .
        {!= !== $END % & && \( \) * + ++ \, - -- / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> #<a :MEMBER-LVALUE CALL> .  {\. [}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce LVALUE-MEMBER-LVALUE-CALL
                 \. [ => reduce MEMBER-EXPRESSION-MEMBER-LVALUE

  S63:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> #<a :MEMBER-LVALUE NO-CALL> .  {\. [}
    :LVALUE -> #<a :MEMBER-LVALUE NO-CALL> .
        {!= !== $END % & && \( \) * + ++ \, - -- / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce LVALUE-MEMBER-LVALUE-NO-CALL
                 \. [ => reduce MEMBER-EXPRESSION-MEMBER-LVALUE

  S64:
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> #<a :NEW-EXPRESSION NO-L-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-NEW

  S65:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> #<a :POSTFIX-EXPRESSION NO-L-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-POSTFIX

  S66:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-TYPEOF-EXPRESSION

  S67:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> + . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S106

  S68:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ++ . :LVALUE                 {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S74  :LVALUE => S105

  S69:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> - . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S104

  S70:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> -- . :LVALUE                 {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S74  :LVALUE => S103

  S71:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> DELETE . :LVALUE             {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S74  :LVALUE => S98

  S72:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF :LVALUE .              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . --               {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . ++               {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( \)                                           {\( ++ -- \. [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {\( ++ -- \. [}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-TYPEOF-LVALUE
                 \( => shift S47   ++ => shift S82   -- => shift S83
    Gotos: :ARGUMENTS => S50

  S73:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    #<a :NEW-EXPRESSION NO-L-VALUE> -> NEW . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {\( \. [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\( \. [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\( \. [}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S87
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S84  #<a :MEMBER-LVALUE NO-CALL> => S85
           #<a :NEW-EXPRESSION ANY-VALUE> => S86  :PRIMARY-RVALUE => S88

  S74:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> :PRIMARY-RVALUE .    {\. [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> :PRIMARY-RVALUE .
        {!= !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE
                 \. [ => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE

  S75:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF . #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF . :LVALUE             {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . #<a :POSTFIX-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . DELETE :LVALUE           {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF :LVALUE           {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ++ :LVALUE               {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . -- :LVALUE               {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . #<a :NEW-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE ++             {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE --             {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \( \) * + ++ \, - -- / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + ++ \, - -- / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {\( ++ -- \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {\( ++ -- \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {\( ++ -- \. [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\( ++ --}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\( ++ --}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {\( ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {\( ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {\( ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {\( ++ -- \. [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: ! => shift S58   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S67
                 ++ => shift S68   - => shift S69   -- => shift S70   DELETE => shift S71   FALSE => shift S33   NEW => shift S73
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S75   VOID => shift S76   ~ => shift S77
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S61  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           #<a :NEW-EXPRESSION NO-L-VALUE> => S64  #<a :POSTFIX-EXPRESSION NO-L-VALUE> => S65  :PRIMARY-RVALUE => S74
           #<a :UNARY-EXPRESSION NO-L-VALUE> => S80  :LVALUE => S81

  S76:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> VOID . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S79

  S77:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ~ . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S78

  S78:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ~ #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-BITWISE-NOT

  S79:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> VOID #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-VOID

  S80:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-TYPEOF-EXPRESSION

  S81:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF :LVALUE .             {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . --               {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . ++               {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS                  {\( ++ -- \. [}
      :ARGUMENTS -> . \( \)                                           {\( ++ -- \. [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {\( ++ -- \. [}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-TYPEOF-LVALUE
                 \( => shift S47   ++ => shift S82   -- => shift S83
    Gotos: :ARGUMENTS => S50

  S82:
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE ++ .               {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-INCREMENT

  S83:
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE -- .               {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce POSTFIX-EXPRESSION-DECREMENT

  S84:
    #<a :NEW-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {\. [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER  {\( \. [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]  {\( \. [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce NEW-EXPRESSION-MEMBER-EXPRESSION
                 \( => shift S47   \. => shift S91   [ => shift S93
    Gotos: :ARGUMENTS => S97

  S85:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> #<a :MEMBER-LVALUE NO-CALL> .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-MEMBER-LVALUE

  S86:
    #<a :NEW-EXPRESSION NO-L-VALUE> -> NEW #<a :NEW-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce NEW-EXPRESSION-NEW

  S87:
    #<a :NEW-EXPRESSION ANY-VALUE> -> NEW . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S87
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-LVALUE NO-CALL> => S85  :PRIMARY-RVALUE => S88  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S89
           #<a :NEW-EXPRESSION ANY-VALUE> => S90

  S88:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> :PRIMARY-RVALUE .
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE

  S89:
    #<a :NEW-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce NEW-EXPRESSION-MEMBER-EXPRESSION
                 \( => shift S47   \. => shift S91   [ => shift S93
    Gotos: :ARGUMENTS => S92

  S90:
    #<a :NEW-EXPRESSION ANY-VALUE> -> NEW #<a :NEW-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce NEW-EXPRESSION-NEW

  S91:
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: $IDENTIFIER => shift S96

  S92:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce MEMBER-EXPRESSION-NEW

  S93:
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ . :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :EXPRESSION -> . #<a :COMMA-EXPRESSION ANY-VALUE>               {]}
      #<a :COMMA-EXPRESSION ANY-VALUE> -> . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {]}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? ] |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? ] |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? ] \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & && + - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S3  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4
           #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :COMMA-EXPRESSION ANY-VALUE> => S7
           #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10
           #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :EXPRESSION => S94

  S94:
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION . ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: ] => shift S95

  S95:
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ] .
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce MEMBER-LVALUE-ARRAY

  S96:
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-LVALUE-PROPERTY

  S97:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .  {\. [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .
        {!= !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce MEMBER-EXPRESSION-NEW
                 \. [ => reduce MEMBER-EXPRESSION-NEW

  S98:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> DELETE :LVALUE .             {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-DELETE   \( => shift S47
    Gotos: :ARGUMENTS => S50

  S99:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\( \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\( \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\( \. [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {\( \. [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\( \. [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\( \. [}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S101
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-LVALUE NO-CALL> => S85  :PRIMARY-RVALUE => S88  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S100

  S100:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {\. [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER  {\( \. [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]  {\( \. [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {\(}
      :ARGUMENTS -> . \( \)                                           {\( \. [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {\( \. [}
    Transitions: \( => shift S47   \. => shift S91   [ => shift S93
    Gotos: :ARGUMENTS => S97

  S101:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\( \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\( \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\( \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\( \. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {\( \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {\( \. [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\( \. [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\( \. [}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S101
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-LVALUE NO-CALL> => S85  :PRIMARY-RVALUE => S88  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S102

  S102:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {\( \. [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER  {\( \. [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]  {\( \. [}
      :ARGUMENTS -> . \( \)                                           {\( \. [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {\( \. [}
    Transitions: \( => shift S47   \. => shift S91   [ => shift S93
    Gotos: :ARGUMENTS => S92

  S103:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> -- :LVALUE .                 {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-DECREMENT   \( => shift S47
    Gotos: :ARGUMENTS => S50

  S104:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> - #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-MINUS

  S105:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ++ :LVALUE .                 {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-INCREMENT   \( => shift S47
    Gotos: :ARGUMENTS => S50

  S106:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> + #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-PLUS

  S107:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||
                   => reduce MEMBER-LVALUE-CALL-MEMBER-EXPRESSION-NO-CALL


  S108:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: $IDENTIFIER => shift S112

  S109:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ . :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :EXPRESSION -> . #<a :COMMA-EXPRESSION ANY-VALUE>               {]}
      #<a :COMMA-EXPRESSION ANY-VALUE> -> . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {]}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? ] |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? ] |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? ] \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & && + - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== % & && \( * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && * + - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S3  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4
           #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :COMMA-EXPRESSION ANY-VALUE> => S7
           #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10
           #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :EXPRESSION => S110

  S110:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION . ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: ] => shift S111

  S111:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ] .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce MEMBER-LVALUE-ARRAY

  S112:
    #<a :MEMBER-LVALUE CALL> -> #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-LVALUE-PROPERTY

  S113:
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ! #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ^ \| |\|\|| => reduce UNARY-EXPRESSION-LOGICAL-NOT

  S114:
    #<a :NEW-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {\(}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce NEW-EXPRESSION-MEMBER-EXPRESSION
                 \( => shift S47   \. => shift S91   [ => shift S93
    Gotos: :ARGUMENTS => S115

  S115:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .  {\(}
    Transitions: != !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce MEMBER-EXPRESSION-NEW
                 \( => reduce MEMBER-EXPRESSION-NEW

  S116:
    #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> :LVALUE = . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {$END \) \, \: ]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {$END \) \, ]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {$END \) \, ]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {$END \) \, ]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END \) \, ]}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {$END \) \, ? ] |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>
        {$END \) \, ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {$END && \) \, ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
        {$END && \) \, ? ] |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {$END && \) \, ? ] \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {$END && \) \, ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && \) \, ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S117

  S117:
    #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .  {$END \) \, ]}
    Transitions: $END \) \, ] => reduce ASSIGNMENT-EXPRESSION-ASSIGNMENT

  S118:
    :PROGRAM -> :EXPRESSION $END .                                    {$$}
    Transitions: $$ => reduce PROGRAM

  S119:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> DELETE :LVALUE .              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-DELETE   \( => shift S47
    Gotos: :ARGUMENTS => S50

  S120:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> -- :LVALUE .                  {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-DECREMENT
                 \( => shift S47
    Gotos: :ARGUMENTS => S50

  S121:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> - #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-MINUS

  S122:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ++ :LVALUE .                  {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-INCREMENT
                 \( => shift S47
    Gotos: :ARGUMENTS => S50

  S123:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> + #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-PLUS

  S124:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ! . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ! . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           :PRIMARY-LVALUE => S37  :LVALUE => S46  #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :UNARY-EXPRESSION ANY-VALUE> => S266

  S125:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {!= !== < << <= == === > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {+ - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {+ - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\)}
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\)}
    Transitions: != !== < << <= == === > >= >> >>> => reduce SHIFT-EXPRESSION-ADDITIVE   + => shift S262   - => shift S263

  S126:
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce SHIFT-EXPRESSION-ADDITIVE

  S127:
    #<a :COMMA-EXPRESSION NO-L-VALUE> -> #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce COMMA-EXPRESSION-ASSIGNMENT

  S128:
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> .  {&& ^ \|}
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> . & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& ^ \|}
    #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> . & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {\)}
    Transitions: & => shift S260   && ^ \| => reduce BITWISE-XOR-EXPRESSION-BITWISE-AND

  S129:
    #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce BITWISE-XOR-EXPRESSION-BITWISE-AND

  S130:
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> .  {&& ? |\|\||}
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> . \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? \| |\|\||}
    #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> . \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {\)}
    Transitions: && ? |\|\|| => reduce LOGICAL-AND-EXPRESSION-BITWISE-OR   \| => shift S258

  S131:
    #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce LOGICAL-AND-EXPRESSION-BITWISE-OR

  S132:
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> .  {&& ? \| |\|\||}
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> . ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& ^ \|}
    #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> . ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {\)}
    Transitions: && ? \| |\|\|| => reduce BITWISE-OR-EXPRESSION-BITWISE-XOR   ^ => shift S256

  S133:
    #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce BITWISE-OR-EXPRESSION-BITWISE-XOR

  S134:
    :PRIMARY-RVALUE -> \( #<a :COMMA-EXPRESSION NO-L-VALUE> . \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: \) => shift S255

  S135:
    #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce ASSIGNMENT-EXPRESSION-CONDITIONAL

  S136:
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> .  {& ^ \|}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
    Transitions: != => shift S247   !== => shift S248   & ^ \| => reduce BITWISE-AND-EXPRESSION-EQUALITY   == => shift S249   === => shift S250

  S137:
    #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce BITWISE-AND-EXPRESSION-EQUALITY

  S138:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> .  {? |\|\||}
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> . && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? |\|\||}
    #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> . && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {\)}
    Transitions: && => shift S245   ? |\|\|| => reduce LOGICAL-OR-EXPRESSION-LOGICAL-AND

  S139:
    #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce LOGICAL-OR-EXPRESSION-LOGICAL-AND

  S140:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> . |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? |\|\||}
    #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> . ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
    #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> . |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\)}
    Transitions: ? => shift S215   |\|\|| => shift S216

  S141:
    #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce CONDITIONAL-EXPRESSION-LOGICAL-OR

  S142:
    :LVALUE -> #<a :MEMBER-LVALUE CALL> .                             {\( \) ++ -- =}
    #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> #<a :MEMBER-LVALUE CALL> .  {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    Transitions: != !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce MEMBER-EXPRESSION-MEMBER-LVALUE
                 \( \) ++ -- = => reduce LVALUE-MEMBER-LVALUE-CALL

  S143:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> #<a :MEMBER-LVALUE NO-CALL> .
        {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    :LVALUE -> #<a :MEMBER-LVALUE NO-CALL> .                          {\( \) ++ -- =}
    Transitions: != !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce MEMBER-EXPRESSION-MEMBER-LVALUE
                 \( \) ++ -- = => reduce LVALUE-MEMBER-LVALUE-NO-CALL

  S144:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .  {+ - < << <= > >= >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
    Transitions: % => shift S209   * => shift S210   + - < << <= > >= >> >>> => reduce ADDITIVE-EXPRESSION-MULTIPLICATIVE   / => shift S211

  S145:
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce ADDITIVE-EXPRESSION-MULTIPLICATIVE

  S146:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {!= !== & == === ^}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
    Transitions: != !== & == === ^ => reduce EQUALITY-EXPRESSION-RELATIONAL   < => shift S195   <= => shift S196   > => shift S197
                 >= => shift S198

  S147:
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce EQUALITY-EXPRESSION-RELATIONAL

  S148:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> .  {!= !== & < <= == === > >=}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
    Transitions: != !== & < <= == === > >= => reduce RELATIONAL-EXPRESSION-SHIFT   << => shift S179   >> => shift S180   >>> => shift S181

  S149:
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce RELATIONAL-EXPRESSION-SHIFT

  S150:
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :UNARY-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: \) => reduce MULTIPLICATIVE-EXPRESSION-UNARY

  S151:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> + . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> + . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           :PRIMARY-LVALUE => S37  :LVALUE => S46  #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :UNARY-EXPRESSION ANY-VALUE> => S178

  S152:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ++ . :LVALUE                  {% * + - /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ++ . :LVALUE                 {\)}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {% \( \) * /}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {% \( \) * /}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \( * /}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \( * /}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S158  :LVALUE => S177

  S153:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> - . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> - . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           :PRIMARY-LVALUE => S37  :LVALUE => S46  #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :UNARY-EXPRESSION ANY-VALUE> => S176

  S154:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> -- . :LVALUE                  {% * + - /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> -- . :LVALUE                 {\)}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {% \( \) * /}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {% \( \) * /}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \( * /}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \( * /}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S158  :LVALUE => S175

  S155:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> DELETE . :LVALUE              {% * + - /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> DELETE . :LVALUE             {\)}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {% \( \) * /}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {% \( \) * /}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \( * /}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \( * /}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S99
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           :PRIMARY-RVALUE => S158  :LVALUE => S174

  S156:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE . --                {% * + - /}
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE . ++                {% * + - /}
    #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> :LVALUE . = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\)}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . --               {\)}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . ++               {\)}
    :PRIMARY-LVALUE -> \( :LVALUE . \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS                  {% \( \) * ++ -- \. / = [}
      :ARGUMENTS -> . \( \)                                           {% \( \) * ++ -- \. / = [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {% \( \) * ++ -- \. / = [}
    Transitions: \( => shift S47   \) => shift S169   ++ => shift S170   -- => shift S171   = => shift S172
    Gotos: :ARGUMENTS => S50

  S157:
    #<a :NEW-EXPRESSION ANY-VALUE> -> NEW . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% \) * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - /}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% \( \) * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% \( \) * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% \( \) * + - \. / [}
    #<a :NEW-EXPRESSION NO-L-VALUE> -> NEW . #<a :NEW-EXPRESSION ANY-VALUE>  {\)}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\( \)}
      :PRIMARY-RVALUE -> . THIS                                       {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( \) * + - \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( \) * + - \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + - \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + - \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \( \) * + - \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \( \) * + - \. / [}
    Transitions: $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   FALSE => shift S33   NEW => shift S87
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-LVALUE NO-CALL> => S85  :PRIMARY-RVALUE => S88  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S166
           #<a :NEW-EXPRESSION ANY-VALUE> => S167

  S158:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> :PRIMARY-RVALUE .    {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> :PRIMARY-RVALUE .   {\( \)}
    Transitions: != !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\|| => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE
                 \( \) => reduce MEMBER-EXPRESSION-PRIMARY-RVALUE

  S159:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF . #<a :UNARY-EXPRESSION NO-L-VALUE>  {% * + - /}
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF . :LVALUE              {% * + - /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF . #<a :UNARY-EXPRESSION NO-L-VALUE>  {\)}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF . :LVALUE             {\)}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . #<a :POSTFIX-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . DELETE :LVALUE           {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF :LVALUE           {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ++ :LVALUE               {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . -- :LVALUE               {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION NO-L-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\. [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * \. / [}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . #<a :NEW-EXPRESSION NO-L-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE ++             {% * /}
      #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> . :LVALUE --             {% * /}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {% \( \) * ++ -- /}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {% \( \) * ++ -- /}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {\( ++ -- \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {\( ++ -- \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {\( ++ -- \. [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\( ++ --}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\( ++ --}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {\( ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {\( ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {\( ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {\( ++ -- \. [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\. [}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE>  {% * /}
      #<a :NEW-EXPRESSION NO-L-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {% \( * /}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% \( * /}
    Transitions: ! => shift S58   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S67
                 ++ => shift S68   - => shift S69   -- => shift S70   DELETE => shift S71   FALSE => shift S33   NEW => shift S73
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S75   VOID => shift S76   ~ => shift S77
    Gotos: :PRIMARY-LVALUE => S37  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S59  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S60
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S61  #<a :MEMBER-LVALUE CALL> => S62  #<a :MEMBER-LVALUE NO-CALL> => S63
           #<a :NEW-EXPRESSION NO-L-VALUE> => S64  #<a :POSTFIX-EXPRESSION NO-L-VALUE> => S65  :PRIMARY-RVALUE => S74
           #<a :UNARY-EXPRESSION NO-L-VALUE> => S164  :LVALUE => S165

  S160:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> VOID . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> VOID . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           :PRIMARY-LVALUE => S37  :LVALUE => S46  #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :UNARY-EXPRESSION ANY-VALUE> => S163

  S161:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ~ . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ~ . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * ++ -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           :PRIMARY-LVALUE => S37  :LVALUE => S46  #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :UNARY-EXPRESSION ANY-VALUE> => S162

  S162:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ~ #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ~ #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * / => reduce UNARY-EXPRESSION-BITWISE-NOT   \) => reduce UNARY-EXPRESSION-BITWISE-NOT

  S163:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> VOID #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> VOID #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * / => reduce UNARY-EXPRESSION-VOID   \) => reduce UNARY-EXPRESSION-VOID

  S164:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE> .  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE> .  {\)}
    Transitions: % * / => reduce UNARY-EXPRESSION-TYPEOF-EXPRESSION   \) => reduce UNARY-EXPRESSION-TYPEOF-EXPRESSION

  S165:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> TYPEOF :LVALUE .              {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> TYPEOF :LVALUE .             {\)}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . --               {% * /}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE . ++               {% * /}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS                  {\( ++ -- \. [}
      :ARGUMENTS -> . \( \)                                           {\( ++ -- \. [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {\( ++ -- \. [}
    Transitions: % * / => reduce UNARY-EXPRESSION-TYPEOF-LVALUE   \( => shift S47   \) => reduce UNARY-EXPRESSION-TYPEOF-LVALUE   ++ => shift S82
                 -- => shift S83
    Gotos: :ARGUMENTS => S50

  S166:
    #<a :NEW-EXPRESSION ANY-VALUE> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> .  {% \) * + - /}
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {% * + - \. / [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . \. $IDENTIFIER  {% \( \) * + - \. / [}
    #<a :MEMBER-LVALUE NO-CALL> -> #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . [ :EXPRESSION ]  {% \( \) * + - \. / [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> . :ARGUMENTS  {\( \)}
      :ARGUMENTS -> . \( \)                                           {% \( \) * \. / [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {% \( \) * \. / [}
    Transitions: % \) * + - / => reduce NEW-EXPRESSION-MEMBER-EXPRESSION   \( => shift S47   \. => shift S91   [ => shift S93
    Gotos: :ARGUMENTS => S168

  S167:
    #<a :NEW-EXPRESSION ANY-VALUE> -> NEW #<a :NEW-EXPRESSION ANY-VALUE> .  {% * + - /}
    #<a :NEW-EXPRESSION NO-L-VALUE> -> NEW #<a :NEW-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * + - / => reduce NEW-EXPRESSION-NEW   \) => reduce NEW-EXPRESSION-NEW

  S168:
    #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .  {% * \. / [}
    #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS .  {\( \)}
    Transitions: % * \. / [ => reduce MEMBER-EXPRESSION-NEW   \( \) => reduce MEMBER-EXPRESSION-NEW

  S169:
    :PRIMARY-LVALUE -> \( :LVALUE \) .
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||
                   => reduce PRIMARY-LVALUE-PARENTHESES


  S170:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE ++ .                {% * + - /}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE ++ .               {\)}
    Transitions: % * + - / => reduce POSTFIX-EXPRESSION-INCREMENT   \) => reduce POSTFIX-EXPRESSION-INCREMENT

  S171:
    #<a :POSTFIX-EXPRESSION ANY-VALUE> -> :LVALUE -- .                {% * + - /}
    #<a :POSTFIX-EXPRESSION NO-L-VALUE> -> :LVALUE -- .               {\)}
    Transitions: % * + - / => reduce POSTFIX-EXPRESSION-DECREMENT   \) => reduce POSTFIX-EXPRESSION-DECREMENT

  S172:
    #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> :LVALUE = . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\)}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\)}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {\)}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& \) ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \) ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {& && \) ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S173

  S173:
    #<a :ASSIGNMENT-EXPRESSION NO-L-VALUE> -> :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: \) => reduce ASSIGNMENT-EXPRESSION-ASSIGNMENT

  S174:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> DELETE :LVALUE .              {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> DELETE :LVALUE .             {\)}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS                  {% \( * \. / [}
      :ARGUMENTS -> . \( \)                                           {% \( * \. / [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {% \( * \. / [}
    Transitions: % * / => reduce UNARY-EXPRESSION-DELETE   \( => shift S47   \) => reduce UNARY-EXPRESSION-DELETE
    Gotos: :ARGUMENTS => S50

  S175:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> -- :LVALUE .                  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> -- :LVALUE .                 {\)}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS                  {% \( * \. / [}
      :ARGUMENTS -> . \( \)                                           {% \( * \. / [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {% \( * \. / [}
    Transitions: % * / => reduce UNARY-EXPRESSION-DECREMENT   \( => shift S47   \) => reduce UNARY-EXPRESSION-DECREMENT
    Gotos: :ARGUMENTS => S50

  S176:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> - #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> - #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * / => reduce UNARY-EXPRESSION-MINUS   \) => reduce UNARY-EXPRESSION-MINUS

  S177:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ++ :LVALUE .                  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ++ :LVALUE .                 {\)}
    #<a :MEMBER-LVALUE CALL> -> :LVALUE . :ARGUMENTS                  {% \( * \. / [}
      :ARGUMENTS -> . \( \)                                           {% \( * \. / [}
      :ARGUMENTS -> . \( :ARGUMENT-LIST \)                            {% \( * \. / [}
    Transitions: % * / => reduce UNARY-EXPRESSION-INCREMENT   \( => shift S47   \) => reduce UNARY-EXPRESSION-INCREMENT
    Gotos: :ARGUMENTS => S50

  S178:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> + #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> + #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * / => reduce UNARY-EXPRESSION-PLUS   \) => reduce UNARY-EXPRESSION-PLUS

  S179:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> << . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> << . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% \) * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% \) * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% \) * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% \) * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% \) * + - \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( \) * + - \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( \) * + - \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( \) * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + ++ - -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \) * + - \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \) * + - \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( \) * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( \) * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + ++ - -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% \) * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S194

  S180:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * + - / < << <= > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * + - \. / < << <= > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S193

  S181:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >>> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >>> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * + - / < << <= > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - / < << <= > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * + - \. / < << <= > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S182

  S182:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {< << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: \) => reduce SHIFT-EXPRESSION-RIGHT-UNSIGNED   + => shift S183   - => shift S184
                 < << <= > >= >> >>> => reduce SHIFT-EXPRESSION-RIGHT-UNSIGNED

  S183:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> + . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S192

  S184:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> - . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S185

  S185:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce ADDITIVE-EXPRESSION-SUBTRACT   % => shift S186
                 * => shift S187   / => shift S188

  S186:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S191

  S187:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S190

  S188:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S189

  S189:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce MULTIPLICATIVE-EXPRESSION-DIVIDE

  S190:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce MULTIPLICATIVE-EXPRESSION-MULTIPLY

  S191:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce MULTIPLICATIVE-EXPRESSION-REMAINDER

  S192:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce ADDITIVE-EXPRESSION-ADD   % => shift S186
                 * => shift S187   / => shift S188

  S193:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {< << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: \) => reduce SHIFT-EXPRESSION-RIGHT-SIGNED   + => shift S183   - => shift S184
                 < << <= > >= >> >>> => reduce SHIFT-EXPRESSION-RIGHT-SIGNED

  S194:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {< << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
    #<a :SHIFT-EXPRESSION NO-L-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: \) => reduce SHIFT-EXPRESSION-LEFT   + => shift S183   - => shift S184   < << <= > >= >> >>> => reduce SHIFT-EXPRESSION-LEFT

  S195:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> < . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> < . #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - << >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - << >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% \) * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% \) * + - / << >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% \) * + - \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% \) * + - \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( \) * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( \) * + - \. / << >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( \) * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + ++ - -- \. / << >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \) * + - \. / << >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \) * + - \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( \) * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( \) * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% \) * + - \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S208

  S196:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= . #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S207

  S197:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> > . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> > . #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S206

  S198:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= . #<a :SHIFT-EXPRESSION ANY-VALUE>  {\)}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % \( * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {!= !== % \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S199

  S199:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE> .  {!= !== < <= == === > >=}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== < <= == === > >= => reduce RELATIONAL-EXPRESSION-GREATER-OR-EQUAL   \) => reduce RELATIONAL-EXPRESSION-GREATER-OR-EQUAL
                 << => shift S200   >> => shift S201   >>> => shift S202

  S200:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> << . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S205

  S201:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S204

  S202:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >>> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S203

  S203:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce SHIFT-EXPRESSION-RIGHT-UNSIGNED   + => shift S183
                 - => shift S184

  S204:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce SHIFT-EXPRESSION-RIGHT-SIGNED   + => shift S183
                 - => shift S184

  S205:
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> . + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce SHIFT-EXPRESSION-LEFT   + => shift S183
                 - => shift S184

  S206:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE> .  {!= !== < <= == === > >=}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== < <= == === > >= => reduce RELATIONAL-EXPRESSION-GREATER   \) => reduce RELATIONAL-EXPRESSION-GREATER   << => shift S200
                 >> => shift S201   >>> => shift S202

  S207:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE> .  {!= !== < <= == === > >=}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== < <= == === > >= => reduce RELATIONAL-EXPRESSION-LESS-OR-EQUAL   \) => reduce RELATIONAL-EXPRESSION-LESS-OR-EQUAL
                 << => shift S200   >> => shift S201   >>> => shift S202

  S208:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE> .  {!= !== < <= == === > >=}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
    #<a :RELATIONAL-EXPRESSION NO-L-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== < <= == === > >= => reduce RELATIONAL-EXPRESSION-LESS   \) => reduce RELATIONAL-EXPRESSION-LESS   << => shift S200
                 >> => shift S201   >>> => shift S202

  S209:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * + - \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * + - \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * + - \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S214

  S210:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {\)}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {\)}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {\)}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {\)}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {\) \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {\) \. [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\) \. [}
      :PRIMARY-RVALUE -> . THIS                                       {\( \) \. [}
      :PRIMARY-RVALUE -> . NULL                                       {\( \) \. [}
      :PRIMARY-RVALUE -> . TRUE                                       {\( \) \. [}
      :PRIMARY-RVALUE -> . FALSE                                      {\( \) \. [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {\( \) \. [}
      :PRIMARY-RVALUE -> . $STRING                                    {\( \) \. [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {\( \) \. [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {\( \) ++ -- \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {\( \) ++ -- \. [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {\( \) ++ -- \. [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {\) \. [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {\) \. [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {\( \) ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {\( \) ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {\( \) ++ -- \. [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {\( \) ++ -- \. [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {\) \. [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S213

  S211:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / . #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / . #<a :UNARY-EXPRESSION ANY-VALUE>  {\)}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * + - /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * + - /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * + - \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * + - \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * + - \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * + - \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * + - \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :UNARY-EXPRESSION ANY-VALUE> => S212

  S212:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * + - /}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * + - / => reduce MULTIPLICATIVE-EXPRESSION-DIVIDE   \) => reduce MULTIPLICATIVE-EXPRESSION-DIVIDE

  S213:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * + - /}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * + - / => reduce MULTIPLICATIVE-EXPRESSION-MULTIPLY   \) => reduce MULTIPLICATIVE-EXPRESSION-MULTIPLY

  S214:
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * + - /}
    #<a :MULTIPLICATIVE-EXPRESSION NO-L-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * + - / => reduce MULTIPLICATIVE-EXPRESSION-REMAINDER   \) => reduce MULTIPLICATIVE-EXPRESSION-REMAINDER

  S215:
    #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {\:}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\:}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {\:}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\:}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\: ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\: ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \: ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \: ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \: ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \: ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \: ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& \: ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \: ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {& && \: ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20
           #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :LVALUE => S34  :PRIMARY-LVALUE => S37
           #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S242

  S216:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {? |\|\||}
    #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\)}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) \|}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) \|}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ^ \|}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \) ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \) ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \) < << <= == === > >= >> >>> ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ^ \|}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & && \) + - < << <= == === > >= >> >>> ^ \|}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ^ \|}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S217

  S217:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> .  {? |\|\||}
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> . && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
    #<a :LOGICAL-OR-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: && => shift S218   \) => reduce LOGICAL-OR-EXPRESSION-OR   ? |\|\|| => reduce LOGICAL-OR-EXPRESSION-OR

  S218:
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6
           #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S219

  S219:
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE> .
        {$END && \) \, \: ? ] |\|\||}
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> . \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] \| |\|\||}
    Transitions: $END && \) \, \: ? ] |\|\|| => reduce LOGICAL-AND-EXPRESSION-AND   \| => shift S220

  S220:
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S221

  S221:
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> .
        {$END && \) \, \: ? ] \| |\|\||}
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> . ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
    Transitions: $END && \) \, \: ? ] \| |\|\|| => reduce BITWISE-OR-EXPRESSION-OR   ^ => shift S222

  S222:
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S223

  S223:
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE> .
        {$END && \) \, \: ? ] ^ \| |\|\||}
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> . & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
    Transitions: $END && \) \, \: ? ] ^ \| |\|\|| => reduce BITWISE-XOR-EXPRESSION-XOR   & => shift S224

  S224:
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & . #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :EQUALITY-EXPRESSION ANY-VALUE> => S225

  S225:
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE> .
        {$END & && \) \, \: ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    Transitions: != => shift S226   !== => shift S227   $END & && \) \, \: ? ] ^ \| |\|\|| => reduce BITWISE-AND-EXPRESSION-AND   == => shift S228
                 === => shift S229

  S226:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> != . #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S241

  S227:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> !== . #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S240

  S228:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> == . #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S239

  S229:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> === . #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S230

  S230:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: == === ? ] ^ \| |\|\|| => reduce EQUALITY-EXPRESSION-STRICT-EQUAL   < => shift S231   <= => shift S232
                 > => shift S233   >= => shift S234

  S231:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> < . #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S238

  S232:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= . #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S237

  S233:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> > . #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S236

  S234:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= . #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38
           :LVALUE => S46  #<a :SHIFT-EXPRESSION ANY-VALUE> => S235

  S235:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\|| => reduce RELATIONAL-EXPRESSION-GREATER-OR-EQUAL   << => shift S200
                 >> => shift S201   >>> => shift S202

  S236:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\|| => reduce RELATIONAL-EXPRESSION-GREATER   << => shift S200
                 >> => shift S201   >>> => shift S202

  S237:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\|| => reduce RELATIONAL-EXPRESSION-LESS-OR-EQUAL   << => shift S200
                 >> => shift S201   >>> => shift S202

  S238:
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    #<a :SHIFT-EXPRESSION ANY-VALUE> -> #<a :SHIFT-EXPRESSION ANY-VALUE> . << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\|| => reduce RELATIONAL-EXPRESSION-LESS   << => shift S200
                 >> => shift S201   >>> => shift S202

  S239:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: == === ? ] ^ \| |\|\|| => reduce EQUALITY-EXPRESSION-EQUAL   < => shift S231   <= => shift S232
                 > => shift S233   >= => shift S234

  S240:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: == === ? ] ^ \| |\|\|| => reduce EQUALITY-EXPRESSION-STRICT-NOT-EQUAL   < => shift S231
                 <= => shift S232   > => shift S233   >= => shift S234

  S241:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE> .
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
    Transitions: != !== $END & && \) \, \: == === ? ] ^ \| |\|\|| => reduce EQUALITY-EXPRESSION-NOT-EQUAL   < => shift S231   <= => shift S232
                 > => shift S233   >= => shift S234

  S242:
    #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> . \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
    Transitions: \: => shift S243

  S243:
    #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\)}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {\)}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\)}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\) ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \) ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& \) ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \) ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {& && \) ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \) == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \) < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \) + - < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && \) * + - / < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( \) * + ++ - -- \. / < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && \) * + - \. / < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S244

  S244:
    #<a :CONDITIONAL-EXPRESSION NO-L-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .
        {\)}
    Transitions: \) => reduce CONDITIONAL-EXPRESSION-CONDITIONAL

  S245:
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& ? |\|\||}
    #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {\)}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {\) ^ \|}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {\) ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & \) == === ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & \) == === ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^ \|}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & \) < << <= == === > >= >> >>> ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>> ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>> ^ \|}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>> ^ \|}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & \) + - < << <= == === > >= >> >>> ^ \|}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) + - < << <= == === > >= >> >>> ^ \|}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) + - < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^ \|}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6
           #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S246

  S246:
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE> .  {&& ? |\|\||}
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> . \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \) ? \| |\|\||}
    #<a :LOGICAL-AND-EXPRESSION NO-L-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: && ? |\|\|| => reduce LOGICAL-AND-EXPRESSION-AND   \) => reduce LOGICAL-AND-EXPRESSION-AND   \| => shift S220

  S247:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> != . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> != . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :LVALUE => S46
           #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S254

  S248:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> !== . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> !== . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :LVALUE => S46
           #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S253

  S249:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> == . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> == . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\) < << <= > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\) < << <= > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\) < << <= > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {\) < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {\) + - < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / < << <= > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% \) * + - / < << <= > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% \) * + - / < << <= > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * + - / < << <= > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% \) * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% \) * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( \) * + - \. / < << <= > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \) * + - \. / < << <= > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \) * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * + ++ - -- \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% \) * + - \. / < << <= > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S252

  S250:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> === . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & == === ^}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> === . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {\)}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & \( * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :LVALUE => S46
           #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S251

  S251:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {!= !== & == ===}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== & == === => reduce EQUALITY-EXPRESSION-STRICT-EQUAL   \) => reduce EQUALITY-EXPRESSION-STRICT-EQUAL   < => shift S231
                 <= => shift S232   > => shift S233   >= => shift S234

  S252:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {!= !== & == ===}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== & == === => reduce EQUALITY-EXPRESSION-EQUAL   \) => reduce EQUALITY-EXPRESSION-EQUAL   < => shift S231   <= => shift S232
                 > => shift S233   >= => shift S234

  S253:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {!= !== & == ===}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== & == === => reduce EQUALITY-EXPRESSION-STRICT-NOT-EQUAL   \) => reduce EQUALITY-EXPRESSION-STRICT-NOT-EQUAL
                 < => shift S231   <= => shift S232   > => shift S233   >= => shift S234

  S254:
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {!= !== & == ===}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> #<a :RELATIONAL-EXPRESSION ANY-VALUE> . < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
    #<a :EQUALITY-EXPRESSION NO-L-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != !== & == === => reduce EQUALITY-EXPRESSION-NOT-EQUAL   \) => reduce EQUALITY-EXPRESSION-NOT-EQUAL   < => shift S231
                 <= => shift S232   > => shift S233   >= => shift S234

  S255:
    :PRIMARY-RVALUE -> \( #<a :COMMA-EXPRESSION NO-L-VALUE> \) .
        {!= !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
    Transitions: != !== $END % & && \( \) * + \, - \. / < << <= == === > >= >> >>> ? [ ] ^ \| |\|\|| => reduce PRIMARY-RVALUE-PARENTHESES

  S256:
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& ^ \|}
    #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {\)}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^ \|}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == ===}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == ===}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == ===}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == ===}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == ===}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & \) + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S257

  S257:
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE> .  {^ \|}
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> . & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^ \|}
    #<a :BITWISE-XOR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: & => shift S224   \) => reduce BITWISE-XOR-EXPRESSION-XOR   ^ \| => reduce BITWISE-XOR-EXPRESSION-XOR

  S258:
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& ? \| |\|\||}
    #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {\)}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ^ \|}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ^ \|}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& \) ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & \) < <= == === > >= ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & \) < <= == === > >= ^}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & \) < << <= == === > >= >> >>> ^}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>> ^}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>> ^}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) < << <= == === > >= >> >>> ^}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== & \) + - < << <= == === > >= >> >>> ^}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) + - < << <= == === > >= >> >>> ^}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & \) + - < << <= == === > >= >> >>> ^}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & \) * + - / < << <= == === > >= >> >>> ^}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & \( \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & \) * + - \. / < << <= == === > >= >> >>> [ ^}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S259

  S259:
    #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> .  {&& \|}
    #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> . ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \) ^ \|}
    #<a :BITWISE-OR-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: && \| => reduce BITWISE-OR-EXPRESSION-OR   \) => reduce BITWISE-OR-EXPRESSION-OR   ^ => shift S222

  S260:
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& ^ \|}
    #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {\)}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== \) < <= == === > >=}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== \) < <= == === > >=}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== \) < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {!= !== \) + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== \) + - < << <= == === > >= >> >>>}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== \) + - < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % \) * + - / < << <= == === > >= >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {!= !== % \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % \( \) * + - \. / < << <= == === > >= >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % \) * + - \. / < << <= == === > >= >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % \( \) * + ++ - -- \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % \) * + - \. / < << <= == === > >= >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :EQUALITY-EXPRESSION ANY-VALUE> => S261

  S261:
    #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE> .  {& ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . === #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . != #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
    #<a :EQUALITY-EXPRESSION ANY-VALUE> -> #<a :EQUALITY-EXPRESSION ANY-VALUE> . == #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & \) == === ^}
    #<a :BITWISE-AND-EXPRESSION NO-L-VALUE> -> #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: != => shift S226   !== => shift S227   & ^ => reduce BITWISE-AND-EXPRESSION-AND   \) => reduce BITWISE-AND-EXPRESSION-AND
                 == => shift S228   === => shift S229

  S262:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> + . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {+ - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> + . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% \) * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% \) * /}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% \) * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% \) * /}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% \) * /}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% \) * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% \) * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% \) * \. / [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( \) * \. / [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( \) * \. / [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( \) * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * ++ -- \. / [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * ++ -- \. / [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% \) * \. / [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% \) * \. / [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( \) * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( \) * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( \) * ++ -- \. / [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( \) * ++ -- \. / [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% \) * \. / [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S265

  S263:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> - . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {+ - < << <= > >= >> >>>}
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> - . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>  {\)}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>  {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>  {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>  {% * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {% * + - / << >> >>>}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {% * + - / << >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>  {% * + - / << >> >>>}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {% * + - / << >> >>>}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {% * + - \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>  {% * + - \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {% * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . THIS                                       {% \( * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . NULL                                       {% \( * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . TRUE                                       {% \( * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . FALSE                                      {% \( * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . $NUMBER                                    {% \( * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . $STRING                                    {% \( * + - \. / << >> >>> [}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {% \( * + - \. / << >> >>> [}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE                {% \( * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / << >> >>> [}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {% * + - \. / << >> >>> [}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {% * + - \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS                {% \( * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS  {% \( * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]  {% \( * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER  {% \( * + ++ - -- \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {% * + - \. / << >> >>> [}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :LVALUE => S46  #<a :MEMBER-LVALUE CALL> => S142
           #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S264

  S264:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .  {+ - << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % => shift S186   \) => reduce ADDITIVE-EXPRESSION-SUBTRACT   * => shift S187
                 + - << >> >>> => reduce ADDITIVE-EXPRESSION-SUBTRACT   / => shift S188

  S265:
    #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .  {+ - << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . % #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . / #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
    #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> . * #<a :UNARY-EXPRESSION ANY-VALUE>
        {% \) * + - / << >> >>>}
    #<a :ADDITIVE-EXPRESSION NO-L-VALUE> -> #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % => shift S186   \) => reduce ADDITIVE-EXPRESSION-ADD   * => shift S187   + - << >> >>> => reduce ADDITIVE-EXPRESSION-ADD
                 / => shift S188

  S266:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ! #<a :UNARY-EXPRESSION ANY-VALUE> .  {% * /}
    #<a :UNARY-EXPRESSION NO-L-VALUE> -> ! #<a :UNARY-EXPRESSION ANY-VALUE> .  {\)}
    Transitions: % * / => reduce UNARY-EXPRESSION-LOGICAL-NOT   \) => reduce UNARY-EXPRESSION-LOGICAL-NOT

  S267:
    #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END \) \, \: ]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {\:}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {\:}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {\:}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {\:}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\: ? |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {\: ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \: ? |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {&& \: ? |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \: ? \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {&& \: ? \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {&& \: ? ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {&& \: ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {& && \: ? ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {& && \: ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== & && \: == === ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== & && \: < <= == === > >= ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>  {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== & && \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== & && + - \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>  {!= !== % & && * + - / \: < << <= == === > >= >> >>> ? ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE  {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS                                       {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL                                       {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE                                       {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE                                      {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER                                    {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING                                    {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)    {!= !== % & && \( * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER                                {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)                              {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== % & && \( * + ++ - -- \. / \: < << <= = == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>  {!= !== % & && * + - \. / \: < << <= == === > >= >> >>> ? [ ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17
           #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20
           #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :LVALUE => S34  :PRIMARY-LVALUE => S37
           #<a :MEMBER-LVALUE CALL> => S142  #<a :MEMBER-LVALUE NO-CALL> => S143  :PRIMARY-RVALUE => S158
           #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S270

  S268:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>
        {$END \) \, \: ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ --}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ --}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9  #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12
           #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13  #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15
           #<a :MEMBER-LVALUE NO-CALL> => S16  #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18
           #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19  #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21
           #<a :UNARY-EXPRESSION ANY-VALUE> => S22  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  :LVALUE => S46
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S269

  S269:
    #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> .
        {$END \) \, \: ? ] |\|\||}
    #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> . && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] |\|\||}
    Transitions: $END \) \, \: ? ] |\|\|| => reduce LOGICAL-OR-EXPRESSION-OR   && => shift S218

  S270:
    #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> . \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END \) \, \: ]}
    Transitions: \: => shift S271

  S271:
    #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: . #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END \) \, \: ]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE>  {$END \) \, \: ]}
      #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>
        {$END \) \, \: ]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . #<a :CONDITIONAL-EXPRESSION ANY-VALUE>  {$END \) \, \: ]}
      #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> -> . :LVALUE = #<a :ASSIGNMENT-EXPRESSION ANY-VALUE>  {$END \) \, \: ]}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>  {$END \) \, \: ? ] |\|\||}
      #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> |\|\|| #<a :LOGICAL-AND-EXPRESSION ANY-VALUE>
        {$END \) \, \: ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] |\|\||}
      #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> -> . #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> && #<a :BITWISE-OR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-OR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-OR-EXPRESSION ANY-VALUE> \| #<a :BITWISE-XOR-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE>  {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> ^ #<a :BITWISE-AND-EXPRESSION ANY-VALUE>
        {$END && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE>  {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :BITWISE-AND-EXPRESSION ANY-VALUE> -> . #<a :BITWISE-AND-EXPRESSION ANY-VALUE> & #<a :EQUALITY-EXPRESSION ANY-VALUE>
        {$END & && \) \, \: ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> == #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> != #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> === #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :EQUALITY-EXPRESSION ANY-VALUE> -> . #<a :EQUALITY-EXPRESSION ANY-VALUE> !== #<a :RELATIONAL-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: == === ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE>  {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> < #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> > #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> <= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :RELATIONAL-EXPRESSION ANY-VALUE> -> . #<a :RELATIONAL-EXPRESSION ANY-VALUE> >= #<a :SHIFT-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < <= == === > >= ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> << #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :SHIFT-EXPRESSION ANY-VALUE> -> . #<a :SHIFT-EXPRESSION ANY-VALUE> >>> #<a :ADDITIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) \, \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> + #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :ADDITIVE-EXPRESSION ANY-VALUE> -> . #<a :ADDITIVE-EXPRESSION ANY-VALUE> - #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE>
        {!= !== $END & && \) + \, - \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> * #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> / #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> -> . #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> % #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . #<a :POSTFIX-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . DELETE :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . VOID #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF :LVALUE            {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . TYPEOF #<a :UNARY-EXPRESSION NO-L-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ++ :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . -- :LVALUE                {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . + #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . - #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ~ #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :UNARY-EXPRESSION ANY-VALUE> -> . ! #<a :UNARY-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE ++              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :POSTFIX-EXPRESSION ANY-VALUE> -> . :LVALUE --              {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :NEW-EXPRESSION ANY-VALUE> -> . NEW #<a :NEW-EXPRESSION ANY-VALUE>
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . :PRIMARY-RVALUE
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE NO-CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . THIS
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . NULL
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . TRUE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . FALSE
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $NUMBER
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . $STRING
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-RVALUE -> . \( #<a :COMMA-EXPRESSION NO-L-VALUE> \)
        {!= !== $END % & && \( \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :LVALUE -> . #<a :MEMBER-LVALUE CALL>                           {\( ++ -- =}
      :LVALUE -> . #<a :MEMBER-LVALUE NO-CALL>                        {\( ++ -- =}
      #<a :MEMBER-LVALUE NO-CALL> -> . :PRIMARY-LVALUE
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE NO-CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . $IDENTIFIER
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      :PRIMARY-LVALUE -> . \( :LVALUE \)
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . :LVALUE :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> :ARGUMENTS
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> [ :EXPRESSION ]
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-LVALUE CALL> -> . #<a :MEMBER-EXPRESSION CALL ANY-VALUE> \. $IDENTIFIER
        {!= !== $END % & && \( \) * + ++ \, - -- \. / \: < << <= = == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION CALL ANY-VALUE> -> . #<a :MEMBER-LVALUE CALL>
        {!= !== $END % & && \) * + \, - \. / \: < << <= == === > >= >> >>> ? [ ] ^ \| |\|\||}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . :PRIMARY-RVALUE  {\(}
      #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> -> . NEW #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> :ARGUMENTS  {\(}
    Transitions: ! => shift S1   $IDENTIFIER => shift S23   $NUMBER => shift S24   $STRING => shift S25   \( => shift S26   + => shift S27
                 ++ => shift S28   - => shift S29   -- => shift S30   DELETE => shift S31   FALSE => shift S33   NEW => shift S35
                 NULL => shift S36   THIS => shift S40   TRUE => shift S41   TYPEOF => shift S42   VOID => shift S43   ~ => shift S44
    Gotos: #<a :ADDITIVE-EXPRESSION ANY-VALUE> => S2  #<a :BITWISE-AND-EXPRESSION ANY-VALUE> => S4  #<a :BITWISE-OR-EXPRESSION ANY-VALUE> => S5
           #<a :BITWISE-XOR-EXPRESSION ANY-VALUE> => S6  #<a :CONDITIONAL-EXPRESSION ANY-VALUE> => S8  #<a :EQUALITY-EXPRESSION ANY-VALUE> => S9
           #<a :LOGICAL-AND-EXPRESSION ANY-VALUE> => S10  #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> => S11
           #<a :MEMBER-EXPRESSION CALL ANY-VALUE> => S12  #<a :MEMBER-EXPRESSION NO-CALL ANY-VALUE> => S13
           #<a :MEMBER-EXPRESSION NO-CALL NO-L-VALUE> => S14  #<a :MEMBER-LVALUE CALL> => S15  #<a :MEMBER-LVALUE NO-CALL> => S16
           #<a :MULTIPLICATIVE-EXPRESSION ANY-VALUE> => S17  #<a :NEW-EXPRESSION ANY-VALUE> => S18  #<a :POSTFIX-EXPRESSION ANY-VALUE> => S19
           #<a :RELATIONAL-EXPRESSION ANY-VALUE> => S20  #<a :SHIFT-EXPRESSION ANY-VALUE> => S21  #<a :UNARY-EXPRESSION ANY-VALUE> => S22
           :LVALUE => S34  :PRIMARY-LVALUE => S37  :PRIMARY-RVALUE => S38  #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> => S272

  S272:
    #<a :CONDITIONAL-EXPRESSION ANY-VALUE> ->
        #<a :LOGICAL-OR-EXPRESSION ANY-VALUE> ? #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> \: #<a :ASSIGNMENT-EXPRESSION ANY-VALUE> .
        {$END \) \, \: ]}
    Transitions: $END \) \, \: ] => reduce CONDITIONAL-EXPRESSION-CONDITIONAL

  S273:
    #<a :UNARY-EXPRESSION ANY-VALUE> -> ! #<a :UNARY-EXPRESSION ANY-VALUE> .
        {!= !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\||}
    Transitions: != !== $END % & && \) * + \, - / \: < << <= == === > >= >> >>> ? ] ^ \| |\|\|| => reduce UNARY-EXPRESSION-LOGICAL-NOT
  
