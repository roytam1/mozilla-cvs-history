/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express oqr
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 *   John Bandhauer <jband@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the
 * terms of the GNU Public License (the "GPL"), in which case the
 * provisions of the GPL are applicable instead of those above.
 * If you wish to allow use of your version of this file only
 * under the terms of the GPL and not to allow others to use your
 * version of this file under the NPL, indicate your decision by
 * deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL.  If you do not delete
 * the provisions above, a recipient may use your version of this
 * file under either the NPL or the GPL.
 */

#include "nsISupports.idl"

[scriptable, uuid(4ea09430-30f4-11d3-9885-006008962422)]
interface nsIJSStackFrameLocation : nsISupports
{
    readonly attribute boolean                 isJSFrame;
    readonly attribute string                  filename;
    readonly attribute string                  functionName;
    readonly attribute PRInt32                 lineNumber;
    readonly attribute nsIJSStackFrameLocation caller;

    string toString();
};


[scriptable, uuid(b2a34010-3983-11d3-9888-006008962422)]
interface nsIXPCException : nsISupports
{
    readonly attribute string                  message;
    readonly attribute nsresult                result;
    readonly attribute string                  name;
    readonly attribute nsIJSStackFrameLocation location;
    readonly attribute nsISupports             data;

    void initialize(in string                  aMessage,
                    in nsresult                aResult,
                    in string                  aName,
                    in nsIJSStackFrameLocation aLocation,
                    in nsISupports             aData);

    string toString();
};

[scriptable, uuid(8df8cd40-5816-11d3-9899-006008962422)]
interface nsIJSErrorReport : nsISupports
{
    readonly attribute string   message;
    readonly attribute string   filename;
    readonly attribute PRUint32 lineno;
    readonly attribute string   linebuf;
    readonly attribute PRUint32 tokenIndex;
    readonly attribute PRUint32 flags;
    readonly attribute PRUint32 errorNumber;
    readonly attribute PRBool   warning;
    readonly attribute PRBool   error;

    string toString();
};

/* this goes into the C++ header verbatim. */
%{ C++
/********************************************************/
// {5632BF70-51EC-11d3-9896-006008962422}
#define NS_XPCEXCEPTION_CID  \
{ 0x5632bf70, 0x51ec, 0x11d3, \
    { 0x98, 0x96, 0x0, 0x60, 0x8, 0x96, 0x24, 0x22 } }
%}

