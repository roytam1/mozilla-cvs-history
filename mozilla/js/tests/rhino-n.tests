# Rhino skip list
# These tests are skipped by Rhino either because a bug with a regression 
# test has yet to be fixed, or because the test is not applicable to Rhino.
# 
# Unfixed bugs:
#
# bug 83051
ecma_3/Function/scope-001.js
# bug 59861
ecma/Date/15.9.4.3.js
#See bug number 94506 
ecma_3/Function/regress-94506.js
#See bug number 9141
js1_2/regexp/regress-9141.js
#See bug number 100199
ecma_3/RegExp/regress-100199.js
#See bug number 104375
ecma_3/String/regress-104375.js
#See bug number 105972
ecma_3/RegExp/regress-105972.js
#See bug number 104077
js1_5/Regress/regress-104077.js
#See bug number 120194
ecma/TypeConversion/9.5-2.js
#Verify error for bad branch 
js1_5/Regress/regress-96526.js
#Bug 123437
ecma_3/RegExp/regress-123437.js
#Bug 346032 (Bugsplat). Also see Bugzilla 124339.
ecma_2/RegExp/properties-002.js
# Bug 125562
ecma_3/RegExp/regress-85721.js
# Unfixable bugs:
#
# fails due to bad java implementation of number formatting on 
# pretty much all platforms
ecma/LexicalConventions/7.7.3.js
# JSObject not used for Rhino LiveConnect
lc3/ConvertJSObject/ToBoolean-001.js
lc3/ConvertJSObject/ToByte-001.js
lc3/ConvertJSObject/ToByte-002.js
lc3/ConvertJSObject/ToChar-001.js
lc3/ConvertJSObject/ToChar-002.js
lc3/ConvertJSObject/ToDouble-001.js
lc3/ConvertJSObject/ToFloat-001.js
lc3/ConvertJSObject/ToInt-001.js
lc3/ConvertJSObject/ToInt-002.js
lc3/ConvertJSObject/ToJSObject-001.js
lc3/ConvertJSObject/ToLong-001.js
lc3/ConvertJSObject/ToLong-002.js
lc3/ConvertJSObject/ToObject-001.js
lc3/ConvertJSObject/ToShort-001.js
lc3/ConvertJSObject/ToShort-002.js
lc3/ConvertJSObject/ToString-001.js
lc3/Exceptions/throw_js_types.js
lc3/JavaClass/ToJSObject-001.js
lc3/JSObject/ToJSObject-001.js
# getter and setters are non-ECMA and not implemented in Rhino.
js1_5/GetSet/getset-001.js
js1_5/GetSet/getset-002.js
js1_5/GetSet/getset-003.js
js1_5/GetSet/getset-004.js
js1_5/GetSet/getset-005.js
js1_5/GetSet/getset-006.js
# the const keyword is non-ECMA and  not currently implemented in Rhino (2000-11-01)
js1_5/Scope/scope-001.js
#Rhino implements Date.toLocaleTimeString() differently than SpiderMonkey
ecma_3/Date/15.9.5.7.js
#Rhino - as permitted by ECMA - does not allow indirect calls to eval
js1_4/Eval/eval-001.js
js1_4/Eval/eval-002.js
js1_4/Eval/eval-003.js
js1_5/Regress/regress-68498-003.js
#Rhino compiled mode is limited by Java classfile size limitations
js1_5/Regress/regress-80981.js
js1_5/Regress/regress-89443.js
js1_5/Regress/regress-90445.js
js1_5/Regress/regress-111557.js
#Rhino doesn't implement the (non-ECMA) toSource() method
js1_5/Regress/regress-44009.js
js1_5/Object/regress-90596-001.js
js1_5/Object/regress-96284-001.js
#Rhino doesn't implement the (non-ECMA) uneval() function
js1_5/Object/regress-90596-002.js
js1_5/Object/regress-96284-002.js
#Skip these two; see http://bugzilla.mozilla.org/show_bug.cgi?id=81086
ecma_3/Statements/regress-74474-002.js
ecma_3/Statements/regress-74474-003.js
#Compiled mode cannot catch infinite recursion errors
js1_5/Regress/regress-96128-n.js
js1_5/Exceptions/regress-121658.js
#Rhino doesn't implement (non-ECMA) fileName, lineNumber properties of Error objects
js1_5/Exceptions/regress-50447.js
#This test uses the (non-ECMA) 'it' object of SpiderMonkey
js1_2/version120/regress-99663.js
#This test uses the gc() function of SpiderMonkey
ecma_3/Function/regress-104584.js
#These tests break with new Unicode in JDK 1.4
ecma/String/15.5.4.11-2.js
ecma/String/15.5.4.11-5.js
ecma/String/15.5.4.12-1.js
ecma/String/15.5.4.12-4.js
ecma/String/15.5.4.12-5.js
