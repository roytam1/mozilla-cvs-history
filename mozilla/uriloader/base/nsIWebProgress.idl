/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla browser.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications, Inc.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Travis Bogard <travis@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;
interface nsIWebProgressListener;

/**
 * The nsIWebProgress interface is used to look at the progress of document
 * loading in a particular DOM Window.
 *
 * @status UNDER_REVIEW
 */

[scriptable, uuid(570F39D0-EFD0-11d3-B093-00A024FFC08C)]
interface nsIWebProgress : nsISupports
{
  const unsigned long NOTIFY_STATE_REQUEST  = 0x00000001;
  const unsigned long NOTIFY_STATE_DOCUMENT = 0x00000002;
  const unsigned long NOTIFY_STATE_NETWORK  = 0x00000004;
  const unsigned long NOTIFY_STATE_WINDOW   = 0x00000008;
  const unsigned long NOTIFY_STATE_ALL      = 0x0000000f;

  const unsigned long NOTIFY_PROGRESS       = 0x00000010;
  const unsigned long NOTIFY_STATUS         = 0x00000020;
  const unsigned long NOTIFY_SECURITY       = 0x00000040;
  const unsigned long NOTIFY_LOCATION       = 0x00000080;

  const unsigned long NOTIFY_ALL            = 0x000000ff;

  /**
   * Registers a listener to be notified of Progress Events
   *
   * @param listener - The listener interface to be called when a progress
   *                   event occurs.
   *
   * @param aNotifyMask - The types of notifications to receive.
   *
   * @return  NS_OK - Listener was registered successfully.
   *          NS_INVALID_ARG - The listener passed in was either nsnull, 
   *                            or was already registered with this progress
   *                            interface.
   */
  void addProgressListener(in nsIWebProgressListener listener,
                           in unsigned long aNotifyMask);

  /**
   * Removes a previously registered listener of Progress Events
   *
   * @param listener - The listener interface previously registered with 
   *                   AddListener().
   *
   * @return  NS_OK - Listener was successfully unregistered.
   *          NS_ERROR_INVALID_ARG - The listener was not previously
   *                                 registered listener.
   */
  void removeProgressListener(in nsIWebProgressListener listener);

  /**
   * The DOM Window associated with the WebProgress instance.
   */
  readonly attribute nsIDOMWindow DOMWindow;
  
  /**
   * The IsLoadingDocument associated with the WebProgress instance
   */
  readonly attribute PRBool isLoadingDocument;
};
