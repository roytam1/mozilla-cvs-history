%!PS-Adobe-3.0
%%Creator: groff version 1.11
%%CreationDate: Sun May 31 22:58:24 1998
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.11 0
%%Pages: 8
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.11 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Roman@0 ENC0/Times-Roman RE
/Times-Bold@0 ENC0/Times-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Bold@0 SF -.18(NA)72 28.8 S(ME).18 E/F1 10/Times-Roman@0 SF
(db_txn \255 DB transaction management)108 40.8 Q F0(SYNOPSIS)72 57.6 Q
/F2 10/Times-Bold@0 SF(#include <db)108 69.6 Q(.h>)-.4 E(int)108 93.6 Q
(txn_open\(const char *dir)108 105.6 Q(,)-.92 E
(u_int32_t \215ags, int mode, DB_ENV *dben)158 117.6 Q 1.1 -.55(v, D)-.4
H(B_TXNMGR **r).55 E(egionp\);)-.18 E(int)108 141.6 Q
(txn_begin\(DB_TXNMGR *txnp, DB_TXN *pid, DB_TXN **tid\);)108 153.6 Q
(int)108 177.6 Q(txn_pr)108 189.6 Q(epar)-.18 E(e\(DB_TXN *tid\);)-.18 E
(int)108 213.6 Q(txn_commit\(DB_TXN *tid\);)108 225.6 Q(int)108 249.6 Q
(txn_abort\(DB_TXN *tid\);)108 261.6 Q(u_int32_t)108 285.6 Q
(txn_id\(DB_TXN *tid\);)108 297.6 Q(int)108 321.6 Q(txn_checkpoint\(const DB_TXNMGR *txnp, u_int32_t kbyte, u_int32_t min\);)
108 333.6 Q(int)108 357.6 Q(txn_close\(DB_TXNMGR *txnp\);)108 369.6 Q
(int)108 393.6 Q(txn_unlink\(const char *dir)108 405.6 Q 2.5(,i)-.92 G
(nt f)-2.5 E(or)-.25 E(ce, DB_ENV *dben)-.18 E(v\);)-.4 E(int)108 429.6
Q(txn_stat\(DB_TXNMGR *txnp,)108 441.6 Q(DB_TXN_ST)158 453.6 Q 1.9 -.95
(AT *)-.9 H(*statp, v).95 E(oid *\(*db_malloc\)\(size_t\)\);)-.1 E F0
(DESCRIPTION)72 470.4 Q F1 .486(The DB library is a f)108 482.4 R .485
(amily of groups of functions that pro)-.1 F .485
(vides a modular programming interf)-.15 F .485(ace to trans-)-.1 F .523
(actions and record-oriented \214le access.)108 494.4 R .523
(The library includes support for transactions, locking, logging and)
5.523 F .507(\214le page caching, as well as v)108 506.4 R .507
(arious inde)-.25 F -.15(xe)-.15 G 3.007(da).15 G .506(ccess methods.)
-3.007 F(Man)5.506 E 3.006(yo)-.15 G 3.006(ft)-3.006 G .506
(he functional groups \(e.g., the \214le)-3.006 F .168(page caching functions\) are useful independent of the other DB functions, although some functional groups)
108 518.4 R .122(are e)108 530.4 R .121(xplicitly based on other functional groups \(e.g., transactions and logging\).)
-.15 F -.15(Fo)5.121 G 2.621(rag).15 G .121(eneral description of)-2.621
F(the DB package, see)108 542.4 Q/F3 10/Times-Italic@0 SF(db_intr)2.5 E
(o)-.45 E F1(\(3\).).18 E(This manual page describes the speci\214c details of the DB transaction support.)
108 559.2 Q(The)108 576 Q F3(db_txn)2.956 E F1 .456
(functions are the library interf)2.956 F .456(ace that pro)-.1 F .456
(vides transaction semantics.)-.15 F .457(Full transaction support)5.456
F .746(is pro)108 588 R .746(vided by a collection of modules that pro)
-.15 F .746(vide interf)-.15 F .745
(aces to the services required for transaction pro-)-.1 F 3.273
(cessing. These)108 600 R .774(services are reco)3.273 F -.15(ve)-.15 G
.774(ry \(see).15 F F3(db_lo)3.274 E(g)-.1 E F1 .774
(\(3\)\), concurrenc).22 F 3.274(yc)-.15 G .774(ontrol \(see)-3.274 F F3
(db_loc)3.274 E(k)-.2 E F1 .774(\(3\)\), and the man-).67 F 1.21
(agement of shared data \(see)108 612 R F3(db_mpool)3.71 E F1 3.71
(\(3\)\). T).51 F 1.21
(ransaction semantics can be applied to the access methods)-.35 F
(described in)108 624 Q F3(db_open)2.5 E F1
(\(3\) through function call parameters.).24 E .891(The model intended for transactional use \(and the one that is used by the access methods\) is write-ahead)
108 640.8 R .508(logging pro)108 652.8 R .508(vided by)-.15 F F3(db_lo)
3.008 E(g)-.1 E F1 .508(\(3\) to record both before- and after).22 F
3.008(-images. Locking)-.2 F(follo)3.008 E .508(ws a tw)-.25 F .507
(o-phase pro-)-.1 F
(tocol, with all locks being released at transaction commit.)108 664.8 Q
F3(txn_open)92 681.6 Q F1(The)108 693.6 Q F3(txn_open)3.426 E F1 .927
(function copies a pointer)3.426 F 3.427(,t)-.4 G 3.427(ot)-3.427 G .927
(he transaction re)-3.427 F .927(gion identi\214ed by the)-.15 F F2(dir)
3.427 E(ectory)-.18 E F3(dir)3.427 E F1 3.427(,i).73 G .927(nto the)
-3.427 F(memory location referenced by)108 705.6 Q F3 -.37(re)2.5 G
(gionp)-.03 E F1(.).19 E 1.878(If the)108 722.4 R F3(dben)4.378 E(v)-.4
E F1(ar)4.378 E 1.878(gument to)-.18 F F3(txn_open)4.378 E F1 -.1(wa)
4.377 G 4.377(si).1 G 1.877(nitialized using)-4.377 F F3(db_appinit)
4.377 E F1(,).68 E F3(dir)4.377 E F1 1.877
(is interpreted as described by)4.377 F(1)535 768 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R/F1 10
/Times-Italic@0 SF(db_appinit)108 84 Q F0(\(3\).).68 E .667
(Otherwise, if)108 100.8 R F1(dir)3.167 E F0 .668
(is not NULL, it is interpreted relati)3.167 F .968 -.15(ve t)-.25 H
3.168(ot).15 G .668(he current w)-3.168 F .668
(orking directory of the process.)-.1 F(If)5.668 E F1(dir)108 112.8 Q F0
2.388(is NULL, the follo)4.888 F 2.388(wing en)-.25 F 2.388(vironment v)
-.4 F 2.388(ariables are check)-.25 F 2.387(ed in order: `)-.1 F
(`TMPDIR')-.74 E 2.387(', `)-.74 F(`TEMP')-.74 E 2.387(', and)-.74 F
-.74(``)108 124.8 S(TMP').74 E 3.361('. If)-.74 F .861
(one of them is set, transaction re)3.361 F .862
(gion \214les are created relati)-.15 F 1.162 -.15(ve t)-.25 H 3.362(ot)
.15 G .862(he directory it speci\214es.)-3.362 F(If)5.862 E .836
(none of them are set, the \214rst possible one of the follo)108 136.8 R
.836(wing directories is used:)-.25 F F1(/var/tmp)3.336 E F0(,).19 E F1
(/usr/tmp)3.335 E F0(,).19 E F1(/temp)3.335 E F0(,).19 E F1(/tmp)108
148.8 Q F0(,).19 E F1(C:/temp)2.5 E F0(and)2.5 E F1(C:/tmp)2.5 E F0(.)
.19 E 1.21(All \214les associated with the transaction re)108 165.6 R
1.21(gion are created in this directory)-.15 F 6.21(.T)-.65 G 1.21
(his directory must already)-6.21 F -.15(ex)108 177.6 S(ist when).15 E
.067(transaction re)108 201.6 R .067(gion_open is called.)-.15 F .067
(If the transaction re)5.067 F .066(gion already e)-.15 F .066
(xists, the process must ha)-.15 F .366 -.15(ve p)-.2 H(ermission).15 E
.556(to read and write the e)108 213.6 R .556(xisting \214les.)-.15 F
.556(If the transaction re)5.556 F .556(gion does not already e)-.15 F
.556(xist, it is optionally created)-.15 F(and initialized.)108 225.6 Q
(The)108 242.4 Q F1<8d61>3.761 E(gs)-.1 E F0(and)3.761 E F1(mode)3.761 E
F0(ar)3.761 E 1.261(guments specify ho)-.18 F 3.761<778c>-.25 G 1.26
(les will be opened and/or created when the)-3.761 F 3.76(yd)-.15 G(on')
-3.76 E 3.76(ta)-.18 G(lready)-3.76 E -.15(ex)108 254.4 S 2.5(ist. The)
.15 F(\215ags v)2.5 E(alue is speci\214ed by)-.25 E/F2 10/Times-Bold@0
SF(or)2.5 E F0('ing together one or more of the follo)A(wing v)-.25 E
(alues:)-.25 E(DB_CREA)108 271.2 Q(TE)-1.11 E .483(Create an)133 283.2 R
2.983(yu)-.15 G .483(nderlying \214les, as necessary)-2.983 F 5.483(.I)
-.65 G 2.983(ft)-5.483 G .483(he \214les do not already e)-2.983 F .483
(xist and the DB_CREA)-.15 F .484(TE \215ag)-1.11 F
(is not speci\214ed, the call will f)133 295.2 Q(ail.)-.1 E(DB_THREAD)
108 324 Q .107(Cause the DB_TXNMGR handle returned by the)133 336 R F1
(txn_open)2.607 E F0 .107(function to be useable by multiple threads)
2.607 F(within a single address space, i.e., to be `)133 348 Q
(`free-threaded')-.74 E('.)-.74 E(DB_TXN_NOSYNC)108 364.8 Q .452
(On transaction commit, do not synchronously \215ush the log.)133 376.8
R .452(This means that transactions e)5.452 F .453(xhibit the)-.15 F -.4
(AC)133 388.8 S 3.54(I\().4 G(atomicity)-3.54 E 3.54(,c)-.65 G
(onsistenc)-3.54 E 3.54(ya)-.15 G 1.04(nd isolation\) properties, b)
-3.54 F 1.04(ut not D \(durability\), i.e., database inte)-.2 F(grity)
-.15 E .87(will be maintained b)133 400.8 R .87(ut it is possible that some number of the most recently committed transactions)
-.2 F(may be undone during reco)133 412.8 Q -.15(ve)-.15 G
(ry instead of being redone.).15 E 1.216
(The number of transactions that are potentially at risk is go)133 436.8
R -.15(ve)-.15 G 1.216(rned by ho).15 F 3.716(wo)-.25 G 1.216
(ften the log is check-)-3.716 F(pointed \(see)133 448.8 Q F1(db_c)2.5 E
(hec)-.15 E(kpoint)-.2 E F0(\(1\)\) and ho).68 E 2.5(wm)-.25 G(an)-2.5 E
2.5(yl)-.15 G(og updates can \214t on a single log page.)-2.5 E .544
(All \214les created by the transaction subsystem are created with mode)
108 465.6 R F1(mode)3.044 E F0 .544(\(as described in)3.044 F F1 -.15
(ch)3.044 G(mod).15 E F0 .544(\(2\)\) and).77 F .392
(modi\214ed by the process' umask v)108 477.6 R .391
(alue at the time of creation \(see)-.25 F F1(umask)2.891 E F0 2.891
(\(2\)\). The).67 F .391(group o)2.891 F .391(wnership of cre-)-.25 F
(ated \214les is based on the system and directory def)108 489.6 Q
(aults, and is not further speci\214ed by DB.)-.1 E .566
(The transaction subsystem is con\214gured based on the)108 506.4 R F1
(dben)3.066 E(v)-.4 E F0(ar)3.066 E .566(gument to)-.18 F F1(txn_open)
3.066 E F0 3.066(,w).24 G .566(hich is a pointer to a)-3.066 F 1.924
(structure of type DB_ENV \(typedef)108 518.4 R 2.924 -.5('d i).55 H
4.424(n<).5 G(db)-4.424 E 4.424(.h>\). Applications)-.4 F 1.924
(will normally use the same DB_ENV)4.424 F(structure \(initialized by)
108 530.4 Q F1(db_appinit)2.5 E F0(\(3\)\), as an ar).68 E
(gument to all of the subsystems in the DB package.)-.18 E .439(References to the DB_ENV structure are maintained by DB, so it may not be discarded until the last close)
108 547.2 R .287
(function, corresponding to an open function for which it w)108 559.2 R
.286(as an ar)-.1 F .286(gument, has returned.)-.18 F .286
(In order to ensure)5.286 F 1.578(compatibility with future releases of DB, all \214elds of the DB_ENV structure that are not e)
108 571.2 R 1.579(xplicitly set)-.15 F .171(should be initialized to 0 before the \214rst time the structure is used.)
108 583.2 R .17(Do this by declaring the structure e)5.17 F(xter)-.15 E
(-)-.2 E(nal or static, or by calling the C library routine)108 595.2 Q
F1(bzer)2.5 E(o)-.45 E F0(\(3\) or).18 E F1(memset)2.5 E F0(\(3\).).68 E
.23(The \214elds of the DB_ENV structure used by)108 612 R F1(txn_open)
2.73 E F0 .23(are described belo)2.73 F 4.03 -.65(w. I)-.25 H(f).65 E F1
(dben)2.73 E(v)-.4 E F0 .23(is NULL or an)2.73 F 2.73(yo)-.15 G 2.73(fi)
-2.73 G(ts)-2.73 E(\214elds are set to 0, def)108 624 Q
(aults appropriate for the system are used where possible.)-.1 E
(The follo)108 640.8 Q(wing \214elds in the DB_ENV structure may be initialized before calling)
-.25 E F1(txn_open)2.5 E F0(:).24 E -.2(vo)108 657.6 S
(id *\(*db_errcall\)\(char *db_errpfx, char *b).2 E(uf)-.2 E(fer\);)-.25
E(FILE *db_err\214le;)108 669.6 Q(const char *db_errpfx;)108 681.6 Q
(int db_v)108 693.6 Q(erbose;)-.15 E
(The error \214elds of the DB_ENV beha)133 705.6 Q .3 -.15(ve a)-.2 H
2.5(sd).15 G(escribed for)-2.5 E F1(db_appinit)2.5 E F0(\(3\).).68 E
(May 10, 1998)278.085 768 Q(2)201.085 E EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R
(DB_LOG *lg_info;)108 84 Q .746(The logging re)133 96 R .746
(gion that is being used for this transaction en)-.15 F 3.246
(vironment. The)-.4 F/F1 10/Times-Italic@0 SF(lg_info)3.246 E F0 .746
(\214eld contains a)3.246 F .716(return v)133 108 R .716
(alue from the function)-.25 F F1(lo)3.217 E(g_open)-.1 E F0(.).24 E/F2
10/Times-Bold@0 SF .717(Logging is r)5.717 F(equir)-.18 E .717(ed f)-.18
F .717(or transaction en)-.25 F(vir)-.4 E .717(onments, and)-.18 F
(it is an err)133 120 Q(or to not specify a logging r)-.18 E(egion.)-.18
E F0(DB_LOCKT)108 136.8 Q(AB *lk_info;)-.93 E .821(The locking re)133
148.8 R .821(gion that is being used for this transaction en)-.15 F 3.32
(vironment. The)-.4 F F1(lk_info)3.32 E F0 .82(\214eld contains a)3.32 F
.505(return v)133 160.8 R .505(alue from the function)-.25 F F1(loc)
3.005 E(k_open)-.2 E F0 5.505(.I).24 G(f)-5.505 E F1(lk_info)3.006 E F0
.506(is NULL, no locking is done in this transaction)3.006 F(en)133
172.8 Q(vironment.)-.4 E(u_int32_t tx_max;)108 189.6 Q 1.888
(The maximum number of simultaneous transactions that are supported.)133
201.6 R 1.887(This bounds the size of)6.888 F .473
(backing \214les and is used to deri)133 213.6 R .774 -.15(ve l)-.25 H
.474(imits for the size of the lock re).15 F .474(gion and log\214les.)
-.15 F .474(When there are)5.474 F 1.452(more than)133 225.6 R F1
(tx_max)3.952 E F0 1.452(concurrent transactions, calls to)3.952 F F1
(txn_be)3.951 E(gin)-.4 E F0 1.451(may cause backing \214les to gro)
3.951 F 5.251 -.65(w. I)-.25 H(f).65 E F1(tx_max)133 237.6 Q F0
(is 0, a def)2.5 E(ault v)-.1 E(alue is used.)-.25 E(int \(*tx_reco)108
254.4 Q -.15(ve)-.15 G(r\)\(DB_LOG *logp, DBT *log_rec,).15 E
(DB_LSN *lsnp, int redo, v)183 266.4 Q(oid *info\);)-.2 E 2.5(Af)133
278.4 S(unction that is called by)-2.5 E F1(txn_abort)2.5 E F0
(during transaction abort.)2.5 E(This function tak)5 E(es \214v)-.1 E
2.5(ea)-.15 G -.18(rg)-2.5 G(uments:).18 E 4.72(logp A)133 295.2 R
(pointer to the transaction log \(DB_LOG *\).)2.5 E(log_rec)133 312 Q
2.5(Al)158 324 S(og record.)-2.5 E 5.83(lsnp A)133 340.8 R
(pointer to a log sequence number \(DB_LSN *\).)2.5 E 4.73(redo An)133
357.6 R(inte)2.5 E(ger v)-.15 E(alue that is set to one of the follo)
-.25 E(wing v)-.25 E(alues:)-.25 E(DB_TXN_B)158 374.4 Q -.4(AC)-.35 G
(KW).4 E(ARD_R)-1.2 E(OLL)-.4 E 1.136(The log is being read backw)183
386.4 R 1.136(ard to determine which transactions ha)-.1 F 1.436 -.15
(ve b)-.2 H 1.136(een committed).15 F(and which transactions were not \(and should therefore be aborted during reco)
183 398.4 Q -.15(ve)-.15 G(ry\).).15 E(DB_TXN_FOR)158 415.2 Q -1.2(WA)
-.55 G(RD_R)1.2 E(OLL)-.4 E 1.744(The log is being played forw)183 427.2
R 1.744(ard, an)-.1 F 4.244(yt)-.15 G 1.744
(ransaction ids encountered that ha)-4.244 F 2.043 -.15(ve n)-.2 H 1.743
(ot been).15 F(entered into the list referenced by)183 439.2 Q F1(info)
2.5 E F0(should be ignored.)2.5 E(DB_TXN_OPENFILES)158 456 Q
(The log is being read to open all the \214les required to perform reco)
183 468 Q -.15(ve)-.15 G(ry).15 E(.)-.65 E(DB_TXN_REDO)158 484.8 Q
(Redo the operation described by the log record.)183 496.8 Q
(DB_TXN_UNDO)158 513.6 Q
(Undo the operation described by the log record.)183 525.6 Q 6.39
(info An)133 542.4 R(opaque pointer used to reference the list of transaction IDs encountered during reco)
2.5 E -.15(ve)-.15 G(ry).15 E(.)-.65 E(If)133 559.2 Q F1 -.37(re)3.214 G
(co).37 E(ver)-.1 E F0 .714(is NULL, the def)3.214 F .714(ault is that only DB access method operations are transaction protected,)
-.1 F(and the def)133 571.2 Q(ault reco)-.1 E -.15(ve)-.15 G 2.5(rf).15
G(unction will be used.)-2.5 E(The)108 588 Q F1(txn_open)2.5 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(txn_be)92 604.8 Q(gin)-.4 E F0(The)
108 616.8 Q F1(txn_be)3.109 E(gin)-.4 E F0 .609(function creates a ne)
3.109 F 3.109(wt)-.25 G .608
(ransaction in the designated transaction manager)-3.109 F 3.108(,c)-.4
G(op)-3.108 E .608(ying a pointer)-.1 F 1.068(to a DB_TXN that uniquely identi\214es it into the memory referenced by)
108 628.8 R F1(tid)3.568 E F0 6.069(.I).77 G 3.569(ft)-6.069 G(he)-3.569
E F1(pid)3.569 E F0(ar)3.569 E 1.069(gument is non-)-.18 F(NULL, the ne)
108 640.8 Q 2.5(wt)-.25 G
(ransaction is a nested transaction with the transaction indicated by)
-2.5 E F1(pid)2.5 E F0(as its parent.)2.5 E -.35(Tr)108 657.6 S .643
(ansactions may not span threads, i.e., each transaction must be).35 F
.642(gin and end in the same thread, and each)-.15 F
(transaction may only be used by a single thread.)108 669.6 Q(The)108
686.4 Q F1(txn_be)2.5 E(gin)-.4 E F0(function returns the v)2.5 E
(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5 E(ailure and 0 on success.)
-.1 E F1(txn_pr)92 703.2 Q(epar)-.37 E(e)-.37 E F0(The)108 715.2 Q F1
(txn_pr)3.057 E(epar)-.37 E(e)-.37 E F0 .557(function initiates the be)
3.057 F .557(ginning of a tw)-.15 F 3.057(op)-.1 G .557(hase commit.)
-3.057 F .558(In a distrib)5.558 F .558(uted transaction en)-.2 F(vi-)
-.4 E(ronment,)108 727.2 Q F1(db)3.372 E F0 .872
(can be used as a local transaction manager)3.372 F 5.872(.I)-.55 G
3.372(nt)-5.872 G .872(his case, the distrib)-3.372 F .871
(uted transaction manager)-.2 F(May 10, 1998)278.085 768 Q(3)201.085 E
EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R .5
(must send)108 84 R/F1 10/Times-Italic@0 SF(pr)3 E(epar)-.37 E(e)-.37 E
F0 .5(messages to each local manager)3 F 5.5(.T)-.55 G .5
(he local manager must then issue a)-5.5 F F1(txn_pr)3 E(epar)-.37 E(e)
-.37 E F0(and)3 E -2.3 -.15(aw a)108 96 T 1.45
(it its successful return before responding to the distrib).15 F 1.45
(uted transaction manager)-.2 F 6.45(.O)-.55 G 1.45(nly after the dis-)
-6.45 F(trib)108 108 Q .521(uted transaction manager recei)-.2 F -.15
(ve)-.25 G 3.021(ss).15 G .521(uccessful responses from all of its)
-3.021 F F1(pr)3.022 E(epar)-.37 E(e)-.37 E F0 .522
(messages should it issue)3.022 F(an)108 120 Q(y)-.15 E F1(commit)2.5 E
F0(messages.)2.5 E(The)108 136.8 Q F1(txn_pr)2.5 E(epar)-.37 E(e)-.37 E
F0(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)
2.5 E(ailure and 0 on success.)-.1 E F1(txn_commit)92 153.6 Q F0(The)108
165.6 Q F1(txn_commit)3.343 E F0 .842
(function ends the transaction speci\214ed by the)3.343 F F1(tid)3.342 E
F0(ar)3.342 E 3.342(gument. If)-.18 F .842(DB_TXN_NOSYNC w)3.342 F(as)
-.1 E .019(not speci\214ed, a commit log record is written and \215ushed to disk, as are all pre)
108 177.6 R .019(viously written log records.)-.25 F(If)5.019 E .843(the transaction is nested, its locks are acquired by the parent transaction, otherwise its locks are released.)
108 189.6 R(An)108 201.6 Q 2.544(ya)-.15 G .044
(pplications that require strict tw)-2.544 F .045
(o-phase locking must not release an)-.1 F 2.545(yl)-.15 G .045(ocks e)
-2.545 F(xplicitly)-.15 E 2.545(,l)-.65 G(ea)-2.545 E .045
(ving them all)-.2 F(to be released by)108 213.6 Q F1(txn_commit)2.5 E
F0(.).68 E(The)108 230.4 Q F1(txn_commit)2.5 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(txn_abort)92 247.2 Q F0(The)108
259.2 Q F1(txn_abort)3.648 E F0 1.147
(function causes an abnormal termination of the transaction.)3.648 F
1.147(The log is played backw)6.147 F(ards)-.1 E 1.623(and an)108 271.2
R 4.123(yn)-.15 G 1.624(ecessary reco)-4.123 F -.15(ve)-.15 G 1.624
(ry operations are initiated through the).15 F F1 -.37(re)4.124 G(co).37
E(ver)-.1 E F0 1.624(function speci\214ed to)4.124 F F1(txn_open)4.124 E
F0(.).24 E .632(After reco)108 283.2 R -.15(ve)-.15 G .631(ry is completed, all locks held by the transaction are acquired by the parent transaction in the)
.15 F .272(case of a nested transaction or released in the case of a non-nested transaction.)
108 295.2 R .273(As is the case for)5.273 F F1(txn_com-)2.773 E(mit)108
307.2 Q F0 2.5(,a).68 G(pplications that require strict tw)-2.5 E 2.5
(op)-.1 G(hase locking should not e)-2.5 E(xplicitly release an)-.15 E
2.5(yl)-.15 G(ocks.)-2.5 E(The)108 324 Q F1(txn_abort)2.5 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(txn_id)92 340.8 Q F0(The)108 352.8 Q
F1(txn_id)3.877 E F0 1.376(function returns the unique transaction id associated with the speci\214ed transaction.)
3.877 F(Locking)6.376 E .043
(calls made on behalf of this transaction should use the v)108 364.8 R
.043(alue returned from)-.25 F F1(txn_id)2.543 E F0 .043(as the lock)
2.543 F .043(er parameter to)-.1 F(the)108 376.8 Q F1(loc)2.5 E(k_g)-.2
E(et)-.1 E F0(or)2.5 E F1(loc)2.5 E(k_vec)-.2 E F0(calls.)2.5 E F1
(txn_close)92 393.6 Q F0(The)108 405.6 Q F1(txn_close)3.867 E F0 1.366
(function detaches a process from the transaction en)3.867 F 1.366
(vironment speci\214ed by the DB_TXN-)-.4 F .26(MGR pointer)108 417.6 R
5.26(.A)-.55 G .26(ll mapped re)-5.26 F .261(gions are unmapped and an)
-.15 F 2.761(ya)-.15 G .261(llocated resources are freed.)-2.761 F(An)
5.261 E 2.761(yu)-.15 G(ncommitted)-2.761 E(transactions are aborted.)
108 429.6 Q .436(In addition, if the)108 446.4 R F1(dir)2.936 E F0(ar)
2.936 E .436(gument to)-.18 F F1(txn_open)2.936 E F0 -.1(wa)2.936 G
2.936(sN).1 G .436(ULL and)-2.936 F F1(dben)2.936 E(v)-.4 E F0 -.1(wa)
2.936 G 2.936(sn).1 G .436(ot initialized using)-2.936 F F1(db_appinit)
2.935 E F0 2.935(,a).68 G(ll)-2.935 E
(\214les created for this shared re)108 458.4 Q(gion will be remo)-.15 E
-.15(ve)-.15 G(d, as if).15 E F1(txn_unlink)2.5 E F0(were called.)2.5 E
.403(When multiple threads are using the DB_TXNMGR handle concurrently)
108 475.2 R 2.903(,o)-.65 G .404(nly a single thread may call the)-2.903
F F1(txn_close)108 487.2 Q F0(function.)2.5 E(The)108 504 Q F1
(txn_close)2.5 E F0(function returns the v)2.5 E(alue of)-.25 E F1
(errno)2.5 E F0(on f)2.5 E(ailure and 0 on success.)-.1 E F1(txn_unlink)
92 532.8 Q F0(The)108 544.8 Q F1(txn_unlink)3.595 E F0 1.095
(function destro)3.595 F 1.094(ys the transaction re)-.1 F 1.094
(gion identi\214ed by the directory)-.15 F F1(dir)3.594 E F0 3.594(,r)
.73 G(emo)-3.594 E 1.094(ving all \214les)-.15 F .957
(used to implement the transaction re)108 556.8 R 3.457(gion. \(The)-.15
F(directory)3.457 E F1(dir)3.457 E F0 .957(is not remo)3.457 F -.15(ve)
-.15 G 3.457(d.\) If).15 F .957(there are processes that)3.457 F(ha)108
568.8 Q 2.027 -.15(ve c)-.2 H(alled).15 E F1(txn_open)4.227 E F0 1.726
(without calling)4.226 F F1(txn_close)4.226 E F0 1.726
(\(i.e., there are processes currently using the transaction)4.226 F(re)
108 580.8 Q(gion\),)-.15 E F1(txn_unlink)2.635 E F0 .135(will f)2.635 F
.135(ail without further action, unless the force \215ag is set, in which case)
-.1 F F1(txn_unlink)2.636 E F0(will)2.636 E(attempt to remo)108 592.8 Q
.3 -.15(ve t)-.15 H(he transaction re).15 E(gion \214les re)-.15 E -.05
(ga)-.15 G(rdless of an).05 E 2.5(yp)-.15 G
(rocesses still using the transaction re)-2.5 E(gion.)-.15 E .766
(The result of attempting to forcibly destro)108 609.6 R 3.266(yt)-.1 G
.766(he re)-3.266 F .766(gion when a process has the re)-.15 F .765
(gion open is unspeci\214ed.)-.15 F 1.232
(Processes using a shared memory re)108 621.6 R 1.232
(gion maintain an open \214le descriptor for it.)-.15 F 1.232
(On UNIX systems, the)6.232 F(re)108 633.6 Q .474(gion remo)-.15 F -.25
(va)-.15 G 2.974(ls).25 G .473(hould succeed and processes that ha)
-2.974 F .773 -.15(ve a)-.2 H .473(lready joined the re).15 F .473
(gion should continue to run in)-.15 F 1.059(the re)108 645.6 R 1.059
(gion without change, ho)-.15 F(we)-.25 E -.15(ve)-.25 G 3.559(rp).15 G
1.059(rocesses attempting to join the transaction re)-3.559 F 1.06
(gion will either f)-.15 F 1.06(ail or)-.1 F .811
(attempt to create a ne)108 657.6 R 3.311(wr)-.25 G -.15(eg)-3.311 G
3.311(ion. On).15 F .811(other systems, e.g., WNT)3.311 F 3.31(,w)-.74 G
.81(here the)-3.31 F F1(unlink)3.31 E F0 .81(\(2\) system call will f)
.67 F .81(ail if)-.1 F(an)108 669.6 Q 2.5(yp)-.15 G
(rocess has an open \214le descriptor for the \214le, the re)-2.5 E
(gion remo)-.15 E -.25(va)-.15 G 2.5(lw).25 G(ill f)-2.5 E(ail.)-.1 E
.929(In the case of catastrophic or system f)108 686.4 R .929
(ailure, database reco)-.1 F -.15(ve)-.15 G .93
(ry must be performed \(see).15 F F1(db_r)3.43 E(eco)-.37 E(ver)-.1 E F0
.93(\(1\) or).73 F .74(the DB_RECO)108 698.4 R .74(VER and DB_RECO)-.5 F
(VER_F)-.5 E -1.21 -1.11(AT A)-.74 H 3.24<4c8d>1.11 G .74(ags to)-3.24 F
F1(db_appinit)3.24 E F0 3.24(\(3\)\). Alternati).68 F -.15(ve)-.25 G(ly)
.15 E 3.24(,i)-.65 G 3.24(fr)-3.24 G(eco)-3.24 E -.15(ve)-.15 G .74
(ry is not).15 F 1.473
(required because no database state is maintained across f)108 710.4 R
1.473(ailures, it is possible to clean up a transaction)-.1 F(re)108
722.4 Q .409(gion by remo)-.15 F .409
(ving all of the \214les in the directory speci\214ed to the)-.15 F F1
(txn_open)2.909 E F0 .408(function, as transaction re)2.909 F(gion)-.15
E(May 10, 1998)278.085 768 Q(4)201.085 E EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R .872
(\214les are ne)108 84 R -.15(ve)-.25 G 3.373(rc).15 G .873
(reated in an)-3.373 F 3.373(yd)-.15 G .873
(irectory other than the one speci\214ed to)-3.373 F/F1 10
/Times-Italic@0 SF(txn_open)3.373 E F0 5.873(.N).24 G .873(ote, ho)
-5.873 F(we)-.25 E -.15(ve)-.25 G 1.673 -.4(r, t).15 H .873(hat this).4
F(has the potential to remo)108 96 Q .3 -.15(ve \214)-.15 H
(les created by the other DB subsystems in this database en).15 E
(vironment.)-.4 E(The)108 112.8 Q F1(txn_unlink)2.5 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(txn_c)92 129.6 Q(hec)-.15 E(kpoint)
-.2 E F0(The)108 141.6 Q F1(txn_c)3.069 E(hec)-.15 E(kpoint)-.2 E F0
.569(function syncs the underlying memory pool, writes a checkpoint record to the log and)
3.069 F(then \215ushes the log.)108 153.6 Q .507(If either)108 170.4 R
F1(kbyte)3.007 E F0(or)3.008 E F1(min)3.008 E F0 .508
(is non-zero, the checkpoint is only done if more than)3.008 F F1(min)
3.008 E F0 .508(minutes ha)3.008 F .808 -.15(ve p)-.2 H .508
(assed since).15 F(the last checkpoint, or if more than)108 182.4 Q F1
(kbyte)2.5 E F0(kilobytes of log data ha)2.5 E .3 -.15(ve b)-.2 H
(een written since the last checkpoint.).15 E(The)108 199.2 Q F1(txn_c)
2.815 E(hec)-.15 E(kpoint)-.2 E F0 .315(function returns the v)2.815 F
.315(alue of)-.25 F F1(errno)2.815 E F0 .315(on f)2.815 F .314
(ailure, 0 on success, and DB_INCOMPLETE if)-.1 F .274
(there were pages that needed to be written b)108 211.2 R .275(ut that)
-.2 F F1(memp_sync)2.775 E F0 .275(\(3\) w).31 F .275
(as unable to write immediately)-.1 F 5.275(.I)-.65 G 2.775(nt)-5.275 G
(his)-2.775 E(case, the)108 223.2 Q F1(txn_c)2.5 E(hec)-.15 E(kpoint)-.2
E F0(call should be retried.)2.5 E(The)108 240 Q F1(txn_c)2.537 E(hec)
-.15 E(kpoint)-.2 E F0 .037
(function is the underlying function used by the)2.537 F F1(db_c)2.536 E
(hec)-.15 E(kpoint)-.2 E F0 .036(\(1\) utility).68 F 5.036(.S)-.65 G
.036(ee the source)-5.036 F(code for the)108 252 Q F1(db_c)2.5 E(hec)
-.15 E(kpoint)-.2 E F0(utility for an e)2.5 E(xample of using)-.15 E F1
(txn_c)2.5 E(hec)-.15 E(kpoint)-.2 E F0(in a UNIX en)2.5 E(vironment.)
-.4 E F1(txn_stat)92 268.8 Q F0(The)108 280.8 Q F1(txn_stat)2.745 E F0
.246(function creates a statistical structure and copies a pointer to it into the user)
2.745 F .246(-speci\214ed memory)-.2 F(location.)108 292.8 Q .292
(Statistical structure are created in allocated memory)108 309.6 R 5.292
(.I)-.65 G(f)-5.292 E F1(db_malloc)2.792 E F0 .292
(is non-NULL, it is called to allocate the)2.792 F(memory)108 321.6 Q
2.829(,o)-.65 G .329(therwise, the library function)-2.829 F F1(malloc)
2.829 E F0 .329(\(3\) is used.).31 F .329(The function)5.329 F F1
(db_malloc)2.829 E F0 .33(must match the calling)2.83 F(con)108 333.6 Q
-.15(ve)-.4 G 2.031(ntions of the).15 F F1(malloc)4.531 E F0 2.031
(\(3\) library routine.).31 F(Re)7.031 E -.05(ga)-.15 G 2.031
(rdless, the caller is responsible for deallocating the).05 F .707
(returned memory)108 345.6 R 5.707(.T)-.65 G 3.207(od)-6.507 G .708
(eallocate the returned memory)-3.207 F 3.208(,f)-.65 G .708
(ree each returned memory pointer; pointers inside)-3.208 F
(the memory do not need to be indi)108 357.6 Q(vidually freed.)-.25 E
1.23(The transaction re)108 374.4 R 1.23
(gion statistics are stored in a structure of type DB_TXN_ST)-.15 F 3.45
-1.11(AT \()-.93 H -1.95(typedef ')1.11 F 3.73(di)-.5 G 3.73(n<)-3.73 G
(db)-3.73 E(.h>\).)-.4 E(The follo)108 386.4 Q(wing DB_TXN_ST)-.25 E
2.22 -1.11(AT \214)-.93 H(elds will be \214lled in:)1.11 E
(u_int32_t st_refcnt;)108 403.2 Q(The number of references to the re)133
415.2 Q(gion.)-.15 E(u_int32_t st_re)108 427.2 Q(gsize;)-.15 E
(The size of the re)133 439.2 Q(gion.)-.15 E(DB_LSN st_last_ckp;)108
451.2 Q(The LSN of the last checkpoint.)133 463.2 Q
(DB_LSN st_pending_ckp;)108 475.2 Q 3.142(The LSN of an)133 487.2 R
5.642(yc)-.15 G 3.142(heckpoint that is currently in progress.)-5.642 F
(If)8.142 E F1(st_pending_c)5.642 E(kp)-.2 E F0 3.142(is the same as)
5.642 F F1(st_last_c)133 499.2 Q(kp)-.2 E F0
(there is no checkpoint in progress.)2.5 E(time_t st_time_ckp;)108 511.2
Q(The time the last completed checkpoint \214nished \(as returned by)133
523.2 Q F1(time)2.5 E F0(\(2\)\).).18 E(u_int32_t st_last_txnid;)108
535.2 Q(The last transaction ID allocated.)133 547.2 Q
(u_int32_t st_maxtxns;)108 559.2 Q(The maximum number of acti)133 571.2
Q .3 -.15(ve t)-.25 H(ransactions supported by the re).15 E(gion.)-.15 E
(u_int32_t st_naborts;)108 583.2 Q(The number of transactions that ha)
133 595.2 Q .3 -.15(ve a)-.2 H(borted.).15 E(u_int32_t st_nacti)108
607.2 Q -.15(ve)-.25 G(;).15 E
(The number of transactions that are currently acti)133 619.2 Q -.15(ve)
-.25 G(.).15 E(u_int32_t st_nbe)108 631.2 Q(gins;)-.15 E
(The number of transactions that ha)133 643.2 Q .3 -.15(ve b)-.2 H -.15
(eg).15 G(un.).15 E(u_int32_t st_ncommits;)108 655.2 Q
(The number of transactions that ha)133 667.2 Q .3 -.15(ve c)-.2 H
(ommitted.).15 E(u_int32_t st_re)108 679.2 Q(gion_w)-.15 E(ait;)-.1 E
(The number of times that a thread of control w)133 691.2 Q
(as forced to w)-.1 E(ait before obtaining the re)-.1 E(gion lock.)-.15
E(u_int32_t st_re)108 703.2 Q(gion_no)-.15 E -.1(wa)-.25 G(it;).1 E
(The number of times that a thread of control w)133 715.2 Q
(as able to obtain the re)-.1 E(gion lock without w)-.15 E(aiting.)-.1 E
(May 10, 1998)278.085 768 Q(5)201.085 E EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R(DB_TXN_A)
108 84 Q(CTIVE *st_txnarray;)-.4 E 4.106(Ap)133 96 S 1.606
(ointer to an array of)-4.106 F/F1 10/Times-Italic@0 SF(st_nactive)4.106
E F0(DB_TXN_A)4.106 E 1.606
(CTIVE structures, describing the currently acti)-.4 F -.15(ve)-.25 G
2.995(transactions. The)133 108 R(follo)2.995 E .495
(wing \214elds of the DB_TXN_A)-.25 F .495(CTIVE structure \(typedef)-.4
F 1.495 -.5('d i).55 H 2.995(n<).5 G(db)-2.995 E .495(.h>\) will be)-.4
F(\214lled in:)133 120 Q(u_int32_t txnid;)133 148.8 Q
(The transaction ID as returned by)158 160.8 Q F1(txn_be)2.5 E(gin)-.4 E
F0(\(3\).).24 E(DB_LSN lsn;)133 172.8 Q(The LSN of the transaction-be)
158 184.8 Q(gin record.)-.15 E/F2 9/Times-Bold@0 SF(TRANSA)72 206.4 Q
(CTIONS)-.495 E F0 .727(Creating transaction protected applications using the DB access methods requires little system customiza-)
108 218.4 R 3.254(tion. In)108 230.4 R .754(most cases, the def)3.254 F
.754(ault parameters to the locking, logging, memory pool, and transaction subsys-)
-.1 F 1.931(tems will suf)108 242.4 R 4.431(\214ce. Applications)-.25 F
1.931(can use)4.431 F F1(db_appinit)4.431 E F0 1.931
(\(3\) to perform this initialization, or the).68 F 4.43(ym)-.15 G 1.93
(ay do it)-4.43 F -.15(ex)108 254.4 S(plicitly).15 E(.)-.65 E 1.318
(Each database operation \(i.e., an)108 271.2 R 3.818(yc)-.15 G 1.319
(all to a function underlying the handles returned by)-3.818 F F1
(db_open)3.819 E F0 1.319(\(3\) and).24 F F1(db_cur)108 283.2 Q(sor)-.1
E F0 .565(\(3\)\) is normally performed on behalf of a unique lock).73 F
(er)-.1 E 5.565(.I)-.55 G 3.065(fm)-5.565 G .564
(ultiple calls on behalf of the same)-3.065 F(lock)108 295.2 Q
(er are desired, then transactions must be used.)-.1 E .498(Once the application has initialized the DB subsystems that it is using, it may open the DB access method)
108 312 R 3.032(databases. F)108 324 R .532(or applications performing transactions, the databases must be opened after subsystem initial-)
-.15 F .533(ization, and cannot be opened as part of a transaction.)108
336 R .533(Once the databases are opened, the application can)5.533 F
1.217(group sets of operations into transactions, by surrounding the operations with the appropriate)
108 348 R F1(txn_be)3.716 E(gin)-.4 E F0(,).24 E F1(txn_commit)108 360 Q
F0(and)2.509 E F1(txn_abort)2.509 E F0 2.509(calls. Databases)2.509 F
.009(accessed by a transaction must not be closed during the transac-)
2.509 F 2.529(tion. Note,)108 372 R .029(it is not necessary to transaction protect read-only transactions, unless those transactions require)
2.529 F(repeatable reads.)108 384 Q .485(The DB access methods will mak)
108 400.8 R 2.985(et)-.1 G .485
(he appropriate calls into the lock, log and memory pool subsystems in)
-2.985 F 1.164
(order to guarantee that transaction semantics are applied.)108 412.8 R
1.164(When the application is ready to e)6.164 F 1.163(xit, all out-)
-.15 F 1.033(standing transactions should ha)108 424.8 R 1.333 -.15
(ve b)-.2 H 1.034(een committed or aborted.).15 F 1.034
(At this point, all open DB \214les should be)6.034 F 2.843
(closed. Once)108 436.8 R .342(the DB database \214les are closed, the DB subsystems should be closed, either e)
2.843 F .342(xplicitly or by)-.15 F(calling)108 448.8 Q F1(db_appe)2.5 E
(xit)-.2 E F0(\(3\).).68 E 1.611(It is also possible to use the locking, logging and transaction subsystems of DB to pro)
108 465.6 R 1.612(vide transaction)-.15 F .598(semantics to objects other than those described by the DB access methods.)
108 477.6 R .598(In these cases, the application)5.598 F 1.081
(will need more e)108 489.6 R 1.081
(xplicit customization of the subsystems as well as the de)-.15 F -.15
(ve)-.25 G 1.082(lopment of appropriate data-).15 F
(structure-speci\214c reco)108 501.6 Q -.15(ve)-.15 G(ry functions.).15
E -.15(Fo)108 518.4 S 2.89(re).15 G .39
(xample, consider an application that pro)-3.04 F .389
(vides transaction semantics to data stored in plain UNIX \214les)-.15 F
1.098(accessed using the)108 530.4 R F1 -.37(re)3.598 G(ad).37 E F0
1.098(\(2\) and).77 F F1(write)3.598 E F0 1.098(\(2\) system calls.).18
F 1.099(The operations for which transaction protection is)6.099 F
(desired are brack)108 542.4 Q(eted by calls to)-.1 E F1(txn_be)2.5 E
(gin)-.4 E F0(and)2.5 E F1(txn_commit)2.5 E F0(.).68 E .26
(Before data are referenced, the application must mak)108 559.2 R 2.76
(eac)-.1 G .259(all to the lock manager)-2.76 F(,)-.4 E F1(db_loc)2.759
E(k)-.2 E F0 2.759(,f).67 G .259(or a lock of the)-2.759 F .901
(appropriate type \(e.g., read\) on the object being lock)108 571.2 R
3.401(ed. The)-.1 F .901
(object might be a page in the \214le, a byte, a)3.401 F .041
(range of bytes, or some k)108 583.2 R -.15(ey)-.1 G 5.041(.I)-.5 G
2.541(ti)-5.041 G 2.541(su)-2.541 G 2.541(pt)-2.541 G 2.541(ot)-2.541 G
.04(he application to ensure that appropriate locks are acquired.)-2.541
F(Before)5.04 E 3.357(aw)108 595.2 S .858(rite is performed, the application should acquire a write lock on the object, by making an appropriate)
-3.357 F .41(call to the lock manager)108 607.2 R(,)-.4 E F1(db_loc)2.91
E(k)-.2 E F0 5.41(.T).67 G .41(hen, the application should mak)-5.41 F
2.909(eac)-.1 G .409(all to the log manager)-2.909 F(,)-.4 E F1(db_lo)
2.909 E(g)-.1 E F0 2.909(,t).22 G(o)-2.909 E .059
(record enough information to redo the operation in case of f)108 619.2
R .06(ailure after commit and to undo the operation in)-.1 F .47
(case of abort.)108 631.2 R .47(As discussed in the)5.47 F F1(db_lo)2.97
E(g)-.1 E F0 .47
(\(3\) manual page, the application is responsible for pro).22 F .47
(viding an)-.15 F(y)-.15 E 1.033(necessary structure to the log record.)
108 643.2 R -.15(Fo)6.034 G 3.534(re).15 G 1.034
(xample, the application must understand what part of the log)-3.684 F
.481(record is an operation code, what part identi\214es the \214le being modi\214ed, what part is redo information, and)
108 655.2 R(what part is undo information.)108 667.2 Q 1.298(After the log message is written, the application may issue the write system call.)
108 684 R 1.299(After all requests are)6.299 F 1.29
(issued, the application may call)108 696 R F1(txn_commit)3.79 E F0 6.29
(.W).68 G(hen)-6.29 E F1(txn_commit)3.79 E F0 1.29
(returns, the caller is guaranteed that all)3.79 F
(necessary log writes ha)108 708 Q .3 -.15(ve b)-.2 H
(een written to disk.).15 E 1.081(At an)108 724.8 R 3.581(yt)-.15 G
1.081(ime, the application may call)-3.581 F F1(txn_abort)3.581 E F0
3.581(,w).68 G 1.081(hich will result in the appropriate calls to the)
-3.581 F F1 -.37(re)3.582 G(co).37 E(ver)-.1 E F0(May 10, 1998)278.085
768 Q(6)201.085 E EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R .315
(function to restore the `)108 84 R(`database')-.74 E 2.815('t)-.74 G
2.815(oac)-2.815 G .315(onsistent pre-transaction state.)-2.815 F .314
(\(The reco)5.315 F -.15(ve)-.15 G 2.814(rf).15 G .314
(unction must be able)-2.814 F
(to either re-apply or undo the update depending on the conte)108 96 Q
(xt, for each dif)-.15 E(ferent type of log record.\))-.25 E .746
(If the application should crash, the reco)108 112.8 R -.15(ve)-.15 G
.746(ry process uses the).15 F/F1 10/Times-Italic@0 SF(db_lo)3.246 E(g)
-.1 E F0(interf)3.246 E .746(ace to read the log and call the)-.1 F F1
-.37(re)108 124.8 S(co).37 E(ver)-.1 E F0
(function to restore the database to a consistent state.)2.5 E(The)108
141.6 Q F1(txn_pr)3.098 E(epar)-.37 E(e)-.37 E F0 .598(function pro)
3.098 F .598(vides the core functionality to implement distrib)-.15 F
.597(uted transactions, b)-.2 F .597(ut it does)-.2 F 2.288
(not manage the noti\214cation of distrib)108 153.6 R 2.288
(uted transaction managers.)-.2 F 2.289
(The caller is responsible for issuing)7.289 F F1(txn_pr)108 165.6 Q
(epar)-.37 E(e)-.37 E F0 1.295
(calls to all sites participating in the transaction.)3.795 F 1.294
(If all responses are positi)6.294 F -.15(ve)-.25 G 3.794(,t).15 G 1.294
(he caller can)-3.794 F .822(issue a)108 177.6 R F1(txn_commit)3.322 E
F0 5.822(.I).68 G 3.322(fa)-5.822 G 1.122 -.15(ny o)-3.322 H 3.322(ft)
.15 G .822(he responses are ne)-3.322 F -.05(ga)-.15 G(ti).05 E -.15(ve)
-.25 G 3.322(,t).15 G .823(he caller should issue a)-3.322 F F1
(txn_abort)3.323 E F0 5.823(.I).68 G 3.323(ng)-5.823 G(eneral,)-3.323 E
(the)108 189.6 Q F1(txn_pr)2.5 E(epar)-.37 E(e)-.37 E F0
(call requires that the transaction log be \215ushed to disk.)2.5 E/F2 9
/Times-Bold@0 SF(TRANSA)72 206.4 Q(CTION ID LIMITS)-.495 E F0 .165
(The transaction ID space in Berk)108 218.4 R(ele)-.1 E 2.665(yD)-.15 G
2.665(Bi)-2.665 G 2.665(s2)-2.665 G .165(^31, or 2 billion entries.)
-2.665 F .165(It is possible that some en)5.165 F(vironments)-.4 E .422
(may need to be a)108 230.4 R -.1(wa)-.15 G .422(re of this limitation.)
.1 F .423
(Consider an application performing 600 transactions a second for)5.422
F(15 hours a day)108 242.4 Q 5(.T)-.65 G
(he transaction ID space will run out in roughly 66 days:)-5 E
(2^31 / \(600 * 15 * 60 * 60\) = 66)144 259.2 Q
(Doing only 100 transactions a second e)108 276 Q
(xhausts the transaction ID space in roughly one year)-.15 E(.)-.55 E
1.049(The transaction ID space is reset each time reco)108 292.8 R -.15
(ve)-.15 G 1.048(ry is run.).15 F 1.048
(If you reach the end of your transaction ID)6.048 F 1.262
(space, shut do)108 304.8 R 1.263
(wn your applications and restart them after running reco)-.25 F -.15
(ve)-.15 G 1.263(ry \(see).15 F F1(db_r)3.763 E(eco)-.37 E(ver)-.1 E F0
1.263(\(1\) for more).73 F 2.823(information\). The)108 316.8 R .323
(most recently allocated transaction ID is the)2.823 F F1(st_last_txnid)
2.823 E F0 -.25(va)2.823 G .323(lue in the transaction statis-).25 F
(tics information, and is displayed by the)108 328.8 Q F1(db_stat)2.5 E
F0(\(1\) utility).68 E(.)-.65 E F2(ENVIR)72 345.6 Q(ONMENT V)-.27 E
(ARIABLES)-1.215 E F0(The follo)108 357.6 Q(wing en)-.25 E(vironment v)
-.4 E(ariables af)-.25 E(fect the e)-.25 E -.15(xe)-.15 G(cution of).15
E F1(db_txn)2.5 E F0(:).24 E(DB_HOME)108 374.4 Q 2.886(If the)133 386.4
R F1(dben)5.386 E(v)-.4 E F0(ar)5.386 E 2.886(gument to)-.18 F F1
(txn_open)5.387 E F0 -.1(wa)5.387 G 5.387(si).1 G 2.887
(nitialized using)-5.387 F F1(db_appinit)5.387 E F0 5.387(,t).68 G 2.887
(he en)-5.387 F 2.887(vironment v)-.4 F(ariable)-.25 E .508(DB_HOME may be used as the path of the database home for the interpretation of the)
133 398.4 R F1(dir)3.008 E F0(ar)3.008 E(gument)-.18 E(to)133 410.4 Q F1
(txn_open)2.5 E F0 2.5(,a).24 G 2.5(sd)-2.5 G(escribed in)-2.5 E F1
(db_appinit)2.5 E F0(\(3\).).68 E(TMPDIR)108 427.2 Q .987(If the)133
439.2 R F1(dben)3.487 E(v)-.4 E F0(ar)3.488 E .988(gument to)-.18 F F1
(txn_open)3.488 E F0 -.1(wa)3.488 G 3.488(sN).1 G .988
(ULL or not initialized using)-3.488 F F1(db_appinit)3.488 E F0 3.488
(,t).68 G .988(he en)-3.488 F(vironment)-.4 E -.25(va)133 451.2 S .069(riable TMPDIR may be used as the directory in which to create the transaction re)
.25 F .068(gion, as described)-.15 F(in the)133 463.2 Q F1(txn_open)2.5
E F0(section abo)2.5 E -.15(ve)-.15 G(.).15 E F2(ERR)72 480 Q(ORS)-.27 E
F0(The)108 492 Q F1(txn_open)3.291 E F0 .791(function may f)3.291 F .791
(ail and return)-.1 F F1(errno)3.292 E F0 .792(for an)3.292 F 3.292(yo)
-.15 G 3.292(ft)-3.292 G .792(he errors speci\214ed for the follo)-3.292
F .792(wing DB and)-.25 F(library functions: close\(2\), db_v)108 504 Q
(ersion\(3\), fcntl\(2\), f)-.15 E
(\215ush\(3\), lseek\(2\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\),)-.1 E(mmap\(2\), munmap\(2\), open\(2\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)
108 516 Q(y\(3\), strdup\(3\), strerror\(3\),)-.1 E
(strlen\(3\), time\(3\), txn_unlink\(3\), unlink\(2\), and write\(2\).)
108 528 Q(In addition, the)108 544.8 Q F1(txn_open)2.5 E F0
(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5 E F0
(for the follo)2.5 E(wing conditions:)-.25 E([EINV)108 561.6 Q(AL])-1.35
E(An in)133 573.6 Q -.25(va)-.4 G(lid \215ag v).25 E
(alue or parameter w)-.25 E(as speci\214ed.)-.1 E
(The DB_THREAD \215ag w)133 597.6 Q(as speci\214ed and spinlocks are not implemented for this architecture.)
-.1 E(The)133 621.6 Q F1(dben)2.5 E(v)-.4 E F0(parameter w)2.5 E
(as NULL.)-.1 E([EA)108 638.4 Q(GAIN])-.4 E(The shared memory re)133
650.4 Q(gion w)-.15 E(as lock)-.1 E(ed and \(repeatedly\) una)-.1 E -.25
(va)-.2 G(ilable.).25 E(The)108 667.2 Q F1(txn_be)3.16 E(gin)-.4 E F0
.66(function may f)3.16 F .66(ail and return)-.1 F F1(errno)3.16 E F0
.659(for an)3.16 F 3.159(yo)-.15 G 3.159(ft)-3.159 G .659
(he errors speci\214ed for the follo)-3.159 F .659(wing DB and)-.25 F
(library functions: fcntl\(2\), f)108 679.2 Q
(\215ush\(3\), log_put\(3\), lseek\(2\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\), mmap\(2\),)-.1 E
(munmap\(2\), strerror\(3\), and write\(2\).)108 691.2 Q
(In addition, the)108 708 Q F1(txn_be)2.5 E(gin)-.4 E F0(function may f)
2.5 E(ail and return)-.1 E F1(errno)2.5 E F0(for the follo)2.5 E
(wing conditions:)-.25 E(May 10, 1998)278.085 768 Q(7)201.085 E EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_TXN\(3\) DB_TXN\(3\))72 48 R([ENOSPC])
108 84 Q
(The maximum number of concurrent transactions has been reached.)133 96
Q(The)108 112.8 Q/F1 10/Times-Italic@0 SF(txn_pr)2.654 E(epar)-.37 E(e)
-.37 E F0 .154(function may f)2.654 F .154(ail and return)-.1 F F1
(errno)2.654 E F0 .154(for an)2.654 F 2.654(yo)-.15 G 2.654(ft)-2.654 G
.154(he errors speci\214ed for the follo)-2.654 F .153(wing DB and)-.25
F(library functions: fcntl\(2\), f)108 124.8 Q
(\215ush\(3\), log_\215ush\(3\), and strerror\(3\).)-.25 E(The)108 141.6
Q F1(txn_commit)2.736 E F0 .236(function may f)2.736 F .236
(ail and return)-.1 F F1(errno)2.736 E F0 .236(for an)2.736 F 2.736(yo)
-.15 G 2.736(ft)-2.736 G .236(he errors speci\214ed for the follo)-2.736
F .237(wing DB and)-.25 F(library functions: fcntl\(2\), f)108 153.6 Q
(\215ush\(3\), lock_v)-.25 E(ec\(3\), log_put\(3\), malloc\(3\), memcp)
-.15 E(y\(3\), and strerror\(3\).)-.1 E(In addition, the)108 170.4 Q F1
(txn_commit)2.5 E F0(function may f)2.5 E(ail and return)-.1 E F1(errno)
2.5 E F0(for the follo)2.5 E(wing conditions:)-.25 E([EINV)108 187.2 Q
(AL])-1.35 E(The transaction w)133 199.2 Q(as aborted.)-.1 E(The)108 216
Q F1(txn_abort)3.168 E F0 .668(function may f)3.168 F .668
(ail and return)-.1 F F1(errno)3.168 E F0 .668(for an)3.168 F 3.168(yo)
-.15 G 3.168(ft)-3.168 G .668(he errors speci\214ed for the follo)-3.168
F .667(wing DB and)-.25 F(library functions: DBen)108 228 Q(v->tx_reco)
-.4 E -.15(ve)-.15 G(r\(3\), fcntl\(2\), f).15 E(\215ush\(3\), lock_v)
-.25 E(ec\(3\), log_get\(3\), memset\(3\), and str)-.15 E(-)-.2 E
(error\(3\).)108 240 Q([EINV)108 256.8 Q(AL])-1.35 E(The transaction w)
133 268.8 Q(as already aborted.)-.1 E(The)108 285.6 Q F1(txn_c)2.951 E
(hec)-.15 E(kpoint)-.2 E F0 .451(function may f)2.951 F .451
(ail and return)-.1 F F1(errno)2.951 E F0 .451(for an)2.951 F 2.951(yo)
-.15 G 2.95(ft)-2.951 G .45(he errors speci\214ed for the follo)-2.95 F
.45(wing DB)-.25 F(and library functions: fcntl\(2\), f)108 297.6 Q
(\215ush\(3\), log_compare\(3\), log_put\(3\), malloc\(3\), memcp)-.25 E
(y\(3\),)-.1 E
(memp_sync\(3\), memset\(3\), strerror\(3\), and time\(3\).)108 309.6 Q
([EINV)108 326.4 Q(AL])-1.35 E(An in)133 338.4 Q -.25(va)-.4 G
(lid \215ag v).25 E(alue or parameter w)-.25 E(as speci\214ed.)-.1 E
(The)108 355.2 Q F1(txn_close)3.23 E F0 .73(function may f)3.23 F .73
(ail and return)-.1 F F1(errno)3.23 E F0 .73(for an)3.23 F 3.23(yo)-.15
G 3.23(ft)-3.23 G .73(he errors speci\214ed for the follo)-3.23 F .73
(wing DB and)-.25 F(library functions: close\(2\), fcntl\(2\), f)108
367.2 Q(\215ush\(3\), log_\215ush\(3\), munmap\(2\), strerror\(3\), and txn_abort\(3\).)
-.25 E(The)108 384 Q F1(txn_unlink)2.982 E F0 .482(function may f)2.982
F .483(ail and return)-.1 F F1(errno)2.983 E F0 .483(for an)2.983 F
2.983(yo)-.15 G 2.983(ft)-2.983 G .483
(he errors speci\214ed for the follo)-2.983 F .483(wing DB and)-.25 F
(library functions: close\(2\), fcntl\(2\), f)108 396 Q
(\215ush\(3\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\), mmap\(2\), munmap\(2\),)-.1 E
(open\(2\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)108
408 Q(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), and unlink\(2\).)
-.1 E(In addition, the)108 424.8 Q F1(txn_unlink)2.5 E F0
(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5 E F0
(for the follo)2.5 E(wing conditions:)-.25 E([EB)108 441.6 Q(USY])-.1 E
(The shared memory re)133 453.6 Q(gion w)-.15 E
(as in use and the force \215ag w)-.1 E(as not set.)-.1 E(The)108 470.4
Q F1(txn_stat)3.568 E F0 1.069(function may f)3.568 F 1.069
(ail and return)-.1 F F1(errno)3.569 E F0 1.069(for an)3.569 F 3.569(yo)
-.15 G 3.569(ft)-3.569 G 1.069(he errors speci\214ed for the follo)
-3.569 F 1.069(wing DB and)-.25 F
(library functions: fcntl\(2\), and malloc\(3\).)108 482.4 Q/F2 9
/Times-Bold@0 SF(SEE ALSO)72 499.2 Q F1 .904(LIBTP: P)108 511.2 R
(ortable)-.8 E 3.404(,M)-.1 G .904(odular T)-3.404 F -.15(ra)-.55 G .904
(nsactions for UNIX).15 F F0 3.404(,M).94 G(ar)-3.404 E .904(go Seltzer)
-.18 F 3.403(,M)-.4 G .903(ichael Olson, USENIX proceedings,)-3.403 F
-.4(Wi)108 523.2 S(nter 1992.).4 E F2 -.09(BU)72 540 S(GS).09 E F0
(Nested transactions are not yet implemented.)108 552 Q F1(db_ar)108 576
Q -.15(ch)-.37 G(ive).15 E F0(\(1\),).18 E F1(db_c)2.5 E(hec)-.15 E
(kpoint)-.2 E F0(\(1\),).68 E F1(db_deadloc)2.5 E(k)-.2 E F0(\(1\),).67
E F1(db_dump)2.5 E F0(\(1\),).19 E F1(db_load)2.5 E F0(\(1\),).77 E F1
(db_r)2.5 E(eco)-.37 E(ver)-.1 E F0(\(1\),).73 E F1(db_stat)2.5 E F0
(\(1\),).68 E F1(db_intr)108 588 Q(o)-.45 E F0(\(3\),).18 E F1
(db_appinit)2.5 E F0(\(3\),).68 E F1(db_cur)2.5 E(sor)-.1 E F0(\(3\),)
.73 E F1(db_dbm)2.5 E F0(\(3\),).32 E F1(db_internal)2.5 E F0(\(3\),).51
E F1(db_loc)2.5 E(k)-.2 E F0(\(3\),).67 E F1(db_lo)2.5 E(g)-.1 E F0
(\(3\),).22 E F1(db_mpool)2.5 E F0(\(3\),).51 E F1(db_open)108 600 Q F0
(\(3\),).24 E F1(db_thr)2.5 E(ead)-.37 E F0(\(3\),).77 E F1(db_txn)2.5 E
F0(\(3\)).24 E(May 10, 1998)278.085 768 Q(8)201.085 E EP
%%Trailer
end
%%EOF
