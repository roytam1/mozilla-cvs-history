%!PS-Adobe-3.0
%%Creator: groff version 1.11
%%CreationDate: Sun May 31 22:58:22 1998
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.11 0
%%Pages: 9
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.11 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Roman@0 ENC0/Times-Roman RE
/Times-Bold@0 ENC0/Times-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Bold@0 SF -.18(NA)72 28.8 S(ME).18 E/F1 10/Times-Roman@0 SF
(db_log \255 log management functions)108 40.8 Q F0(SYNOPSIS)72 57.6 Q
/F2 10/Times-Bold@0 SF(#include <db)108 69.6 Q(.h>)-.4 E(int)108 93.6 Q
(log_open\(const char *dir)108 105.6 Q(,)-.92 E
(u_int32_t \215ags, int mode, DB_ENV *dben)158 117.6 Q 1.1 -.55(v, D)-.4
H(B_LOG **r).55 E(egionp\);)-.18 E(int)108 141.6 Q
(log_close\(DB_LOG *logp\);)108 153.6 Q(int)108 177.6 Q
(log_\215ush\(DB_LOG *logp, const DB_LSN *lsn\);)108 189.6 Q(int)108
213.6 Q
(log_get\(DB_LOG *logp, DB_LSN *lsn, DBT *data, u_int32_t \215ags\);)108
225.6 Q(int)108 249.6 Q(log_compar)108 261.6 Q
(e\(const DB_LSN *lsn0, const DB_LSN *lsn1\);)-.18 E(int)108 285.6 Q(log_\214le\(DB_LOG *logp, const DB_LSN *lsn, char *namep, size_t len\);)
108 297.6 Q(int)108 321.6 Q(log_put\(DB_LOG *logp, DB_LSN *lsn, const DBT *data, u_int32_t \215ags\);)
108 333.6 Q(int)108 357.6 Q(log_unlink\(const char *dir)108 369.6 Q 2.5
(,i)-.92 G(nt f)-2.5 E(or)-.25 E(ce, DB_ENV *\);)-.18 E(int)108 393.6 Q
(log_ar)108 405.6 Q(chi)-.18 E -.1(ve)-.1 G(\(DB_LOG *logp,).1 E
(char **list[], u_int32_t \215ags, v)158 417.6 Q
(oid *\(*db_malloc\)\(size_t\)\);)-.1 E(int)108 441.6 Q(log_r)108 453.6
Q(egister\(DB_LOG *logp,)-.18 E
(const DB *dbp, const char *name, DBTYPE type, u_int32_t *\214dp\);)158
465.6 Q(int)108 489.6 Q(log_unr)108 501.6 Q
(egister\(DB_LOG *logp, u_int32_t \214d\);)-.18 E(int)108 525.6 Q
(log_stat\(DB_LOG *logp, DB_LOG_ST)108 537.6 Q 1.9 -.95(AT *)-.9 H
(*spp, v).95 E(oid *\(*db_malloc\)\(size_t\)\);)-.1 E F0(DESCRIPTION)72
554.4 Q F1 .486(The DB library is a f)108 566.4 R .485
(amily of groups of functions that pro)-.1 F .485
(vides a modular programming interf)-.15 F .485(ace to trans-)-.1 F .523
(actions and record-oriented \214le access.)108 578.4 R .523
(The library includes support for transactions, locking, logging and)
5.523 F .507(\214le page caching, as well as v)108 590.4 R .507
(arious inde)-.25 F -.15(xe)-.15 G 3.007(da).15 G .506(ccess methods.)
-3.007 F(Man)5.506 E 3.006(yo)-.15 G 3.006(ft)-3.006 G .506
(he functional groups \(e.g., the \214le)-3.006 F .168(page caching functions\) are useful independent of the other DB functions, although some functional groups)
108 602.4 R .122(are e)108 614.4 R .121(xplicitly based on other functional groups \(e.g., transactions and logging\).)
-.15 F -.15(Fo)5.121 G 2.621(rag).15 G .121(eneral description of)-2.621
F(the DB package, see)108 626.4 Q/F3 10/Times-Italic@0 SF(db_intr)2.5 E
(o)-.45 E F1(\(3\).).18 E
(This manual page describes the speci\214c details of the log manager)
108 643.2 Q(.)-.55 E .03(These functions pro)108 660 R .03
(vide a general-purpose logging f)-.15 F .03(acility suf)-.1 F .03
(\214cient for transaction management.)-.25 F .03(Logs can)5.03 F
(be shared by multiple processes.)108 672 Q .347(The DB transaction log is represented by a directory containing a set of \214les.)
108 688.8 R .347(The log is a record-oriented,)5.347 F
(append-only \214le, with records identi\214ed and accessed via)108
700.8 Q F3(DB_LSN)2.5 E F1 1.1 -.55('s \()1.1 H
(database log sequence numbers\).).55 E(DB_LSN')108 717.6 Q 2.65(sa)-.55
G .15(re returned on each)-2.65 F F3(lo)2.65 E(g_put)-.1 E F1 .151
(operation, and only those DB_LSN')2.651 F 2.651(sr)-.55 G .151
(eturned by)-2.651 F F3(lo)2.651 E(g_put)-.1 E F1 .151(can later)2.651 F
(be used to retrie)108 729.6 Q .3 -.15(ve r)-.25 H(ecords from the log.)
.15 E(1)535 768 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R/F1 10
/Times-Italic@0 SF(lo)92 84 Q(g_open)-.1 E F0(The)108 96 Q F1(lo)2.666 E
(g_open)-.1 E F0 .166(function copies a pointer)2.666 F 2.666(,t)-.4 G
2.666(ot)-2.666 G .166(he log identi\214ed by the)-2.666 F/F2 10
/Times-Bold@0 SF(dir)2.666 E(ectory)-.18 E F1(dir)2.666 E F0 2.666(,i)
.73 G .165(nto the memory location)-2.666 F(referenced by)108 108 Q F1
-.37(re)2.5 G(gionp)-.03 E F0(.).19 E 1.846(If the)108 124.8 R F1(dben)
4.346 E(v)-.4 E F0(ar)4.346 E 1.846(gument to)-.18 F F1(lo)4.346 E
(g_open)-.1 E F0 -.1(wa)4.347 G 4.347(si).1 G 1.847(nitialized using)
-4.347 F F1(db_appinit)4.347 E F0(,).68 E F1(dir)4.347 E F0 1.847
(is interpreted as described by)4.347 F F1(db_appinit)108 136.8 Q F0
(\(3\).).68 E .668(Otherwise, if)108 153.6 R F1(dir)3.168 E F0 .668
(is not NULL, it is interpreted relati)3.168 F .968 -.15(ve t)-.25 H
3.168(ot).15 G .668(he current w)-3.168 F .667
(orking directory of the process.)-.1 F(If)5.667 E F1(dir)108 165.6 Q F0
2.387(is NULL, the follo)4.887 F 2.388(wing en)-.25 F 2.388(vironment v)
-.4 F 2.388(ariables are check)-.25 F 2.388(ed in order: `)-.1 F
(`TMPDIR')-.74 E 2.388(', `)-.74 F(`TEMP')-.74 E 2.388(', and)-.74 F
-.74(``)108 177.6 S(TMP').74 E 2.716('. If)-.74 F .216
(one of them is set, log \214les are created relati)2.716 F .516 -.15
(ve t)-.25 H 2.716(ot).15 G .216(he directory it speci\214es.)-2.716 F
.215(If none of them are)5.215 F .597
(set, the \214rst possible one of the follo)108 189.6 R .598
(wing directories is used:)-.25 F F1(/var/tmp)3.098 E F0(,).19 E F1
(/usr/tmp)3.098 E F0(,).19 E F1(/temp)3.098 E F0(,).19 E F1(/tmp)3.098 E
F0(,).19 E F1(C:/temp)3.098 E F0(and)3.098 E F1(C:/tmp)108 201.6 Q F0(.)
.19 E(All \214les associated with the log are created in this directory)
108 218.4 Q 5(.T)-.65 G(his directory must already e)-5 E(xist when)-.15
E .012(log_open is called.)108 242.4 R .012(If the log already e)5.012 F
.012(xists, the process must ha)-.15 F .312 -.15(ve p)-.2 H .011
(ermission to read and write the e).15 F(xisting)-.15 E 2.5(\214les. If)
108 254.4 R(the log does not already e)2.5 E
(xist, it is optionally created and initialized.)-.15 E .417
(If the log re)108 271.2 R .418(gion is being created and log \214les are already present, the log \214les are `)
-.15 F(`reco)-.74 E -.15(ve)-.15 G(red').15 E 2.918('a)-.74 G .418
(nd subse-)-2.918 F
(quent log writes are appended to the end of the log.)108 283.2 Q
(The log is stored in one or more \214les in the speci\214ed directory)
108 300 Q 5(.E)-.65 G(ach \214le is named using the format)-5 E
(log.NNNNN)158 324 Q(where `)108 348 Q(`NNNNN')-.74 E 2.5('i)-.74 G 2.5
(st)-2.5 G(he sequence number of the \214le within the log.)-2.5 E(The)
108 364.8 Q F1<8d61>3.761 E(gs)-.1 E F0(and)3.761 E F1(mode)3.761 E F0
(ar)3.761 E 1.261(guments specify ho)-.18 F 3.761<778c>-.25 G 1.26
(les will be opened and/or created when the)-3.761 F 3.76(yd)-.15 G(on')
-3.76 E 3.76(ta)-.18 G(lready)-3.76 E -.15(ex)108 376.8 S 2.5(ist. The)
.15 F(\215ags v)2.5 E(alue is speci\214ed by)-.25 E F2(or)2.5 E F0
('ing together one or more of the follo)A(wing v)-.25 E(alues:)-.25 E
(DB_CREA)108 393.6 Q(TE)-1.11 E .483(Create an)133 405.6 R 2.983(yu)-.15
G .483(nderlying \214les, as necessary)-2.983 F 5.483(.I)-.65 G 2.983
(ft)-5.483 G .483(he \214les do not already e)-2.983 F .483
(xist and the DB_CREA)-.15 F .484(TE \215ag)-1.11 F
(is not speci\214ed, the call will f)133 417.6 Q(ail.)-.1 E(DB_THREAD)
108 446.4 Q 1.702(Cause the DB_LOG handle returned by the)133 458.4 R F1
(lo)4.201 E(g_open)-.1 E F0 1.701
(function to be useable by multiple threads)4.201 F
(within a single address space, i.e., to be `)133 470.4 Q
(`free-threaded')-.74 E('.)-.74 E .102
(All \214les created by the log subsystem are created with mode)108
487.2 R F1(mode)2.602 E F0 .103(\(as described in)2.603 F F1 -.15(ch)
2.603 G(mod).15 E F0 .103(\(2\)\) and modi\214ed).77 F .169
(by the process' umask v)108 499.2 R .169
(alue at the time of creation \(see)-.25 F F1(umask)2.669 E F0 2.669
(\(2\)\). The).67 F .169(group o)2.669 F .169
(wnership of created \214les is)-.25 F
(based on the system and directory def)108 511.2 Q
(aults, and is not further speci\214ed by DB.)-.1 E 1.322
(The logging subsystem is con\214gured based on the)108 528 R F1(dben)
3.822 E(v)-.4 E F0(ar)3.822 E 1.322(gument to)-.18 F F1(lo)3.822 E
(g_open)-.1 E F0 3.823(,w).24 G 1.323(hich is a pointer to a)-3.823 F
1.924(structure of type DB_ENV \(typedef)108 540 R 2.924 -.5('d i).55 H
4.424(n<).5 G(db)-4.424 E 4.424(.h>\). Applications)-.4 F 1.924
(will normally use the same DB_ENV)4.424 F(structure \(initialized by)
108 552 Q F1(db_appinit)2.5 E F0(\(3\)\), as an ar).68 E
(gument to all of the subsystems in the DB package.)-.18 E .439(References to the DB_ENV structure are maintained by DB, so it may not be discarded until the last close)
108 568.8 R .287
(function, corresponding to an open function for which it w)108 580.8 R
.286(as an ar)-.1 F .286(gument, has returned.)-.18 F .286
(In order to ensure)5.286 F 1.578(compatibility with future releases of DB, all \214elds of the DB_ENV structure that are not e)
108 592.8 R 1.579(xplicitly set)-.15 F .171(should be initialized to 0 before the \214rst time the structure is used.)
108 604.8 R .17(Do this by declaring the structure e)5.17 F(xter)-.15 E
(-)-.2 E(nal or static, or by calling the C library routine)108 616.8 Q
F1(bzer)2.5 E(o)-.45 E F0(\(3\) or).18 E F1(memset)2.5 E F0(\(3\).).68 E
.205(The \214elds of the DB_ENV structure used by)108 633.6 R F1(lo)
2.706 E(g_open)-.1 E F0 .206(are described belo)2.706 F 4.006 -.65(w. I)
-.25 H(f).65 E F1(dben)2.706 E(v)-.4 E F0 .206(is NULL or an)2.706 F
2.706(yo)-.15 G 2.706(fi)-2.706 G(ts)-2.706 E
(\214elds are set to 0, def)108 645.6 Q
(aults appropriate for the system are used where possible.)-.1 E
(The follo)108 662.4 Q(wing \214elds in the DB_ENV structure may be initialized before calling)
-.25 E F1(lo)2.5 E(g_open)-.1 E F0(:).24 E -.2(vo)108 679.2 S
(id *\(*db_errcall\)\(char *db_errpfx, char *b).2 E(uf)-.2 E(fer\);)-.25
E(FILE *db_err\214le;)108 691.2 Q(const char *db_errpfx;)108 703.2 Q
(May 10, 1998)278.085 768 Q(2)201.085 E EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R(int db_v)
108 84 Q(erbose;)-.15 E(The error \214elds of the DB_ENV beha)133 96 Q
.3 -.15(ve a)-.2 H 2.5(sd).15 G(escribed for)-2.5 E/F1 10/Times-Italic@0
SF(db_appinit)2.5 E F0(\(3\).).68 E(u_int32_t lg_max;)108 136.8 Q .363
(The maximum size of a single \214le in the log.)133 148.8 R .362
(Because DB_LSN \214le of)5.362 F .362(fsets are unsigned 4-byte v)-.25
F(al-)-.25 E(ues,)133 160.8 Q F1(lg_max)2.5 E F0(may not be lar)2.5 E
(ger than the maximum unsigned 4-byte v)-.18 E(alue.)-.25 E(If)133 184.8
Q F1(lg_max)2.5 E F0(is 0, a def)2.5 E(ault v)-.1 E(alue is used.)-.25 E
(See the section "LOG FILE LIMITS" belo)133 208.8 Q 1.3 -.65(w, f)-.25 H
(or further information.).65 E(The)108 225.6 Q F1(lo)2.5 E(g_open)-.1 E
F0(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)
2.5 E(ailure and 0 on success.)-.1 E F1(lo)92 242.4 Q(g_close)-.1 E F0
(The)108 254.4 Q F1(lo)2.5 E(g_close)-.1 E F0
(function closes the log speci\214ed by the)2.5 E F1(lo)2.5 E(gp)-.1 E
F0(ar)2.5 E(gument.)-.18 E .408(In addition, if the)108 271.2 R F1(dir)
2.909 E F0(ar)2.909 E .409(gument to)-.18 F F1(lo)2.909 E(g_open)-.1 E
F0 -.1(wa)2.909 G 2.909(sN).1 G .409(ULL and)-2.909 F F1(dben)2.909 E(v)
-.4 E F0 -.1(wa)2.909 G 2.909(sn).1 G .409(ot initialized using)-2.909 F
F1(db_appinit)2.909 E F0 2.909(,a).68 G(ll)-2.909 E
(\214les created for this shared re)108 283.2 Q(gion will be remo)-.15 E
-.15(ve)-.15 G(d, as if).15 E F1(lo)2.5 E(g_unlink)-.1 E F0
(were called.)2.5 E 1.922
(When multiple threads are using the DB_LOG handle concurrently)108 300
R 4.422(,o)-.65 G 1.922(nly a single thread may call the)-4.422 F F1(lo)
108 312 Q(g_close)-.1 E F0(function.)2.5 E(The)108 328.8 Q F1(lo)2.5 E
(g_close)-.1 E F0(function returns the v)2.5 E(alue of)-.25 E F1(errno)
2.5 E F0(on f)2.5 E(ailure and 0 on success.)-.1 E F1(lo)92 345.6 Q
(g_\215ush)-.1 E F0(The)108 357.6 Q F1(lo)2.744 E(g_\215ush)-.1 E F0
.244(function guarantees that all log records whose LSNs are less than or equal to the)
2.744 F F1(lsn)2.745 E F0(parame-)2.745 E(ter ha)108 369.6 Q .3 -.15
(ve b)-.2 H(een written to disk.).15 E(If)5 E F1(lsn)2.5 E F0
(is NULL, all records in the log are \215ushed.)2.5 E(The)108 386.4 Q F1
(lo)2.5 E(g_\215ush)-.1 E F0(function returns the v)2.5 E(alue of)-.25 E
F1(errno)2.5 E F0(on f)2.5 E(ailure and 0 on success.)-.1 E F1(lo)92
403.2 Q(g_g)-.1 E(et)-.1 E F0(The)108 415.2 Q F1(lo)2.681 E(g_g)-.1 E
(et)-.1 E F0 .181
(function implements a cursor inside of the log, retrie)2.681 F .18
(ving records from the log according to the)-.25 F F1(lsn)108 427.2 Q F0
(and)2.5 E F1<8d61>2.5 E(gs)-.1 E F0(parameters.)2.5 E .679
(The data \214eld of the)108 444 R F1(data)3.179 E F0 .679
(structure is set to the record retrie)3.179 F -.15(ve)-.25 G 3.18(da)
.15 G .68(nd the size \214eld indicates the number of)-3.18 F .783
(bytes in the record.)108 456 R(See)5.783 E F1(db_dbt)3.283 E F0 .783
(\(3\) for a description of other \214elds in the).68 F F1(data)3.283 E
F0(structure.)3.283 E/F2 10/Times-Bold@0 SF .782(When multiple)5.783 F
(thr)108 468 Q 1.928(eads ar)-.18 F 4.428(eu)-.18 G 1.928(sing the r)
-4.428 F(etur)-.18 E 1.928(ned DB_LOG handle concurr)-.15 F(ently)-.18 E
4.428(,e)-.55 G 1.929(ither the DB_DBT_MALLOC or)-4.428 F
(DB_DBT_USERMEM \215ags must be speci\214ed f)108 480 Q
(or any DBT used f)-.25 E(or data r)-.25 E(etrie)-.18 E -.1(va)-.15 G
(l.).1 E F0(The)108 496.8 Q F1<8d61>2.5 E(gs)-.1 E F0
(parameter must be set to e)2.5 E(xactly one of the follo)-.15 E(wing v)
-.25 E(alues:)-.25 E(DB_CHECKPOINT)108 513.6 Q .153(The last record written with the DB_CHECKPOINT \215ag speci\214ed to the)
133 525.6 R F1(lo)2.653 E(g_put)-.1 E F0 .152(function is returned)2.653
F .656(in the)133 537.6 R F1(data)3.156 E F0(ar)3.156 E 3.156
(gument. The)-.18 F F1(lsn)3.156 E F0(ar)3.156 E .656(gument is o)-.18 F
-.15(ve)-.15 G .656(rwritten with the DB_LSN of the record returned.).15
F(If)5.657 E .542(no record has been pre)133 549.6 R .541(viously written with the DB_CHECKPOINT \215ag speci\214ed, the \214rst record in)
-.25 F(the log is returned.)133 561.6 Q(If the log is empty the)133
578.4 Q F1(lo)2.5 E(g_g)-.1 E(et)-.1 E F0(function will return DB_NO)2.5
E(TFOUND.)-.4 E(DB_FIRST)108 595.2 Q .476(The \214rst record from an)133
607.2 R 2.976(yo)-.15 G 2.976(ft)-2.976 G .476
(he log \214les found in the log directory is returned in the)-2.976 F
F1(data)2.977 E F0(ar)2.977 E(gument.)-.18 E(The)133 619.2 Q F1(lsn)2.5
E F0(ar)2.5 E(gument is o)-.18 E -.15(ve)-.15 G
(rwritten with the DB_LSN of the record returned.).15 E
(If the log is empty the)133 636 Q F1(lo)2.5 E(g_g)-.1 E(et)-.1 E F0
(function will return DB_NO)2.5 E(TFOUND.)-.4 E(DB_LAST)108 652.8 Q .367
(The last record in the log is returned in the)133 664.8 R F1(data)2.867
E F0(ar)2.867 E 2.867(gument. The)-.18 F F1(lsn)2.866 E F0(ar)2.866 E
.366(gument is o)-.18 F -.15(ve)-.15 G .366(rwritten with the).15 F
(DB_LSN of the record returned.)133 676.8 Q(If the log is empty)133
693.6 Q 2.5(,t)-.65 G(he)-2.5 E F1(lo)2.5 E(g_g)-.1 E(et)-.1 E F0
(function will return DB_NO)2.5 E(TFOUND.)-.4 E(May 10, 1998)278.085 768
Q(3)201.085 E EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R(DB_NEXT)
108 84 Q .846(The current log position is adv)133 96 R .846
(anced to the ne)-.25 F .847
(xt record in the log and that record is returned in the)-.15 F/F1 10
/Times-Italic@0 SF(data)133 108 Q F0(ar)2.5 E 2.5(gument. The)-.18 F F1
(lsn)2.5 E F0(ar)2.5 E(gument is o)-.18 E -.15(ve)-.15 G
(rwritten with the DB_LSN of the record returned.).15 E 3.749
(If the pointer has not been initialized via DB_FIRST)133 124.8 R 6.248
(,D)-.74 G(B_LAST)-6.248 E 6.248(,D)-.74 G(B_SET)-6.248 E 6.248(,D)-.74
G(B_NEXT)-6.248 E 6.248(,o)-.74 G(r)-6.248 E(DB_PREV)133 136.8 Q(,)-1.29
E F1(lo)4.015 E(g_g)-.1 E(et)-.1 E F0 1.516
(will return the \214rst record in the log.)4.015 F 1.516
(If the last log record has already been)6.516 F
(returned or the log is empty)133 148.8 Q 2.5(,t)-.65 G(he)-2.5 E F1(lo)
2.5 E(g_g)-.1 E(et)-.1 E F0(function will return DB_NO)2.5 E(TFOUND.)-.4
E .759(If the log w)133 165.6 R .758
(as opened with the DB_THREAD \215ag set, calls to)-.1 F F1(lo)3.258 E
(g_g)-.1 E(et)-.1 E F0 .758(with the DB_NEXT \215ag set)3.258 F
(will return EINV)133 177.6 Q(AL.)-1.35 E(DB_PREV)108 194.4 Q .502
(The current log position is mo)133 206.4 R -.15(ve)-.15 G 3.002(dt).15
G 3.002(ot)-3.002 G .503(he pre)-3.002 F .503
(vious record in the log and that record is returned in the)-.25 F F1
(data)133 218.4 Q F0(ar)2.5 E 2.5(gument. The)-.18 F F1(lsn)2.5 E F0(ar)
2.5 E(gument is o)-.18 E -.15(ve)-.15 G
(rwritten with the DB_LSN of the record returned.).15 E 3.749
(If the pointer has not been initialized via DB_FIRST)133 235.2 R 6.248
(,D)-.74 G(B_LAST)-6.248 E 6.248(,D)-.74 G(B_SET)-6.248 E 6.248(,D)-.74
G(B_NEXT)-6.248 E 6.248(,o)-.74 G(r)-6.248 E(DB_PREV)133 247.2 Q(,)-1.29
E F1(lo)4.015 E(g_g)-.1 E(et)-.1 E F0 1.516
(will return the last record in the log.)4.015 F 1.516
(If the \214rst log record has already been)6.516 F
(returned or the log is empty)133 259.2 Q 2.5(,t)-.65 G(he)-2.5 E F1(lo)
2.5 E(g_g)-.1 E(et)-.1 E F0(function will return DB_NO)2.5 E(TFOUND.)-.4
E .823(If the log w)133 276 R .823
(as opened with the DB_THREAD \215ag set, calls to)-.1 F F1(lo)3.323 E
(g_g)-.1 E(et)-.1 E F0 .823(with the DB_PREV \215ag set)3.323 F
(will return EINV)133 288 Q(AL.)-1.35 E(DB_CURRENT)108 304.8 Q
(Return the log record currently referenced by the log.)133 316.8 Q
2.284(If the log pointer has not been initialized via DB_FIRST)133 333.6
R 4.785(,D)-.74 G(B_LAST)-4.785 E 4.785(,D)-.74 G(B_SET)-4.785 E 4.785
(,D)-.74 G(B_NEXT)-4.785 E 4.785(,o)-.74 G(r)-4.785 E(DB_PREV)133 345.6
Q 2.5(,o)-1.29 G 2.5(ri)-2.5 G 2.5(ft)-2.5 G(he log w)-2.5 E
(as opened with the DB_THREAD \215ag set,)-.1 E F1(lo)2.5 E(g_g)-.1 E
(et)-.1 E F0(will return EINV)2.5 E(AL.)-1.35 E(DB_SET)108 362.4 Q
(Retrie)133 374.4 Q .697 -.15(ve t)-.25 H .397
(he record speci\214ed by the).15 F F1(lsn)2.896 E F0(ar)2.896 E 2.896
(gument. If)-.18 F .396(the speci\214ed DB_LSN is in)2.896 F -.25(va)-.4
G .396(lid \(e.g., does not).25 F(appear in the log\))133 386.4 Q F1(lo)
2.5 E(g_g)-.1 E(et)-.1 E F0(will return EINV)2.5 E(AL.)-1.35 E
(Otherwise, the)108 403.2 Q F1(lo)2.5 E(g_g)-.1 E(et)-.1 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(lo)92 420 Q(g_compar)-.1 E(e)-.37 E
F0(The)108 432 Q F1(lo)2.859 E(g_compar)-.1 E(e)-.37 E F0 .359
(function allo)2.859 F .359(ws the caller to compare tw)-.25 F 2.859(oD)
-.1 G(B_LSN')-2.859 E(s.)-.55 E F1(Lo)5.359 E(g_compar)-.1 E(e)-.37 E F0
.36(returns 0 if the tw)2.86 F(o)-.1 E(DB_LSN')108 444 Q 2.5(sa)-.55 G
(re equal, 1 if)-2.5 E F1(lsn0)2.5 E F0(is greater than)2.5 E F1(lsn1)
2.5 E F0 2.5(,a)C(nd -1 if)-2.5 E F1(lsn0)2.5 E F0(is less than)2.5 E F1
(lsn1)2.5 E F0(.)A F1(lo)92 460.8 Q(g_\214le)-.1 E F0(The)108 472.8 Q F1
(lo)2.779 E(g_\214le)-.1 E F0 .279(function maps DB_LSN')2.779 F 2.779
(st)-.55 G 2.779<6f8c>-2.779 G .279(le names.)-2.779 F(The)5.279 E F1
(lo)2.779 E(g_\214le)-.1 E F0 .279
(function copies the name of the \214le con-)2.779 F 2.588
(taining the record named by)108 484.8 R F1(lsn)5.088 E F0 2.588
(into the memory location referenced by)5.088 F F1(namep)5.088 E F0
7.588(.\().19 G 2.588(This mapping of)-7.588 F 2.276
(DB_LSN to \214le is needed for database administration.)108 496.8 R
-.15(Fo)7.275 G 4.775(re).15 G 2.275
(xample, a transaction manager typically)-4.925 F 1.21(records the earliest DB_LSN needed for restart, and the database administrator may w)
108 508.8 R 1.21(ant to archi)-.1 F 1.51 -.15(ve l)-.25 H(og).15 E
(\214les to tape when the)108 520.8 Q 2.5(yc)-.15 G(ontain only DB_LSN')
-2.5 E 2.5(sb)-.55 G(efore the earliest one needed for restart.\))-2.5 E
(The)108 537.6 Q F1(len)3.342 E F0(ar)3.342 E .842
(gument is the length of the)-.18 F F1(namep)3.342 E F0 -.2(bu)3.342 G
-.25(ff).2 G .842(er in bytes.).25 F(If)5.842 E F1(namep)3.342 E F0 .842
(is too short to hold the \214le name,)3.342 F F1(lo)108 549.6 Q
(g_\214le)-.1 E F0 .337(will return ENOMEM.)2.837 F .338
(Note, as described abo)5.337 F -.15(ve)-.15 G 2.838(,l).15 G .338
(og \214le names are quite short, on the order of 10)-2.838 F
(characters.)108 561.6 Q(The)108 578.4 Q F1(lo)2.5 E(g_\214le)-.1 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(lo)92 595.2 Q(g_put)-.1 E F0(The)108
607.2 Q F1(lo)3.824 E(g_put)-.1 E F0 1.324
(function appends records to the log.)3.824 F 1.323
(The DB_LSN of the put record is returned in the)6.323 F F1(lsn)3.823 E
F0(parameter)108 619.2 Q 5(.T)-.55 G(he)-5 E F1<8d61>2.5 E(gs)-.1 E F0
(parameter may be set to one of the follo)2.5 E(wing v)-.25 E(alues:)
-.25 E(DB_CHECKPOINT)108 636 Q .118
(The log should write a checkpoint record, recording an)133 648 R 2.619
(yi)-.15 G .119(nformation necessary to mak)-2.619 F 2.619(et)-.1 G .119
(he log struc-)-2.619 F(tures reco)133 660 Q -.15(ve)-.15 G
(rable after a crash.).15 E(DB_CURLSN)108 676.8 Q(The DB_LSN of the ne)
133 688.8 Q(xt record to be put is returned in the)-.15 E F1(lsn)2.5 E
F0(parameter)2.5 E(.)-.55 E(DB_FLUSH)108 705.6 Q .186(The log is forced to disk after this record is written, guaranteeing that all records with DB_LSNs less)
133 717.6 R .268(than or equal to the one being put are on disk before this function returns \(this function is most often)
133 729.6 R(May 10, 1998)278.085 768 Q(4)201.085 E EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R
(used for a transaction commit, see)133 84 Q/F1 10/Times-Italic@0 SF
(db_txn)2.5 E F0(\(3\)\).).24 E .239(The caller is responsible for pro)
108 100.8 R .239(viding an)-.15 F 2.739(yn)-.15 G .239
(ecessary structure to)-2.739 F F1(data)2.739 E F0 5.239(.\().26 G -.15
(Fo)-5.239 G 2.739(re).15 G .238(xample, in a write-ahead log-)-2.889 F
1.183(ging protocol, the application must understand what part of)108
112.8 R F1(data)3.683 E F0 1.183
(is an operation code, what part is redo)3.683 F .71
(information, and what part is undo information.)108 124.8 R .709
(In addition, most transaction managers will store in)5.709 F F1(data)
3.209 E F0 1.481(the DB_LSN of the pre)108 136.8 R 1.481(vious log record for the same transaction, to support chaining back through the)
-.25 F(transaction')108 148.8 Q 2.5(sl)-.55 G(og records during undo.\))
-2.5 E(The)108 165.6 Q F1(lo)2.5 E(g_put)-.1 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(lo)92 194.4 Q(g_unlink)-.1 E F0(The)
108 206.4 Q F1(lo)3.429 E(g_unlink)-.1 E F0 .928(function destro)3.429 F
.928(ys the log re)-.1 F .928(gion identi\214ed by the directory)-.15 F
F1(dir)3.428 E F0 3.428(,r).73 G(emo)-3.428 E .928
(ving all \214les used to)-.15 F 1.023(implement the log re)108 218.4 R
3.523(gion. \(The)-.15 F 1.023(log \214les themselv)3.523 F 1.024
(es and the directory)-.15 F F1(dir)3.524 E F0 1.024(are not remo)3.524
F -.15(ve)-.15 G 3.524(d.\) If).15 F 1.024(there are)3.524 F .685
(processes that ha)108 230.4 R .985 -.15(ve c)-.2 H(alled).15 E F1(lo)
3.185 E(g_open)-.1 E F0 .684(without calling)3.184 F F1(lo)3.184 E
(g_close)-.1 E F0 .684(\(i.e., there are processes currently using the)
3.184 F .244(log re)108 242.4 R(gion\),)-.15 E F1(lo)2.744 E(g_unlink)
-.1 E F0 .244(will f)2.744 F .245(ail without further action, unless the force \215ag is set, in which case)
-.1 F F1(lo)2.745 E(g_unlink)-.1 E F0(will attempt to remo)108 254.4 Q
.3 -.15(ve t)-.15 H(he log re).15 E(gion \214les re)-.15 E -.05(ga)-.15
G(rdless of an).05 E 2.5(yp)-.15 G(rocesses still using the log re)-2.5
E(gion.)-.15 E .766(The result of attempting to forcibly destro)108
271.2 R 3.266(yt)-.1 G .766(he re)-3.266 F .766
(gion when a process has the re)-.15 F .765(gion open is unspeci\214ed.)
-.15 F 1.232(Processes using a shared memory re)108 283.2 R 1.232
(gion maintain an open \214le descriptor for it.)-.15 F 1.232
(On UNIX systems, the)6.232 F(re)108 295.2 Q .474(gion remo)-.15 F -.25
(va)-.15 G 2.974(ls).25 G .473(hould succeed and processes that ha)
-2.974 F .773 -.15(ve a)-.2 H .473(lready joined the re).15 F .473
(gion should continue to run in)-.15 F .247(the re)108 307.2 R .247
(gion without change, ho)-.15 F(we)-.25 E -.15(ve)-.25 G 2.747(rp).15 G
.248(rocesses attempting to join the log re)-2.747 F .248
(gion will either f)-.15 F .248(ail or attempt to)-.1 F .45(create a ne)
108 319.2 R 2.95(wr)-.25 G -.15(eg)-2.95 G 2.95(ion. On).15 F .45
(other systems, e.g., WNT)2.95 F 2.949(,w)-.74 G .449(here the)-2.949 F
F1(unlink)2.949 E F0 .449(\(2\) system call will f).67 F .449(ail if an)
-.1 F 2.949(yp)-.15 G(rocess)-2.949 E
(has an open \214le descriptor for the \214le, the re)108 331.2 Q
(gion remo)-.15 E -.25(va)-.15 G 2.5(lw).25 G(ill f)-2.5 E(ail.)-.1 E
.929(In the case of catastrophic or system f)108 348 R .929
(ailure, database reco)-.1 F -.15(ve)-.15 G .93
(ry must be performed \(see).15 F F1(db_r)3.43 E(eco)-.37 E(ver)-.1 E F0
.93(\(1\) or).73 F .74(the DB_RECO)108 360 R .74(VER and DB_RECO)-.5 F
(VER_F)-.5 E -1.21 -1.11(AT A)-.74 H 3.24<4c8d>1.11 G .74(ags to)-3.24 F
F1(db_appinit)3.24 E F0 3.24(\(3\)\). Alternati).68 F -.15(ve)-.25 G(ly)
.15 E 3.24(,i)-.65 G 3.24(fr)-3.24 G(eco)-3.24 E -.15(ve)-.15 G .74
(ry is not).15 F .792
(required because no database state is maintained across f)108 372 R
.793(ailures, it is possible to clean up a log re)-.1 F .793(gion by)
-.15 F(remo)108 384 Q .093
(ving all of the \214les in the directory speci\214ed to the)-.15 F F1
(lo)2.593 E(g_open)-.1 E F0 .092(function, as log re)2.593 F .092
(gion \214les are ne)-.15 F -.15(ve)-.25 G 2.592(rc).15 G(re-)-2.592 E
.358(ated in an)108 396 R 2.858(yd)-.15 G .358
(irectory other than the one speci\214ed to)-2.858 F F1(lo)2.858 E
(g_open)-.1 E F0 5.358(.N).24 G .358(ote, ho)-5.358 F(we)-.25 E -.15(ve)
-.25 G 1.159 -.4(r, t).15 H .359(hat this has the potential to).4 F
(remo)108 408 Q .3 -.15(ve \214)-.15 H
(les created by the other DB subsystems in this database en).15 E
(vironment.)-.4 E(The)108 424.8 Q F1(lo)2.5 E(g_unlink)-.1 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(lo)92 441.6 Q(g_ar)-.1 E -.15(ch)
-.37 G(ive).15 E F0(The)108 453.6 Q F1(lo)4.256 E(g_ar)-.1 E -.15(ch)
-.37 G(ive).15 E F0 1.756(function creates a NULL-terminated array of log or database \214le names and copies a)
4.256 F(pointer to them into the user)108 465.6 Q
(-speci\214ed memory location)-.2 E F1(list)2.5 E F0(.).68 E .972
(By def)108 482.4 R(ault,)-.1 E F1(lo)3.472 E(g_ar)-.1 E -.15(ch)-.37 G
(ive).15 E F0 .973(returns the names of all of the log \214les that are no longer in use \(e.g., no longer)
3.472 F(in)108 494.4 Q -.2(vo)-.4 G(lv).2 E .321(ed in acti)-.15 F .621
-.15(ve t)-.25 H .321(ransactions\), and that may be archi).15 F -.15
(ve)-.25 G 2.821(df).15 G .321(or catastrophic reco)-2.821 F -.15(ve)
-.15 G .32(ry and then remo).15 F -.15(ve)-.15 G 2.82(df).15 G(rom)-2.82
E(the system.)108 506.4 Q(If there were no \214le names to return,)5 E
F1(list)2.5 E F0(will be set to NULL.)2.5 E .691
(Arrays of log \214le names are created in allocated memory)108 523.2 R
5.692(.I)-.65 G(f)-5.692 E F1(db_malloc)3.192 E F0 .692
(is non-NULL, it is called to allo-)3.192 F .068(cate the memory)108
535.2 R 2.568(,o)-.65 G .068(therwise, the library function)-2.568 F F1
(malloc)2.567 E F0 .067(\(3\) is used.).31 F .067(The function)5.067 F
F1(db_malloc)2.567 E F0 .067(must match the)2.567 F .876(calling con)108
547.2 R -.15(ve)-.4 G .877(ntions of the).15 F F1(malloc)3.377 E F0 .877
(\(3\) library routine.).31 F(Re)5.877 E -.05(ga)-.15 G .877
(rdless, the caller is responsible for deallocating).05 F 1.606
(the returned memory)108 559.2 R 6.606(.T)-.65 G 4.106(od)-7.406 G 1.605
(eallocate the returned memory)-4.106 F 4.105(,f)-.65 G 1.605
(ree each returned memory pointer; pointers)-4.105 F
(inside the memory do not need to be indi)108 571.2 Q(vidually freed.)
-.25 E(The)108 588 Q F1<8d61>2.5 E(gs)-.1 E F0(ar)2.5 E
(gument is speci\214ed by)-.18 E/F2 10/Times-Bold@0 SF(or)2.5 E F0
('ing together one or more of the follo)A(wing v)-.25 E(alues:)-.25 E
(DB_ARCH_ABS)108 604.8 Q .224
(All pathnames are returned as absolute pathnames, instead of relati)133
616.8 R .524 -.15(ve t)-.25 H 2.725(ot).15 G .225
(he database home directory)-2.725 F(.)-.65 E(DB_ARCH_D)108 633.6 Q
-1.21 -1.11(AT A)-.4 H .662
(Return the database \214les that need to be archi)133 645.6 R -.15(ve)
-.25 G 3.161(di).15 G 3.161(no)-3.161 G .661(rder to reco)-3.161 F -.15
(ve)-.15 G 3.161(rt).15 G .661(he database from catastrophic)-3.161 F
-.1(fa)133 657.6 S 2.665(ilure. If).1 F(an)2.665 E 2.665(yo)-.15 G 2.665
(ft)-2.665 G .165(he database \214les ha)-2.665 F .465 -.15(ve n)-.2 H
.165(ot been accessed during the lifetime of the current log \214les,)
.15 F F1(lo)133 669.6 Q(g_ar)-.1 E -.15(ch)-.37 G(ive).15 E F0 .703
(will not include them in this list.)3.203 F .702
(It is also possible that some of the \214les referenced in)5.702 F
(the log ha)133 681.6 Q .3 -.15(ve s)-.2 H
(ince been deleted from the system.).15 E(DB_ARCH_LOG)108 698.4 Q
(Return all the log \214le names re)133 710.4 Q -.05(ga)-.15 G
(rdless of whether or not the).05 E 2.5(ya)-.15 G(re in use.)-2.5 E
(The DB_ARCH_D)108 727.2 Q -1.21 -1.11(AT A)-.4 H
(and DB_ARCH_LOG \215ags are mutually e)3.61 E(xclusi)-.15 E -.15(ve)
-.25 G(.).15 E(May 10, 1998)278.085 768 Q(5)201.085 E EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R(The)108 84
Q/F1 10/Times-Italic@0 SF(lo)2.5 E(g_ar)-.1 E -.15(ch)-.37 G(ive).15 E
F0(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)
2.5 E(ailure and 0 on success.)-.1 E(The)108 100.8 Q F1(lo)2.911 E(g_ar)
-.1 E -.15(ch)-.37 G(ive).15 E F0 .411
(function is the underlying function used by the)2.911 F F1(db_ar)2.911
E -.15(ch)-.37 G(ive).15 E F0 .412(\(1\) utility).18 F 5.412(.S)-.65 G
.412(ee the source code)-5.412 F 3.417(for the)108 112.8 R F1(db_ar)
5.917 E -.15(ch)-.37 G(ive).15 E F0 3.417(utility for an e)5.917 F 3.417
(xample of using)-.15 F F1(lo)5.917 E(g_ar)-.1 E -.15(ch)-.37 G(ive).15
E F0 3.416(in a UNIX en)5.917 F 5.916(vironment. See)-.4 F(the)5.916 E
F1(db_ar)108 124.8 Q -.15(ch)-.37 G(ive).15 E F0
(\(1\) manual page for more information on database archi).18 E -.25(va)
-.25 G 2.5(lp).25 G(rocedures.)-2.5 E F1(lo)92 141.6 Q(g_r)-.1 E -.4(eg)
-.37 G(ister).4 E F0(The)108 153.6 Q F1(lo)2.796 E(g_r)-.1 E -.4(eg)-.37
G(ister).4 E F0 .296(function re)2.796 F .296(gisters a \214le name with the log manager and copies a \214le identi\214cation number)
-.15 F .915(into the memory location referenced by)108 165.6 R F1
(\214dp)3.415 E F0 5.914(.T).19 G .914
(his \214le identi\214cation number should be used in all subse-)-5.914
F .152(quent log messages that refer to operations on this \214le.)108
177.6 R .152(The log manager records all \214le name to \214le identi-)
5.152 F 1.235
(\214cation number mappings at each checkpoint so that a reco)108 189.6
R -.15(ve)-.15 G 1.234(ry process can identify the \214le to which a).15
F(record in the log refers.)108 201.6 Q(The)108 218.4 Q F1(lo)3.025 E
(g_r)-.1 E -.4(eg)-.37 G(ister).4 E F0 .526
(function is called when an access method re)3.025 F .526
(gisters the open of a \214le.)-.15 F(The)5.526 E F1(dbp)3.026 E F0
(parameter)3.026 E(should be a pointer to the DB structure which is being returned by the access method.)
108 230.4 Q(The)108 247.2 Q F1(type)2.5 E F0
(parameter should be one of the DB types speci\214ed in)2.5 E F1
(db_open)2.5 E F0(\(3\), e.g., DB_HASH.).24 E(The)108 264 Q F1(lo)2.5 E
(g_r)-.1 E -.4(eg)-.37 G(ister).4 E F0(function returns the v)2.5 E
(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5 E(ailure and 0 on success.)
-.1 E F1(lo)92 280.8 Q(g_unr)-.1 E -.4(eg)-.37 G(ister).4 E F0(The)108
292.8 Q F1(lo)3.66 E(g_unr)-.1 E -.4(eg)-.37 G(ister).4 E F0 1.159(function disassociates the \214le name to \214le identi\214cation number mapping for the \214le)
3.66 F(identi\214cation number speci\214ed by the)108 304.8 Q F1<8c64>
2.5 E F0(parameter)2.5 E 5(.T)-.55 G
(he \214le identi\214cation number may then be reused.)-5 E(The)108
321.6 Q F1(lo)2.5 E(g_unr)-.1 E -.4(eg)-.37 G(ister).4 E F0
(function returns the v)2.5 E(alue of)-.25 E F1(errno)2.5 E F0(on f)2.5
E(ailure and 0 on success.)-.1 E F1(lo)92 338.4 Q(g_stat)-.1 E F0(The)
108 350.4 Q F1(lo)2.716 E(g_stat)-.1 E F0 .217(function creates a statistical structure and copies a pointer to it into the user)
2.716 F .217(-speci\214ed memory)-.2 F(location.)108 362.4 Q .292
(Statistical structure are created in allocated memory)108 379.2 R 5.292
(.I)-.65 G(f)-5.292 E F1(db_malloc)2.792 E F0 .292
(is non-NULL, it is called to allocate the)2.792 F(memory)108 391.2 Q
2.829(,o)-.65 G .329(therwise, the library function)-2.829 F F1(malloc)
2.829 E F0 .329(\(3\) is used.).31 F .329(The function)5.329 F F1
(db_malloc)2.829 E F0 .33(must match the calling)2.83 F(con)108 403.2 Q
-.15(ve)-.4 G 2.031(ntions of the).15 F F1(malloc)4.531 E F0 2.031
(\(3\) library routine.).31 F(Re)7.031 E -.05(ga)-.15 G 2.031
(rdless, the caller is responsible for deallocating the).05 F .707
(returned memory)108 415.2 R 5.707(.T)-.65 G 3.207(od)-6.507 G .708
(eallocate the returned memory)-3.207 F 3.208(,f)-.65 G .708
(ree each returned memory pointer; pointers inside)-3.208 F
(the memory do not need to be indi)108 427.2 Q(vidually freed.)-.25 E
.677(The log re)108 444 R .677
(gion statistics are stored in a structure of type DB_LOG_ST)-.15 F
2.897 -1.11(AT \()-.93 H -1.95(typedef ')1.11 F 3.177(di)-.5 G 3.177(n<)
-3.177 G(db)-3.177 E 3.176(.h>\). The)-.4 F(fol-)3.176 E(lo)108 456 Q
(wing DB_LOG_ST)-.25 E 2.22 -1.11(AT \214)-.93 H
(elds will be \214lled in:)1.11 E(u_int32_t st_magic;)108 472.8 Q
(The magic number that identi\214es a \214le as a log \214le.)133 484.8
Q(u_int32_t st_v)108 496.8 Q(ersion;)-.15 E(The v)133 508.8 Q
(ersion of the log \214le type.)-.15 E(u_int32_t st_refcnt;)108 520.8 Q
(The number of references to the re)133 532.8 Q(gion.)-.15 E
(u_int32_t st_re)108 544.8 Q(gsize;)-.15 E(The size of the re)133 556.8
Q(gion.)-.15 E(int st_mode;)108 568.8 Q(The mode of an)133 580.8 Q 2.5
(yc)-.15 G(reated log \214les.)-2.5 E(u_int32_t st_lg_max;)108 592.8 Q
(The maximum size of an)133 604.8 Q 2.5(yi)-.15 G(ndi)-2.5 E
(vidual \214le comprising the log.)-.25 E(u_int32_t st_w_mbytes;)108
616.8 Q(The number of me)133 628.8 Q -.05(ga)-.15 G
(bytes written to this log.).05 E(u_int32_t st_w_bytes;)108 640.8 Q
(The number of bytes o)133 652.8 Q -.15(ve)-.15 G 2.5(ra).15 G(nd abo)
-2.5 E -.15(ve)-.15 G F1(st_w_mbytes)2.65 E F0(written to this log.)2.5
E(u_int32_t st_wc_mbytes;)108 664.8 Q(The number of me)133 676.8 Q -.05
(ga)-.15 G(bytes written to this log since the last checkpoint.).05 E
(u_int32_t st_wc_bytes;)108 688.8 Q(The number of bytes o)133 700.8 Q
-.15(ve)-.15 G 2.5(ra).15 G(nd abo)-2.5 E -.15(ve)-.15 G F1
(st_wc_mbytes)2.65 E F0(written to this log since the last checkpoint.)
2.5 E(May 10, 1998)278.085 768 Q(6)201.085 E EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R
(u_int32_t st_cur_\214le;)108 84 Q(The current log \214le number)133 96
Q(.)-.55 E(u_int32_t st_cur_of)108 108 Q(fset;)-.25 E(The byte of)133
120 Q(fset in the current log \214le.)-.25 E(u_int32_t st_re)108 132 Q
(gion_w)-.15 E(ait;)-.1 E
(The number of times that a thread of control w)133 144 Q
(as forced to w)-.1 E(ait before obtaining the re)-.1 E(gion lock.)-.15
E(u_int32_t st_re)108 156 Q(gion_no)-.15 E -.1(wa)-.25 G(it;).1 E
(The number of times that a thread of control w)133 168 Q
(as able to obtain the re)-.1 E(gion lock without w)-.15 E(aiting.)-.1 E
/F1 9/Times-Bold@0 SF(LOG FILE LIMITS)72 184.8 Q F0 .474(Log \214le sizes impose a time limit on the length of time a database may be accessed under transaction pro-)
108 196.8 R .91
(tection, before it needs to be dumped and reloaded \(see)108 208.8 R/F2
10/Times-Italic@0 SF(db_dump\(3\))3.41 E F0(and)3.41 E F2
(db_load\(3\)\).)3.41 E F0(Unfortunately)5.91 E 3.41(,t)-.65 G(he)-3.41
E(limits are potentially dif)108 220.8 Q(\214cult to calculate.)-.25 E
.273(The log \214le name consists of "log." follo)108 237.6 R .274
(wed by 5 digits, resulting in a maximum of 99,999 log \214les.)-.25 F
(Con-)5.274 E .127(sider an application performing 600 transactions per second, for 15 hours a day)
108 249.6 R 2.626(,l)-.65 G .126(ogged into 10Mb log \214les,)-2.626 F
(where each transaction is logging approximately 100 bytes of data.)108
261.6 Q(The calculation:)5 E(\(10 * 2^20 * 99999\) /)144 278.4 Q
(\(600 * 60 * 60 * 15 * 100\) = 323.63)194 290.4 Q .795(indicates that the system will run out of log \214le space in roughly 324 days.)
108 307.2 R .795(If we increase the maximum)5.795 F .136(size of the \214les from 10Mb to 100Mb, the same calculation indicates that the application will run out of log)
108 319.2 R(\214le space in roughly 9 years.)108 331.2 Q .314
(There is no w)108 348 R .314
(ay to reset the log \214le name space in Berk)-.1 F(ele)-.1 E 2.814(yD)
-.15 G 2.814(B. If)-2.814 F .315
(your application is reaching the end of)2.814 F
(its log \214le name space, you should:)108 360 Q 15(1. Archi)108 376.8
R .711 -.15(ve y)-.25 H .411
(our databases as if to prepare for catastrophic f).15 F .411
(ailure \(see)-.1 F F2(db_ar)2.91 E -.15(ch)-.37 G(ive).15 E F0 .41
(\(1\) for more informa-).18 F(tion\).)133 388.8 Q 15(2. Dump)108 405.6
R(and re-load)2.5 E/F3 10/Times-Bold@0 SF(all)2.5 E F0
(your databases \(see)2.5 E F2(db_dump)2.5 E F0(\(1\) and).19 E F2
(db_load)2.5 E F0(\(1\) for more information\).).77 E 15(3. Remo)108
422.4 R .3 -.15(ve a)-.15 H(ll of the log \214les from the database en)
.15 E(vironment \(see)-.4 E F2(db_ar)2.5 E -.15(ch)-.37 G(ive).15 E F0
(\(1\) for more information\).).18 E 15(4. Restart)108 439.2 R
(your applications.)2.5 E F1(ENVIR)72 456 Q(ONMENT V)-.27 E(ARIABLES)
-1.215 E F0(The follo)108 468 Q(wing en)-.25 E(vironment v)-.4 E
(ariables af)-.25 E(fect the e)-.25 E -.15(xe)-.15 G(cution of).15 E F2
(db_lo)2.5 E(g)-.1 E F0(:).22 E(DB_HOME)108 484.8 Q 2.848(If the)133
496.8 R F2(dben)5.348 E(v)-.4 E F0(ar)5.348 E 2.848(gument to)-.18 F F2
(lo)5.348 E(g_open)-.1 E F0 -.1(wa)5.348 G 5.348(si).1 G 2.848
(nitialized using)-5.348 F F2(db_appinit)5.349 E F0 5.349(,t).68 G 2.849
(he en)-5.349 F 2.849(vironment v)-.4 F(ariable)-.25 E .508(DB_HOME may be used as the path of the database home for the interpretation of the)
133 508.8 R F2(dir)3.008 E F0(ar)3.008 E(gument)-.18 E(to)133 520.8 Q F2
(lo)3.657 E(g_open)-.1 E F0 3.657(,a).24 G 3.657(sd)-3.657 G 1.157
(escribed in)-3.657 F F2(db_appinit)3.657 E F0 3.657
(\(3\). Speci\214cally).68 F(,)-.65 E F2(lo)3.658 E(g_open)-.1 E F0
1.158(is af)3.658 F 1.158(fected by the con\214guration)-.25 F(string v)
133 532.8 Q(alue of DB_LOG_DIR.)-.25 E(TMPDIR)108 549.6 Q .955(If the)
133 561.6 R F2(dben)3.455 E(v)-.4 E F0(ar)3.455 E .955(gument to)-.18 F
F2(lo)3.455 E(g_open)-.1 E F0 -.1(wa)3.455 G 3.455(sN).1 G .955
(ULL or not initialized using)-3.455 F F2(db_appinit)3.455 E F0 3.455
(,t).68 G .955(he en)-3.455 F(vironment)-.4 E -.25(va)133 573.6 S 2.065
(riable TMPDIR may be used as the directory in which to create the log, as described in the)
.25 F F2(lo)133 585.6 Q(g_open)-.1 E F0(section abo)2.5 E -.15(ve)-.15 G
(.).15 E F1(ERR)72 602.4 Q(ORS)-.27 E F0(The)108 614.4 Q F2(lo)3.267 E
(g_open)-.1 E F0 .766(function may f)3.267 F .766(ail and return)-.1 F
F2(errno)3.266 E F0 .766(for an)3.266 F 3.266(yo)-.15 G 3.266(ft)-3.266
G .766(he errors speci\214ed for the follo)-3.266 F .766(wing DB and)
-.25 F(library functions: atoi\(3\), close\(2\), db_v)108 626.4 Q
(ersion\(3\), fcntl\(2\), f)-.15 E
(\215ush\(3\), log_close\(3\), log_unlink\(3\), lseek\(2\),)-.25 E
(malloc\(3\), memcp)108 638.4 Q(y\(3\), memset\(3\), mmap\(2\), munmap\(2\), open\(2\), opendir\(3\), read\(2\), readdir\(3\), real-)
-.1 E(loc\(3\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strchr\(3\), strcp)
108 650.4 Q
(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), strncmp\(3\),)-.1 E
(unlink\(2\), and write\(2\).)108 662.4 Q(In addition, the)108 679.2 Q
F2(lo)2.5 E(g_open)-.1 E F0(function may f)2.5 E(ail and return)-.1 E F2
(errno)2.5 E F0(for the follo)2.5 E(wing conditions:)-.25 E([EA)108 696
Q(GAIN])-.4 E(The shared memory re)133 708 Q(gion w)-.15 E(as lock)-.1 E
(ed and \(repeatedly\) una)-.1 E -.25(va)-.2 G(ilable.).25 E
(May 10, 1998)278.085 768 Q(7)201.085 E EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R([EINV)108
84 Q(AL])-1.35 E(An in)133 96 Q -.25(va)-.4 G(lid \215ag v).25 E
(alue or parameter w)-.25 E(as speci\214ed.)-.1 E
(The DB_THREAD \215ag w)133 120 Q(as speci\214ed and spinlocks are not implemented for this architecture.)
-.1 E(The speci\214ed \214le size w)133 144 Q(as too lar)-.1 E(ge.)-.18
E(The)108 160.8 Q/F1 10/Times-Italic@0 SF(lo)3.205 E(g_close)-.1 E F0
.705(function may f)3.205 F .705(ail and return)-.1 F F1(errno)3.205 E
F0 .704(for an)3.205 F 3.204(yo)-.15 G 3.204(ft)-3.204 G .704
(he errors speci\214ed for the follo)-3.204 F .704(wing DB and)-.25 F
(library functions: close\(2\), fcntl\(2\), f)108 172.8 Q
(\215ush\(3\), munmap\(2\), and strerror\(3\).)-.25 E(The)108 189.6 Q F1
(lo)3.296 E(g_\215ush)-.1 E F0 .796(function may f)3.296 F .796
(ail and return)-.1 F F1(errno)3.297 E F0 .797(for an)3.297 F 3.297(yo)
-.15 G 3.297(ft)-3.297 G .797(he errors speci\214ed for the follo)-3.297
F .797(wing DB and)-.25 F(library functions: close\(2\), fcntl\(2\), f)
108 201.6 Q(\215ush\(3\), fsync\(2\), lseek\(2\), malloc\(3\), memcp)
-.25 E(y\(3\), memset\(3\),)-.1 E
(open\(2\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)108
213.6 Q
(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), unlink\(2\), and)-.1 E
(write\(2\).)108 225.6 Q(In addition, the)108 242.4 Q F1(lo)2.5 E
(g_\215ush)-.1 E F0(function may f)2.5 E(ail and return)-.1 E F1(errno)
2.5 E F0(for the follo)2.5 E(wing conditions:)-.25 E([EINV)108 259.2 Q
(AL])-1.35 E(An in)133 271.2 Q -.25(va)-.4 G(lid \215ag v).25 E
(alue or parameter w)-.25 E(as speci\214ed.)-.1 E(The)108 288 Q F1(lo)
3.673 E(g_g)-.1 E(et)-.1 E F0 1.173(function may f)3.673 F 1.173
(ail and return)-.1 F F1(errno)3.673 E F0 1.173(for an)3.673 F 3.673(yo)
-.15 G 3.673(ft)-3.673 G 1.173(he errors speci\214ed for the follo)
-3.673 F 1.172(wing DB and)-.25 F
(library functions: atoi\(3\), close\(2\), fcntl\(2\), f)108 300 Q
(\215ush\(3\), lseek\(2\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\), open\(2\),)-.1 E(opendir\(3\), read\(2\), readdir\(3\), realloc\(3\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strchr\(3\), strcp)
108 312 Q(y\(3\),)-.1 E(strdup\(3\), strerror\(3\), strlen\(3\), strncmp\(3\), and unlink\(2\).)
108 324 Q(In addition, the)108 340.8 Q F1(lo)2.5 E(g_g)-.1 E(et)-.1 E F0
(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5 E F0
(for the follo)2.5 E(wing conditions:)-.25 E([EINV)108 357.6 Q(AL])-1.35
E(An in)133 369.6 Q -.25(va)-.4 G(lid \215ag v).25 E
(alue or parameter w)-.25 E(as speci\214ed.)-.1 E(The DB_FIRST \215ag w)
133 393.6 Q(as speci\214ed and no log \214les were found.)-.1 E(The)108
410.4 Q F1(lo)3.667 E(g_\214le)-.1 E F0 1.167(function may f)3.667 F
1.167(ail and return)-.1 F F1(errno)3.667 E F0 1.167(for an)3.667 F
3.667(yo)-.15 G 3.667(ft)-3.667 G 1.167
(he errors speci\214ed for the follo)-3.667 F 1.168(wing DB and)-.25 F
(library functions: close\(2\), fcntl\(2\), f)108 422.4 Q
(\215ush\(3\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\), open\(2\), sig\214llset\(3\), sig-)-.1 E
(procmask\(2\), stat\(2\), strcp)108 434.4 Q
(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), and unlink\(2\).)-.1 E
(In addition, the)108 451.2 Q F1(lo)2.5 E(g_\214le)-.1 E F0
(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5 E F0
(for the follo)2.5 E(wing conditions:)-.25 E([ENOMEM])108 468 Q
(The supplied b)133 480 Q(uf)-.2 E(fer w)-.25 E
(as too small to hold the log \214le name.)-.1 E(The)108 496.8 Q F1(lo)
3.636 E(g_put)-.1 E F0 1.136(function may f)3.636 F 1.136
(ail and return)-.1 F F1(errno)3.636 E F0 1.136(for an)3.636 F 3.636(yo)
-.15 G 3.636(ft)-3.636 G 1.136(he errors speci\214ed for the follo)
-3.636 F 1.137(wing DB and)-.25 F
(library functions: close\(2\), fcntl\(2\), f)108 508.8 Q
(\215ush\(3\), fsync\(2\), lseek\(2\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\),)-.1 E
(open\(2\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)108
520.8 Q(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), time\(3\), unlink\(2\),)
-.1 E(and write\(2\).)108 532.8 Q(In addition, the)108 549.6 Q F1(lo)2.5
E(g_put)-.1 E F0(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5
E F0(for the follo)2.5 E(wing conditions:)-.25 E([EINV)108 566.4 Q(AL])
-1.35 E(An in)133 578.4 Q -.25(va)-.4 G(lid \215ag v).25 E
(alue or parameter w)-.25 E(as speci\214ed.)-.1 E
(The record to be logged is lar)133 602.4 Q
(ger than the maximum log record.)-.18 E(The)108 619.2 Q F1(lo)2.958 E
(g_unlink)-.1 E F0 .458(function may f)2.958 F .457(ail and return)-.1 F
F1(errno)2.957 E F0 .457(for an)2.957 F 2.957(yo)-.15 G 2.957(ft)-2.957
G .457(he errors speci\214ed for the follo)-2.957 F .457(wing DB and)
-.25 F(library functions: close\(2\), fcntl\(2\), f)108 631.2 Q
(\215ush\(3\), malloc\(3\), memcp)-.25 E
(y\(3\), memset\(3\), mmap\(2\), munmap\(2\),)-.1 E
(open\(2\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)108
643.2 Q
(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), and unlink\(2\).)-.1 E
(In addition, the)108 660 Q F1(lo)2.5 E(g_unlink)-.1 E F0
(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5 E F0
(for the follo)2.5 E(wing conditions:)-.25 E([EB)108 676.8 Q(USY])-.1 E
(The shared memory re)133 688.8 Q(gion w)-.15 E
(as in use and the force \215ag w)-.1 E(as not set.)-.1 E(The)108 705.6
Q F1(lo)2.709 E(g_ar)-.1 E -.15(ch)-.37 G(ive).15 E F0 .209
(function may f)2.709 F .209(ail and return)-.1 F F1(errno)2.709 E F0
.209(for an)2.709 F 2.709(yo)-.15 G 2.709(ft)-2.709 G .209
(he errors speci\214ed for the follo)-2.709 F .208(wing DB and)-.25 F
(library functions: close\(2\), fcntl\(2\), f)108 717.6 Q(\215ush\(3\), getcwd\(3\), log_compare\(3\), log_get\(3\), malloc\(3\), mem-)
-.25 E(cp)108 729.6 Q(y\(3\), memset\(3\), open\(2\), qsort\(3\), realloc\(3\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strchr\(3\), strcmp\(3\),)
-.1 E(May 10, 1998)278.085 768 Q(8)201.085 E EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 363.3(DB_LOG\(3\) DB_LOG\(3\))72 48 R(strcp)108
84 Q(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), and unlink\(2\).)
-.1 E(In addition, the)108 100.8 Q/F1 10/Times-Italic@0 SF(lo)2.5 E
(g_ar)-.1 E -.15(ch)-.37 G(ive).15 E F0(function may f)2.5 E
(ail and return)-.1 E F1(errno)2.5 E F0(for the follo)2.5 E
(wing conditions:)-.25 E([EINV)108 117.6 Q(AL])-1.35 E(An in)133 129.6 Q
-.25(va)-.4 G(lid \215ag v).25 E(alue or parameter w)-.25 E
(as speci\214ed.)-.1 E(The log w)133 153.6 Q(as corrupted.)-.1 E(The)108
170.4 Q F1(lo)2.66 E(g_r)-.1 E -.4(eg)-.37 G(ister).4 E F0 .16
(function may f)2.66 F .16(ail and return)-.1 F F1(errno)2.66 E F0 .161
(for an)2.66 F 2.661(yo)-.15 G 2.661(ft)-2.661 G .161
(he errors speci\214ed for the follo)-2.661 F .161(wing DB and)-.25 F
(library functions: close\(2\), fcntl\(2\), f)108 182.4 Q
(\215ush\(3\), fsync\(2\), lseek\(2\), malloc\(3\), memcmp\(3\), memcp)
-.25 E(y\(3\), mem-)-.1 E(set\(3\), open\(2\), realloc\(3\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)
108 194.4 Q(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\),)-.1 E
(time\(3\), unlink\(2\), and write\(2\).)108 206.4 Q(In addition, the)
108 223.2 Q F1(lo)2.5 E(g_r)-.1 E -.4(eg)-.37 G(ister).4 E F0
(function may f)2.5 E(ail and return)-.1 E F1(errno)2.5 E F0
(for the follo)2.5 E(wing conditions:)-.25 E([EINV)108 240 Q(AL])-1.35 E
(An in)133 252 Q -.25(va)-.4 G(lid \215ag v).25 E(alue or parameter w)
-.25 E(as speci\214ed.)-.1 E(The)108 268.8 Q F1(lo)3.079 E(g_unr)-.1 E
-.4(eg)-.37 G(ister).4 E F0 .579(function may f)3.079 F .578
(ail and return)-.1 F F1(errno)3.078 E F0 .578(for an)3.078 F 3.078(yo)
-.15 G 3.078(ft)-3.078 G .578(he errors speci\214ed for the follo)-3.078
F .578(wing DB)-.25 F(and library functions: close\(2\), fcntl\(2\), f)
108 280.8 Q(\215ush\(3\), fsync\(2\), lseek\(2\), malloc\(3\), memcp)
-.25 E(y\(3\), memset\(3\),)-.1 E
(open\(2\), sig\214llset\(3\), sigprocmask\(2\), stat\(2\), strcp)108
292.8 Q(y\(3\), strdup\(3\), strerror\(3\), strlen\(3\), time\(3\), unlink\(2\),)
-.1 E(and write\(2\).)108 304.8 Q(In addition, the)108 321.6 Q F1(lo)2.5
E(g_unr)-.1 E -.4(eg)-.37 G(ister).4 E F0(function may f)2.5 E
(ail and return)-.1 E F1(errno)2.5 E F0(for the follo)2.5 E
(wing conditions:)-.25 E([EINV)108 338.4 Q(AL])-1.35 E(An in)133 350.4 Q
-.25(va)-.4 G(lid \215ag v).25 E(alue or parameter w)-.25 E
(as speci\214ed.)-.1 E(The)108 367.2 Q F1(lo)3.543 E(g_stat)-.1 E F0
1.043(function may f)3.543 F 1.043(ail and return)-.1 F F1(errno)3.543 E
F0 1.043(for an)3.543 F 3.543(yo)-.15 G 3.543(ft)-3.543 G 1.044
(he errors speci\214ed for the follo)-3.543 F 1.044(wing DB and)-.25 F
(library functions: fcntl\(2\), and malloc\(3\).)108 379.2 Q/F2 9
/Times-Bold@0 SF -.09(BU)72 396 S(GS).09 E F0 1.263
(The log \214les are not machine architecture independent.)108 408 R
(Speci\214cally)6.263 E 3.763(,l)-.65 G 1.263
(og \214le metadata is not stored in a)-3.763 F<8c78>108 420 Q
(ed byte order)-.15 E(.)-.55 E F2(SEE ALSO)72 436.8 Q F1(db_ar)108 448.8
Q -.15(ch)-.37 G(ive).15 E F0(\(1\),).18 E F1(db_c)2.5 E(hec)-.15 E
(kpoint)-.2 E F0(\(1\),).68 E F1(db_deadloc)2.5 E(k)-.2 E F0(\(1\),).67
E F1(db_dump)2.5 E F0(\(1\),).19 E F1(db_load)2.5 E F0(\(1\),).77 E F1
(db_r)2.5 E(eco)-.37 E(ver)-.1 E F0(\(1\),).73 E F1(db_stat)2.5 E F0
(\(1\),).68 E F1(db_intr)108 460.8 Q(o)-.45 E F0(\(3\),).18 E F1
(db_appinit)2.5 E F0(\(3\),).68 E F1(db_cur)2.5 E(sor)-.1 E F0(\(3\),)
.73 E F1(db_dbm)2.5 E F0(\(3\),).32 E F1(db_internal)2.5 E F0(\(3\),).51
E F1(db_loc)2.5 E(k)-.2 E F0(\(3\),).67 E F1(db_lo)2.5 E(g)-.1 E F0
(\(3\),).22 E F1(db_mpool)2.5 E F0(\(3\),).51 E F1(db_open)108 472.8 Q
F0(\(3\),).24 E F1(db_thr)2.5 E(ead)-.37 E F0(\(3\),).77 E F1(db_txn)2.5
E F0(\(3\)).24 E(May 10, 1998)278.085 768 Q(9)201.085 E EP
%%Trailer
end
%%EOF
