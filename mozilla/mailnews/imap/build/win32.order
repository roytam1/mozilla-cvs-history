nsReadingIterator<char>::normalize_forward ; 90022
nsReadingIterator<char>::advance ; 46551
basic_nsAReadableString<char>::BeginReading ; 46309
basic_nsAReadableString<char>::CharAt ; 46071
nsIMAPGenericParser::ContinueParse ; 25002
nsImapMailFolder::AddRef ; 17224
nsImapMailFolder::Release ; 16294
nsImapMailFolder::QueryInterface ; 9040
nsIMAPGenericParser::Imapstrtok_r ; 6191
nsImapProtocol::DeathSignalReceived ; 5840
nsImapProtocol::GetPseudoInterrupted ; 5840
nsImapIncomingServer::AddRef ; 5827
nsImapIncomingServer::Release ; 5827
nsIMAPGenericParser::GetNextToken ; 5596
nsIMAPGenericParser::Connected ; 5541
nsImapMailCopyState::AddRef ; 5419
nsImapMockChannel::Release ; 5081
nsImapMockChannel::QueryInterface ; 4945
nsImapMockChannel::GetStatus ; 4660
nsImapIncomingServer::QueryInterface ; 4127
nsImapFlagAndUidState::GetUidOfMessage ; 3513
nsCOMPtr_base::assign_assuming_AddRef ; 2023
nsImapUrl::AddRef ; 1847
nsImapUrl::Release ; 1841
nsImapServerResponseParser::CurrentResponseUID ; 1718
nsImapProtocol::GetConnectionStatus ; 1573
nsIMAPGenericParser::CreateNilString ; 1519
nsImapFlagAndUidState::GetMessageFlags ; 1486
nsImapUrl::QueryInterface ; 1470
TLineDownloadCache::SpaceAvailable ; 1170
nsImapMailFolder::GetDatabase ; 1144
nsRDFResource::GetValue ; 1131
nsImapMailFolder::GetSubFolders ; 985
nsIMAPGenericParser::CreateQuoted ; 945
nsIMAPGenericParser::CreateString ; 942
nsImapProtocol::Log ; 912
nsImapMailFolder::GetPath ; 876
basic_nsAWritableString<char>::Assign ; 847
nsIMAPGenericParser::at_end_of_line ; 828
nsImapServerResponseParser::GetIMAPstate ; 778
nsImapMailFolder::NotifyMessageFlags ; 743
nsImapProtocol::SetConnectionStatus ; 712
nsImapProtocol::CreateNewLineFromSocket ; 707
nsIMAPGenericParser::AdvanceToNextLine ; 702
nsImapServerResponseParser::GetNextLineForParser ; 702
nsImapMailboxSpec::GetFolder_UIDVALIDITY ; 634
do_GetService ; 615
TLineDownloadCache::CurrentUID ; 591
nsIMAPHostSessionList::FindHost ; 586
nsImapProtocol::HandleMessageDownLoadLine ; 585
TLineDownloadCache::CacheLine ; 585
nsImapProtocol::AddRef ; 520
nsImapProtocol::Release ; 519
nsWritingIterator<char>::normalize_forward ; 476
nsImapMailFolder::WriteToFolderCacheElem ; 457
nsWritingIterator<char>::advance ; 436
nsImapServerResponseParser::end_of_line ; 434
nsIMAPGenericParser::AdvanceTokenizerStartingPoint ; 381
nsImapServerResponseParser::response_data ; 360
nsImapServerResponseParser::PostProcessEndOfLine ; 360
nsBuildImapMessageURI ; 352
nsImapMailFolder::CreateMessageFromMsgDBHdr ; 352
nsImapMiscellaneousSinkProxy::AddRef ; 333
nsImapServerResponseParser::parse_address ; 330
nsRDFResource::GetValueConst ; 319
nsImapMailFolder::GetHierarchyDelimiter ; 311
CreateUnicodeStringFromUtf7 ; 301
nsImapProtocol::GetImapServerKey ; 300
nsImapServerResponseParser::numeric_mailbox_data ; 286
nsImapServerResponseParser::IsNumericString ; 286
nsImapServerResponseParser::msg_fetch ; 274
nsImapFlagAndUidState::AddUidFlagPair ; 274
nsImapServerResponseParser::flags ; 274
nsImapProtocol::ShowProgress ; 274
nsImapServerResponseParser::GetSelectedMailboxName ; 271
nsImapMailFolder::~nsImapMailFolder ; 271
nsImapMailFolder::UpdateSummaryTotals ; 252
nsIMAPHostSessionList::Release ; 248
nsIMAPHostSessionList::QueryInterface ; 242
nsImapIncomingServer::CreatePRUnicharStringFromUTF7 ; 239
basic_nsAWritableString<char>::BeginWriting ; 238
nsImapServerResponseParser::GetDownloadingHeaders ; 233
nsImapUrl::GetImapAction ; 229
nsImapProtocol::GetDataMemberMonitor ; 224
nsImapServerResponseParser::CommandFailed ; 223
nsWritingIterator<char>::write ; 218
copy_string ; 218
basic_nsAWritableString<char>::Cut ; 218
nsImapMailFolder::Shutdown ; 205
nsImapMailFolder::nsImapMailFolder ; 205
nsImapMailFolder::ReadFromFolderCacheElem ; 205
nsMsgImapModule::Shutdown ; 205
nsCreateImapBaseMessageURI ; 205
nsImapMailFolder::CreateBaseMessageURI ; 205
basic_nsAWritableString<unsigned short>::AppendFromReadable ; 202
nsImapMailFolder::AddSubfolderWithPath ; 202
nsImapMailFolder::AddDirectorySeparator ; 202
nsImapMailFolder::SetPath ; 202
nsImapExtensionSinkProxy::Release ; 200
nsImapServerResponseParser::GetFillingInShell ; 190
nsIMAPNamespace::MailboxMatchesNamespace ; 170
nsImapProtocol::PercentProgressUpdateEvent ; 170
nsIMAPGenericParser::skip_to_CRLF ; 161
nsIMAPGenericParser::SetSyntaxError ; 158
nsImapServerResponseParser::SetSyntaxError ; 158
nsImapEvent::nsImapEvent ; 156
nsImapEvent::PostEvent ; 156
nsImapEvent::InitEvent ; 156
nsImapEvent::imap_event_destructor ; 156
nsImapEvent::imap_event_handler ; 156
nsImapEvent::~nsImapEvent ; 156
nsIMAPGenericParser::ResetLexAnalyzer ; 153
nsIMAPGenericParser::LastCommandSuccessful ; 149
nsIMAPGenericParser::SyntaxError ; 149
nsImapServerResponseParser::LastCommandSuccessful ; 149
nsImapMiscellaneousSinkProxyEvent::~nsImapMiscellaneousSinkProxyEvent ; 143
nsImapMiscellaneousSinkProxyEvent::nsImapMiscellaneousSinkProxyEvent ; 143
nsImapProtocol::ProgressEventFunctionUsingId ; 141
nsImapFlagAndUidState::GetMessageFlagsFromUID ; 138
nsImapProtocol::GetImapHostName ; 134
nsImapService::Release ; 133
nsImapProtocol::GetRunningImapURL ; 126
nsIMAPHostSessionList::GetOnlineDirForHost ; 126
TLineDownloadCache::CacheEmpty ; 115
nsImapUrl::GetMockChannel ; 114
nsImapProtocol::GetMailboxDiscoveryStatus ; 111
nsImapIncomingServer::GetIsAOLServer ; 110
nsImapMailFolder::GetServerKey ; 107
nsImapUrl::GetOnlineSubDirSeparator ; 106
nsImapMailFolder::GetImapIncomingServer ; 101
nsImapServerResponseParser::InitializeState ; 101
nsIMAPGenericParser::SetConnected ; 101
nsImapService::QueryInterface ; 101
nsImapProtocol::NotifyFEEventCompletion ; 100
nsImapProtocol::WaitForFEEventCompletion ; 100
nsImapEvent::SetNotifyCompletion ; 100
nsImapProtocol::GetImapUserName ; 98
nsImapProtocol::OnDataAvailable ; 96
nsIMAPNamespaceList::GetNamespaceForMailbox ; 95
nsImapServerResponseParser::resp_cond_state ; 92
nsImapServerResponseParser::resp_text ; 92
nsImapServerResponseParser::text ; 92
nsImapUrl::GetCopyState ; 90
nsIMAPHostSessionList::GetDeleteIsMoveToTrashForHost ; 87
nsImapMailFolder::GetDBFolderInfoAndDB ; 85
nsImapProtocol::IncrementCommandTagNumber ; 84
nsImapProtocol::GetServerCommandTag ; 84
nsImapMockChannel::GetProgressEventSink ; 81
nsImapUrl::AddOnlineDirectoryIfNecessary ; 79
nsImapServerResponseParser::ParseIMAPServerResponse ; 79
nsImapServerResponseParser::PreProcessCommandToken ; 79
nsImapProtocol::SendData ; 79
nsImapProtocol::ParseIMAPandCheckForNewMail ; 79
nsImapMoveCopyMsgTxn::AddRef ; 77
nsImapUrl::ReplaceCharsInCopiedString ; 76
nsImapProtocol::QueryInterface ; 76
nsImapUrl::AllocateServerPath ; 76
nsImapServerResponseParser::response_tagged ; 74
nsImapServerResponseParser::ProcessOkCommand ; 74
nsImapServerResponseParser::response_done ; 74
nsImapMoveCopyMsgTxn::QueryInterface ; 70
nsImapCacheStreamListener::AddRef ; 70
nsImapMoveCopyMsgTxn::Release ; 70
nsIMAPHostSessionList::GetShowDeletedMessagesForHost ; 69
nsImapUrl::CreateServerSourceFolderPathString ; 69
nsImapMailFolder::ShowDeletedMessages ; 69
nsImapUrl::GetRequiredImapState ; 69
nsImapMailFolder::GetOnlineName ; 67
nsImapIncomingServer::GetStringBundle ; 66
nsImapIncomingServer::GetImapStringByID ; 66
nsImapMailFolder::CreateSubFolders ; 64
nsImapMailboxSpec::Release ; 61
nsIMAPBodypartMessage::GetType ; 60
nsImapIncomingServer::ConnectionTimeOut ; 60
nsImapProtocol::IsBusy ; 60
TLineDownloadCache::ResetCache ; 59
nsImapMailFolder::DisplayStatusMsg ; 59
nsImapMailFolder::ProgressStatus ; 59
nsImapProtocol::PostLineDownLoadEvent ; 59
TLineDownloadCache::GetCurrentLineInfo ; 59
nsImapProtocol::NormalMessageEndDownload ; 58
nsImapServerResponseParser::BeginMessageDownload ; 58
nsImapServerResponseParser::msg_fetch_literal ; 58
nsImapProtocol::BeginMessageDownLoad ; 58
nsImapServerResponseParser::msg_fetch_content ; 58
nsIMAPHostSessionList::GetNamespaceForMailboxForHost ; 58
nsImapMailFolder::StartMessage ; 58
nsIMAPGenericParser::CreateAstring ; 57
nsImapMockChannel::GetURI ; 56
nsImapService::GetHierarchyDelimiter ; 56
nsImapMailFolder::ParseAdoptedHeaderLine ; 55
nsImapProtocol::GetFlagsForUID ; 55
nsImapServerResponseParser::envelope_data ; 55
nsImapServerResponseParser::msg_fetch_headers ; 55
nsImapMailFolder::SetupHeaderParseStream ; 55
nsImapProtocol::GetSupportedUserFlags ; 55
nsImapMailFolder::TweakHeaderFlags ; 55
nsImapMailFolder::NormalEndHeaderParseStream ; 55
nsPromiseSubstring<char>::GetReadableFragment ; 54
nsImapUrl::SetSpec ; 50
nsImapUrl::ParseImapPart ; 50
nsImapUrl::ParseUrl ; 50
nsImapMailboxSpec::~nsImapMailboxSpec ; 49
nsImapProtocol::GetDeleteIsMoveToTrash ; 49
nsImapMailboxSpec::nsImapMailboxSpec ; 49
nsImapMailboxSpec::`scalar deleting destructor' ; 49
nsImapMailCopyState::Release ; 49
nsIMAPNamespaceList::GetDefaultNamespaceOfType ; 48
nsIMAPGenericParser::CreateAtom ; 48
WeAreOffline ; 48
nsImapUrl::AllocateCanonicalPath ; 47
nsImapUrl::ConvertToCanonicalFormat ; 47
basic_nsAWritableString<char>::AppendFromReadable ; 47
nsImapMockChannel::SetURI ; 46
nsImapProtocol::CanHandleUrl ; 46
nsImapMockChannel::GetLoadAttributes ; 45
nsImapMailFolder::SetUrlState ; 44
SetUrlStateProxyEvent::HandleEvent ; 44
nsImapMiscellaneousSinkProxy::SetUrlState ; 44
SetUrlStateProxyEvent::SetUrlStateProxyEvent ; 44
basic_nsAReadableString<char>::Last ; 44
nsReadingIterator<char>::normalize_backward ; 44
SetUrlStateProxyEvent::`vector deleting destructor' ; 44
nsImapProxyBase::nsImapProxyBase ; 44
SetUrlStateProxyEvent::~SetUrlStateProxyEvent ; 44
nsImapProxyBase::~nsImapProxyBase ; 44
nsImapServerResponseParser::mailbox_data ; 43
nsImapIncomingServer::GetLocalStoreType ; 42
nsReadingIterator<unsigned short>::advance ; 40
nsImapMockChannel::GetLoadGroup ; 40
nsWritingIterator<unsigned short>::advance ; 40
nsImapMailFolder::GetVerifiedAsOnlineFolder ; 39
nsImapMailFolder::GetExplicitlyVerify ; 39
nsIMAPHostSessionList::GetHostIsUsingSubscription ; 39
nsAdapterEnumerator::`vector deleting destructor' ; 39
nsImapIncomingServer::GetUnverifiedSubFolders ; 38
nsIMAPHostSessionList::GetOnlineTrashFolderExistsForHost ; 38
nsImapMailFolder::DeleteIsMoveToTrash ; 38
nsImapMailFolder::SetExplicitlyVerify ; 38
nsImapMoveCoalescer::AddMove ; 38
nsImapMailFolder::MoveIncorporatedMessage ; 38
nsIMAPHostSessionList::GetDefaultNamespaceOfTypeForHost ; 38
nsImapMailFolder::ApplyFilterHit ; 38
nsImapProtocol::DiscoverMailboxSpec ; 37
nsImapServerResponseParser::mailbox ; 37
nsIMAPHostSessionList::SetNamespaceHierarchyDelimiterFromMailboxForHost ; 37
nsImapServerResponseParser::mailbox_list ; 37
nsImapIncomingServer::PossibleImapMailbox ; 37
nsImapMailFolder::SetVerifiedAsOnlineFolder ; 37
nsImapMailFolder::SetHierarchyDelimiter ; 37
nsImapMailFolder::SetBoxFlags ; 37
nsImapMailFolder::GetCanSubscribe ; 35
nsImapMailFolder::GetNoSelect ; 35
nsImapMailFolder::GetCanCreateSubfolders ; 35
ProgressStatusProxyEvent::`vector deleting destructor' ; 34
ProgressStatusProxyEvent::HandleEvent ; 34
nsImapMiscellaneousSinkProxy::ProgressStatus ; 34
ProgressStatusProxyEvent::ProgressStatusProxyEvent ; 34
ProgressStatusProxyEvent::~ProgressStatusProxyEvent ; 34
nsQueryReferent::nsQueryReferent ; 32
nsImapIncomingServer::GetDualUseFolders ; 32
nsImapUrl::SetOnlineSubDirSeparator ; 31
nsImapUrl::ParseFolderPath ; 31
nsImapServerResponseParser::resp_text_code ; 31
nsImapProtocol::GetLastActiveTimeStamp ; 30
nsImapIncomingServer::GetTimeOutLimits ; 30
nsImapService::GetFolderName ; 30
nsImapIncomingServer::GetMaximumConnectionsNumber ; 30
nsImapUrl::SetImapMessageSink ; 30
nsImapMailFolder::GetOnlineDelimiter ; 30
nsImapIncomingServer::CreateImapConnection ; 30
nsImapService::GetDefaultPort ; 28
nsImapMailCopyState::QueryInterface ; 28
nsImapFlagAndUidState::Release ; 28
nsImapUrl::Initialize ; 28
nsImapService::GetDefaultServerPort ; 28
nsImapMockChannel::nsImapMockChannel ; 28
nsImapMailFolder::AllocateUidStringFromKeyArray ; 28
nsImapUrl::nsImapUrl ; 28
nsMsgImapModule::Shutdown ; 28
nsImapProtocol::ResetProgressInfo ; 27
nsImapUrl::SetImapServerSink ; 25
nsImapUrl::SetImapMailFolderSink ; 25
nsImapUrl::SetImapFolder ; 25
nsImapUrl::SetImapExtensionSink ; 25
nsImapService::SetImapUrlSink ; 25
nsImapUrl::SetImapMiscellaneousSink ; 25
nsImapService::CreateStartOfImapUrl ; 23
nsImapProtocol::SetupSinkProxy ; 23
nsImapUrl::GetImapMailFolderSink ; 23
nsImapUrl::SetUri ; 23
nsImapProtocol::OnCreateServerSourceFolderPathString ; 23
nsImapMockChannel::GetChannelContext ; 22
nsImapProtocol::FetchMessage ; 22
nsImapUrl::MessageIdsAreUids ; 22
CopyNextStreamMessageProxyEvent::CopyNextStreamMessageProxyEvent ; 22
nsImapMiscellaneousSinkProxy::nsImapMiscellaneousSinkProxy ; 22
nsImapMockChannel::GetChannelListener ; 22
nsImapExtensionSinkProxy::`scalar deleting destructor' ; 22
nsImapMailFolder::CopyNextStreamMessage ; 22
nsImapUrl::`scalar deleting destructor' ; 22
nsImapIncomingServer::RemoveChannelFromUrl ; 22
nsImapIncomingServer::GetImapConnectionAndLoadUrl ; 22
nsImapMockChannel::~nsImapMockChannel ; 22
nsImapMiscellaneousSinkProxy::`vector deleting destructor' ; 22
nsImapMiscellaneousSinkProxy::CopyNextStreamMessage ; 22
nsImapUrl::RemoveChannel ; 22
nsImapMiscellaneousSinkProxy::~nsImapMiscellaneousSinkProxy ; 22
nsImapUrl::GetImapMiscellaneousSink ; 22
nsImapProtocol::SetupWithUrl ; 22
nsImapMockChannel::Close ; 22
nsImapProtocol::FindMailboxesIfNecessary ; 22
nsImapProtocol::PseudoInterrupt ; 22
PercentProgressProxyEvent::PercentProgressProxyEvent ; 22
nsImapMailFolder::PercentProgress ; 22
nsImapMockChannel::GetNotificationCallbacks ; 22
nsImapProtocol::LoadUrl ; 22
nsImapMiscellaneousSinkProxy::PercentProgress ; 22
nsImapMailFolder::ReleaseUrl ; 22
PercentProgressProxyEvent::~PercentProgressProxyEvent ; 22
nsImapProtocol::CreateEscapedMailboxName ; 22
nsImapMiscellaneousSinkProxy::QueryInterface ; 22
nsImapUrl::SetMockChannel ; 22
nsImapUrl::GetImapExtensionSink ; 22
nsImapUrl::SetMsgWindow ; 22
nsImapExtensionSinkProxy::~nsImapExtensionSinkProxy ; 22
nsImapIncomingServer::GetFetchByChunks ; 22
nsImapProtocol::ProcessCurrentURL ; 22
nsImapExtensionSinkProxy::nsImapExtensionSinkProxy ; 22
CopyNextStreamMessageProxyEvent::~CopyNextStreamMessageProxyEvent ; 22
nsImapProtocol::ReleaseUrlState ; 22
nsImapMockChannel::`vector deleting destructor' ; 22
PercentProgressProxyEvent::`scalar deleting destructor' ; 22
nsImapProtocol::Language ; 22
nsImapIncomingServer::LoadNextQueuedUrl ; 22
CopyNextStreamMessageProxyEvent::HandleEvent ; 22
nsImapUrl::GetMsgFlags ; 22
nsImapMailboxSpec::SetFlagState ; 22
nsImapProtocol::ProcessSelectedStateURL ; 22
PercentProgressProxyEvent::HandleEvent ; 22
nsImapMailFolder::PrepareToReleaseUrl ; 22
CopyNextStreamMessageProxyEvent::`vector deleting destructor' ; 22
nsImapUrl::CreateListOfMessageIdsString ; 22
nsIMAPHostSessionList::GetCapabilityForHost ; 22
nsImapUrl::GetImapMessageSink ; 22
nsIMAPHostSessionList::GetHaveWeEverDiscoveredFoldersForHost ; 22
nsImapUrl::~nsImapUrl ; 22
nsImapExtensionSinkProxy::QueryInterface ; 22
nsImapMockChannel::SetNotificationCallbacks ; 21
nsImapMailFolder::ProcessTunnel ; 20
nsCharTraits<unsigned short>::move ; 20
copy_string ; 20
basic_nsAWritableString<unsigned short>::Cut ; 20
nsCharSourceTraits<nsReadingIterator<unsigned short> >::readable_distance ; 20
nsWritingIterator<unsigned short>::write ; 20
nsImapProtocol::NotifyBodysToDownload ; 19
nsPromiseSubstring<char>::Promises ; 19
nsPromiseSubstring<char>::Length ; 19
nsImapMailFolder::OnStartRunningUrl ; 19
nsImapServerResponseParser::NumberOfMessages ; 19
nsImapMailFolder::OnStopRunningUrl ; 19
nsImapService::GetImapConnectionAndLoadUrl ; 19
nsImapFlagAndUidState::GetNumberOfDeletedMessages ; 18
basic_nsAReadableString<char>::Mid ; 18
basic_nsAWritableString<char>::AssignFromPromise ; 18
nsPromiseSubstring<char>::nsPromiseSubstring<char> ; 18
nsImapMailFolder::GetPrettyName ; 17
nsImapUrl::SetImapAction ; 15
nsImapUrl::AddChannelToLoadGroup ; 15
nsImapMailFolder::InitCopyState ; 14
nsImapMailFolder::BuildIdsAndKeyArray ; 14
GetShouldDownloadArbitraryHeadersProxyEvent::HandleEvent ; 14
nsImapUrl::GetImapServerSink ; 14
nsImapProtocol::SetProgressString ; 14
GetShouldDownloadArbitraryHeadersProxyEvent::GetShouldDownloadArbitraryHeadersProxyEvent ; 14
GetShouldDownloadArbitraryHeadersProxyEvent::~GetShouldDownloadArbitraryHeadersProxyEvent ; 14
nsImapMailFolder::OnlineCopyCompleted ; 14
GetShouldDownloadArbitraryHeadersProxyEvent::`vector deleting destructor' ; 14
nsImapMiscellaneousSinkProxy::GetShouldDownloadArbitraryHeaders ; 14
nsMsgKeyArray::`vector deleting destructor' ; 14
nsImapMailFolder::CopyMessages ; 14
nsImapService::GetCanDuplicate ; 13
nsImapExtensionSinkProxyEvent::~nsImapExtensionSinkProxyEvent ; 13
nsIMAPNamespace::nsIMAPNamespace ; 13
nsIMAPNamespaceList::AddNewNamespace ; 13
nsImapExtensionSinkProxyEvent::nsImapExtensionSinkProxyEvent ; 13
nsImapMailFolder::SyncFlags ; 12
nsImapMailboxSpec::GetBox_flags ; 12
nsImapProtocol::UpdatedMailboxSpec ; 12
nsImapMailboxSpec::GetFlagState ; 12
nsImapUrl::ParseListOfMessageIds ; 12
nsImapUrl::ParseUidChoice ; 12
nsImapMailFolder::UpdateImapMailboxInfo ; 12
nsImapProtocol::ProcessMailboxUpdate ; 12
nsImapMailFolder::FindKeysToAdd ; 12
nsIMAPNamespaceList::UnserializeNamespaces ; 12
nsImapMailboxSpec::GetFolderSelected ; 12
nsImapProtocol::NotifyHdrsToDownload ; 12
nsImapProtocol::WaitForPotentialListOfMsgsToFetch ; 12
nsImapMailFolder::FindKeysToDelete ; 12
nsImapProtocol::WaitForPotentialListOfBodysToFetch ; 12
nsImapService::SelectFolder ; 12
nsImapServerResponseParser::CreateCurrentMailboxSpec ; 12
nsImapProtocol::PseudoInterruptMsgLoad ; 10
nsImapProtocol::HandlingMultipleMessages ; 10
nsMsgImapModule::Release ; 9
basic_nsAReadableString<char>::Right ; 9
nsImapMockChannel::GetContentType ; 9
nsImapMailFolder::UpdateFolder ; 8
nsIMAPGenericParser::CreateLiteral ; 8
nsImapProtocol::Copy ; 7
nsImapProtocol::Store ; 7
AllocateImapUidString ; 7
nsImapMailFolder::HeaderFetchCompleted ; 7
nsImapProtocol::OnCreateServerDestinationFolderPathString ; 7
HeaderFetchCompletedProxyEvent::~HeaderFetchCompletedProxyEvent ; 7
nsImapMoveCopyMsgTxn::SetCopyResponseUid ; 7
nsImapProtocol::FolderMsgDumpLoop ; 7
nsImapProtocol::FolderMsgDump ; 7
HeaderFetchCompletedProxyEvent::HeaderFetchCompletedProxyEvent ; 7
nsImapProtocol::HeaderFetchCompleted ; 7
nsImapMailCopyState::`scalar deleting destructor' ; 7
nsImapMoveCopyMsgTxn::GetSrcKeyArray ; 7
SetCopyResponseUidProxyEvent::SetCopyResponseUidProxyEvent ; 7
nsImapProtocol::GetShouldDownloadArbitraryHeaders ; 7
nsImapMiscellaneousSinkProxy::HeaderFetchCompleted ; 7
nsImapMailFolder::SetCopyResponseUid ; 7
nsImapMailCopyState::~nsImapMailCopyState ; 7
nsImapMailFolder::UpdatePendingCounts ; 7
nsImapMailCopyState::nsImapMailCopyState ; 7
nsImapUrl::SetCopyState ; 7
nsImapMoveCopyMsgTxn::Init ; 7
nsImapMailFolder::ClearCopyState ; 7
SetCopyResponseUidProxyEvent::`vector deleting destructor' ; 7
SetCopyResponseUidProxyEvent::HandleEvent ; 7
nsImapProtocol::SetCopyResponseUid ; 7
HeaderFetchCompletedProxyEvent::HandleEvent ; 7
nsImapProtocol::GetArbitraryHeadersToDownload ; 7
nsImapProtocol::ProgressEventFunctionUsingIdWithString ; 7
nsImapProtocol::FolderHeaderDump ; 7
HeaderFetchCompletedProxyEvent::`scalar deleting destructor' ; 7
nsImapMailFolder::SetTransactionManager ; 7
nsImapUrl::CreateServerDestinationFolderPathString ; 7
nsImapMailFolder::PrepareToAddHeadersToMailDB ; 7
nsImapService::OnlineMessageCopy ; 7
nsImapExtensionSinkProxy::SetCopyResponseUid ; 7
SetCopyResponseUidProxyEvent::~SetCopyResponseUidProxyEvent ; 7
nsImapMoveCopyMsgTxn::nsImapMoveCopyMsgTxn ; 7
nsMsgImapModule::GetClassObject ; 7
nsImapExtensionSinkProxy::AddFolderRights ; 6
nsImapFlagAndUidState::Reset ; 6
nsImapUrl::GetMsgFolder ; 6
nsImapProtocol::Noop ; 6
nsImapMailFolder::GetMessageSizeFromDB ; 6
nsIMAPNamespaceList::CreatensIMAPNamespaceList ; 6
nsImapIncomingServer::GetServerDirectory ; 6
nsImapUrl::SetFetchPartsOnDemand ; 6
nsParseImapMessageURI ; 6
nsImapFlagAndUidState::SetSupportedUserFlags ; 6
nsImapMailFolder::GetFolderNeedsACLListed ; 6
nsImapOfflineSync::ProcessEmptyTrash ; 6
nsImapProtocol::RefreshACLForFolderIfNecessary ; 6
nsImapUrl::GetUri ; 6
nsImapServerResponseParser::HighestRecordedUID ; 6
nsImapServerResponseParser::acl_data ; 6
nsIMAPNamespaceList::nsIMAPNamespaceList ; 6
nsIMAPHostSessionList::SetNamespaceFromPrefForHost ; 6
AddFolderRightsProxyEvent::~AddFolderRightsProxyEvent ; 6
nsImapProtocol::SelectMailbox ; 6
nsImapServerResponseParser::ResetFlagInfo ; 6
nsImapProtocol::AddFolderRightsForUser ; 6
nsImapIncomingServer::CloseCachedConnections ; 6
nsImapMockChannel::SetContentType ; 6
AddFolderRightsProxyEvent::HandleEvent ; 6
AddFolderRightsProxyEvent::AddFolderRightsProxyEvent ; 6
AddFolderRightsProxyEvent::`scalar deleting destructor' ; 6
nsImapProtocol::OnRefreshACLForFolder ; 6
nsImapFlagAndUidState::nsImapFlagAndUidState ; 5
nsImapServerResponseParser::xserverinfo_data ; 5
nsImapProtocol::nsImapProtocol ; 5
nsImapServerResponseParser::SetHostSessionList ; 5
nsImapProtocol::AuthLogin ; 5
nsImapProtocol::TryToLogon ; 5
nsImapIncomingServer::SetMailServerUrls ; 5
nsImapSearchResultSequence::nsImapSearchResultSequence ; 5
nsImapIncomingServer::CreateProtocolInstance ; 5
nsImapProtocol::ImapThreadMainLoop ; 5
nsImapUrl::CreateCanonicalSourceFolderPathString ; 5
nsImapIncomingServer::SetManageMailAccountUrl ; 5
nsImapProtocol::TellThreadToDie ; 5
nsIMAPHostSessionList::GetPasswordVerifiedOnline ; 5
nsIMAPHostSessionList::GetNamespacesOverridableForHost ; 5
nsImapProtocol::XServerInfo ; 5
nsImapProtocol::Initialize ; 5
nsImapProtocol::ProcessAfterAuthenticated ; 5
nsIMAPHostSessionList::GetGotNamespacesForHost ; 5
nsIMAPHostSessionList::SetPasswordForHost ; 5
nsImapServerResponseParser::SetFlagState ; 5
nsImapIncomingServer::RemoveConnection ; 5
nsIMAPHostSessionList::GetHostHasAdminURL ; 5
nsImapServerResponseParser::nsImapServerResponseParser ; 5
nsImapProtocol::OnStartRequest ; 5
nsImapProtocol::Configure ; 5
nsImapProtocol::Run ; 5
TLineDownloadCache::TLineDownloadCache ; 5
nsImapProtocol::EstablishServerConnection ; 5
nsIMAPGenericParser::nsIMAPGenericParser ; 5
nsImapService::NewURI ; 5
nsImapSearchResultSequence::CreateSearchResultSequence ; 5
nsImapMailFolder::GetMessages ; 4
nsImapProtocol::~nsImapProtocol ; 4
nsImapServerResponseParser::~nsImapServerResponseParser ; 4
TLineDownloadCache::~TLineDownloadCache ; 4
nsImapMailFolder::GetNotifyDownloadedLines ; 4
nsImapSearchResultSequence::~nsImapSearchResultSequence ; 4
nsImapIncomingServer::PerformBiff ; 4
nsImapProtocol::`vector deleting destructor' ; 4
nsImapSearchResultSequence::`scalar deleting destructor' ; 4
nsImapMailFolder::GetNewMessages ; 4
nsImapIncomingServer::GetDeleteModel ; 4
nsMsgLineStreamBuffer::`scalar deleting destructor' ; 4
nsImapProtocol::OnStopRequest ; 4
nsImapSearchResultSequence::Clear ; 4
nsIMAPGenericParser::~nsIMAPGenericParser ; 4
nsImapMockChannel::SetLoadAttributes ; 3
nsIMAPHostSessionList::SetNamespacesPrefForHost ; 3
nsImapURI2Path ; 3
nsImapMailFolder::NormalEndMsgWriteStream ; 3
nsImapIncomingServer::GetPublicNamespace ; 3
nsImapUrl::GetFolderCharsetOverride ; 3
nsIMAPHostSessionList::AddHostToList ; 3
nsImapProtocol::SetContentModified ; 3
nsImapUrl::GetContentModified ; 3
NS_NewAsyncStreamListener ; 3
nsImapMockChannel::AsyncOpen ; 3
nsImapUrl::SetContentModified ; 3
nsImapProtocol::FetchTryChunking ; 3
nsImapIncomingServer::`scalar deleting destructor' ; 3
nsImapMailFolder::GetFolderNeedsAdded ; 3
nsImapService::DecomposeImapURI ; 3
nsImapMockChannel::SetLoadGroup ; 3
nsImapMailFolder::SetContentModified ; 3
nsImapUrl::GetMsgLoadingFromCache ; 3
nsImapIncomingServer::OnlineFolderDelete ; 3
nsImapProtocol::AdjustChunkSize ; 3
nsImapIncomingServer::GetCleanupInboxOnExit ; 3
nsImapUrl::SetCharsetOverRide ; 3
nsIMAPHostSessionList::SetDeleteIsMoveToTrashForHost ; 3
nsIMAPBodyShellCache::nsIMAPBodyShellCache ; 3
nsImapService::FetchMessage ; 3
nsIMAPHostInfo::nsIMAPHostInfo ; 3
nsImapMailFolder::GetIncomingServerType ; 3
nsIMAPHostSessionList::SetShowDeletedMessagesForHost ; 3
nsImapIncomingServer::GetOverrideNamespaces ; 3
nsImapIncomingServer::GetMimePartsOnDemand ; 3
nsImapIncomingServer::GetUsingSubscription ; 3
nsImapProtocol::GetMessageSize ; 3
nsImapIncomingServer::ClearInner ; 3
nsImapIncomingServer::PseudoInterruptMsgLoad ; 3
nsIMAPNamespaceList::GetNumberOfNamespaces ; 3
nsImapUrl::GetFetchPartsOnDemand ; 3
nsImapUrl::GetFolderCharset ; 3
nsIMAPBodyShellCache::Create ; 3
nsImapIncomingServer::GetPersonalNamespace ; 3
nsImapUrl::GetCharsetOverRide ; 3
nsImapMailFolder::EndMessage ; 3
nsImapUrl::SetOriginalSpec ; 3
nsImapIncomingServer::GetOtherUsersNamespace ; 3
nsImapMockChannel::GetOwner ; 3
nsImapIncomingServer::~nsImapIncomingServer ; 3
nsImapUrl::GetImapPartToFetch ; 3
nsPromiseSubstring<unsigned short>::GetReadableFragment ; 3
nsImapIncomingServer::SetKey ; 3
nsImapService::DisplayMessage ; 3
nsIMAPNamespaceList::GetNumberOfNamespaces ; 3
nsImapService::NewChannel ; 3
nsImapIncomingServer::nsImapIncomingServer ; 3
nsImapMoveCoalescer::PlaybackMoves ; 2
nsImapMoveCoalescer::~nsImapMoveCoalescer ; 2
nsImapMoveCoalescer::`scalar deleting destructor' ; 2
nsIMAPHostSessionList::SetOnlineTrashFolderExistsForHost ; 2
nsImapFlagAndUidState::GetNumberOfRecentMessages ; 2
IMAPGetStringByID ; 2
nsImapMoveCoalescer::nsImapMoveCoalescer ; 2
nsIMAPGenericParser::skip_to_close_paren ; 2
nsIMAPHostSessionList::GetNamespaceNumberForHost ; 2
nsImapProtocol::Lsub ; 2
nsIMAPNamespaceList::GetNamespaceNumber ; 2
nsIMAPNamespace::~nsIMAPNamespace ; 2
nsIMAPNamespaceList::GetNamespaceNumber ; 2
nsIMAPHostSessionList::AddNewNamespaceForHost ; 2
nsImapProtocol::Namespace ; 1
nsImapProtocol::SetMailboxDiscoveryStatus ; 1
nsImapIncomingServer::SetPersonalNamespace ; 1
nsImapIncomingServer::DiscoveryDone ; 1
basic_nsAWritableString<unsigned short>::AssignFromPromise ; 1
nsIMAPHostSessionList::SetHaveWeEverDiscoveredFoldersForHost ; 1
nsImapProtocol::CommitCapability ; 1
nsImapProtocol::List ; 1
basic_nsAReadableString<unsigned short>::Right ; 1
nsImapIncomingServer::GetUnverifiedFolders ; 1
nsImapServerResponseParser::capability_data ; 1
nsMsgImapModule::CanUnload ; 1
nsImapService::nsImapService ; 1
nsMsgImapModule::QueryInterface ; 1
nsMsgImapModule::`scalar deleting destructor' ; 1
nsMsgImapModule::nsMsgImapModule ; 1
basic_nsAReadableString<unsigned short>::Mid ; 1
nsMsgImapModule::Initialize ; 1
nsMsgImapModule::~nsMsgImapModule ; 1
nsIMAPNamespaceList::ClearNamespaces ; 1
nsIMAPHostSessionList::GetShouldAlwaysListInboxForHost ; 1
nsPromiseSubstring<unsigned short>::nsPromiseSubstring<unsigned short> ; 1
nsImapIncomingServer::SetCapability ; 1
nsImapProtocol::MailboxDiscoveryFinished ; 1
nsImapServerResponseParser::namespace_data ; 1
nsImapService::ListFolder ; 1
nsIMAPHostSessionList::CommitNamespacesForHost ; 1
nsImapProtocol::GlobalInitialization ; 1
nsImapProtocol::Capability ; 1
nsImapURI2FullName ; 1
nsImapService::`scalar deleting destructor' ; 1
nsImapProtocol::GetMsgWindow ; 1
nsImapMailFolder::List ; 1
nsIMAPHostSessionList::GetNumberOfNamespacesForHost ; 1
nsImapIncomingServer::SetPublicNamespace ; 1
nsImapIncomingServer::SetCapabilityPref ; 1
nsImapMockChannel::Suspend ; 1
nsImapIncomingServer::CommitNamespaces ; 1
nsImapProtocol::DiscoverMailboxList ; 1
nsIMAPHostSessionList::nsIMAPHostSessionList ; 1
nsImapProtocol::CommitNamespacesForHostEvent ; 1
nsImapIncomingServer::NoDescendentsAreVerified ; 1
nsIMAPHostSessionList::SetCapabilityForHost ; 1
nsImapIncomingServer::SetOtherUsersNamespace ; 1
nsImapService::~nsImapService ; 1
NSGetModule ; 1
nsImapIncomingServer::PromptForPassword ; 1
