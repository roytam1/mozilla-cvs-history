/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

interface nsIUrlListener;
interface nsIURI;
interface nsIImapUrl;
interface nsIEventQueue;
interface nsIImapProtocol;
interface nsISupportsArray;
interface nsIMsgFolder;

[scriptable, uuid(3d2e7e38-f9d8-11d2-af8f-001083002da8)]
interface nsIImapIncomingServer : nsISupports {

  attribute long maximumConnectionsNumber;
  attribute long timeOutLimits;
  attribute string adminUrl;
  attribute long capabilityPref;
  attribute boolean cleanupInboxOnExit;
  attribute long deleteModel;
  attribute boolean dualUseFolders;
  attribute boolean emptyTrashOnExit;
  attribute long emptyTrashThreshhold;
  attribute string personalNamespace;
  attribute string publicNamespace;
  attribute string otherUsersNamespace;
  attribute boolean offlineDownload;
  attribute boolean overrideNamespaces;
  attribute boolean usingSubscription;
  attribute string manageMailAccountUrl;
  attribute boolean fetchByChunks;
  attribute boolean mimePartsOnDemand;
       
  void GetImapConnectionAndLoadUrl(in nsIEventQueue aClientEventQueue,
                                           in nsIImapUrl aImapUrl,
                                           in nsISupports aConsumer);

  void RemoveConnection(in nsIImapProtocol aImapConnection);
  void ResetNamespaceReferences();
  void PseudoInterruptMsgLoad(in nsIImapUrl aImapUrl, out boolean interrupted);
  void ResetConnection(in string folderName);
};
