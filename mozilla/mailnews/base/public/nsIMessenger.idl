/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"
#include "nsrootidl.idl"
#include "nsIRDFCompositeDataSource.idl"
#include "nsIMsgWindow.idl"
#include "nsIMsgIdentity.idl"
#include "nsIMsgThread.idl"
#include "nsIMsgFolder.idl"

interface nsIDOMWindowInternal;
interface nsITransactionManager;
interface nsIMsgMessageService;

[scriptable, uuid(4f7966d0-c14f-11d2-b7f2-00805f05ffa5)]
interface nsIMessenger : nsISupports {

    const long eUnknown = 0;
    const long eDeleteMsg = 1;
    const long eMoveMsg = 2;
    const long eCopyMsg = 3;

    readonly attribute nsITransactionManager transactionManager;

    void SetWindow(in nsIDOMWindowInternal ptr, in nsIMsgWindow msgWindow);
    void DoPrint();
    void DoPrintPreview();
    void DeleteMessages(in nsIRDFCompositeDataSource database,
                        in nsIRDFResource srcFolderResource,
                        in nsISupportsArray messages,
						in boolean reallyDelete);
    void DeleteFolders(in nsIRDFCompositeDataSource db,
                       in nsIRDFResource parentFolder,
                       in nsIRDFResource folder);
	void CopyMessages(in nsIMsgFolder srcFolder,
                      in nsIMsgFolder destFolder,
                      in nsISupportsArray messageArray,
					  in boolean isMove);
	void CopyFolders(in nsIRDFCompositeDataSource database,
                      in nsIRDFResource dstFolder,
                      in nsISupportsArray folders,
                      in boolean isMoveFolder);
    
    void OpenURL(in string url);
    void RenameFolder(in nsIRDFCompositeDataSource db, 
                      in nsIRDFResource folder, in wstring name);
    void CompactFolder(in nsIRDFCompositeDataSource db,
                       in nsIRDFResource folder, 
                       in boolean forAll);
    void EmptyTrash(in nsIRDFCompositeDataSource db,
                    in nsIRDFResource folder);

    boolean CanUndo();
    boolean CanRedo();
    unsigned long GetUndoTransactionType();
    unsigned long GetRedoTransactionType();
    void Undo(in nsIMsgWindow msgWindow);
    void Redo(in nsIMsgWindow msgWindow);
	void SendUnsentMessages(in nsIMsgIdentity aIdentity);
	void SetDocumentCharset(in wstring characterSet);
    void saveAs(in string url, in boolean asFile, in nsIMsgIdentity identity, in nsIMsgWindow aMsgWindow);
    void openAttachment(in string contentTpe, in string url, in string displayName, in string messageUri);
    void saveAttachment(in string contentTpe, in string url, in string displayName, in string messageUri);
    void saveAllAttachments(in unsigned long count, [array, size_is(count)] in string contentTypeArray,
                            [array, size_is(count)] in string urlArray, [array, size_is(count)] in string displayNameArray,
                            [array, size_is(count)] in string messageUriArray);
    void find();
    void findAgain();

    nsIMsgMessageService messageServiceFromURI(in string uri);
};

