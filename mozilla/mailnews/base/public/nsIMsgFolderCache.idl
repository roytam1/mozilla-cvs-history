/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Joshua Cranmer <Pidgeot18@gmail.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

interface nsIFile;
interface nsIMsgFolderCacheElement;

/**
 * An interface representing the message folder cache.
 *
 * The default cache is a SQLite file, msgFolderCache.sqlite, located in the
 * profile root directory. This can be specified with the key
 * NS_APP_MESSENGER_FOLDER_CACHE_50_FILE ("MFCaF") through a directory service
 * provider. This is the default schema:
 * <code>
 *  CREATE TABLE entries (
 *    folderKey CHAR,
 *    propertyName CHAR,
 *    value CHAR
 *  );
 * </code>
 *
 * All methods, except (obviously) Init, will throw a NS_ERROR_NOT_INITIALIZED
 * if the Init function has not been called. They may also throw underlying
 * errors from the backing database should a database error occur.
 */
[scriptable, uuid(78C2B6A2-E29F-44de-9543-10DBB51E245C)]
interface nsIMsgFolderCache : nsISupports 
{
  /**
   * Initializes the folder cache with the specified file.
   * Do not call multiple times.
   */
  void Init(in nsIFile aFile);
  /**
   * Returns an element of the folder cache.
   * 
   * @param key             The name of cache element to get.
   * @param createIfMissing If true, create the cache if it does not exist.
   *
   * @exception NS_ERROR_FAILURE if the key does not exist and is not created.
   */
  nsIMsgFolderCacheElement GetCacheElement(in ACString key,
    in boolean createIfMissing);
  /**
   * Clears the cache.
   */
  void clear();
  /**
   * Closes the cache.
   *
   * This will cause a compressed commit to occur.
   */
  void close();
  /**
   * Commits the cache.
   *
   * @param compress        If true, compress the changes.
   */
  void commit(in boolean compress);
  /**
   * Removes the named element.
   *
   * @param key             The name of cache element to get.
   *
   * @exception NS_ERROR_FAILURE if the key does not exist.
   */
  void removeElement(in ACString key);
};
