/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 2000 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */
 
#include "nsISupports.idl"
#include "xulstubs.idl"
#include "domstubs.idl"
#include "nsIRDFService.idl"

%{C++
#include "nsIDOMXULTreeElement.h"
#include "nsIDOMXULElement.h"
#include "nsIDOMXULDocument.h"
#include "nsIDOMNode.h"
%}

[scriptable, uuid(BDD872B6-D02C-11d3-8B2E-0060B0FC04D2)]
interface nsIMsgViewNavigationService : nsISupports {
%{C++
	enum {  eNavigateAny =0, eNavigateUnread=1, eNavigateFlagged =2 , eNavigateNew =3};
%}

	nsIDOMXULElement FindNextMessage(in long type, in nsIDOMXULTreeElement tree, in nsIDOMXULElement originalMessage, 
						 in nsIRDFService rdfService, in nsIDOMXULDocument document,
						 in boolean wrapAround, in boolean isThreaded);

	nsIDOMXULElement FindFirstMessage(in nsIDOMXULTreeElement tree);

	nsIDOMXULElement FindNextThread(in long type, in nsIDOMXULTreeElement tree, in nsIDOMXULElement originalMessage,
						in nsIRDFService rdfService, in nsIDOMXULDocument document, in boolean wrapAround,
						in boolean checkOriginalMessage);

	nsIDOMXULElement FindNextInThread(in long type, in nsIDOMXULTreeElement tree, in nsIDOMXULElement originalMessage,
						in nsIRDFService rdfService, in nsIDOMXULDocument document);

	nsIDOMXULElement FindPreviousMessage(in long type, in nsIDOMXULTreeElement tree, in nsIDOMXULElement originalMessage, 
						 in nsIRDFService rdfService, in nsIDOMXULDocument document,
						 in boolean wrapAround, in boolean isThreaded);

	void OpenTreeitemAndDescendants(in nsIDOMNode treeitem);

	void EnsureDocumentIsLoaded(in nsIDOMXULDocument document);
};

