/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

%{C++
#include "MailNewsTypes.h"
%}

#include "MailNewsTypes2.idl"

[ptr] native nsString(nsString);
[ptr] native nsCString(nsCString);
[ref] native nsStringRef(nsString);
[ref] native nsCStringRef(nsCString);

native nsMsgPriority(nsMsgPriority);

[scriptable, uuid(4e994f60-c317-11d2-8cc9-0060b0fc14a3)]
interface nsIMsgHdr : nsISupports
{
    [noscript] void GetProperty(in string propertyName, in nsStringRef propertyValue);
    [noscript] void SetProperty(in string propertyName, in nsStringRef propertyStr);

    unsigned long GetUint32Property(in string propertyName);
    void SetUint32Property(in string propertyName,
                           in unsigned long propertyVal);

    readonly attribute unsigned short numReferences;
    [noscript] void GetStringReference(in long refNum, in nsCStringRef ref);

    attribute PRTime date;
    
    /* XXX make this an attribute */
    void SetMessageId(in string messageId);
	[noscript] void GetMessageId(in nsCString messageId);

    /* XXX make this an attribute */
    void SetReferences(in string references);
    void SetCCList(in string ccList);
    void SetRecipients(in string recipients, in boolean recipientsIsNewsgroup);
	void SetRecipientsArray(in string names, in string addresses, in unsigned long numAddresses);
    void SetCCListArray(in string names, in string addresses, in unsigned long numAddresses);
    void SetAuthor(in string author);
    void SetSubject(in string subject);
    void SetStatusOffset(in unsigned long statusOffset);

	[noscript] void GetAuthor(in nsString resultAuthor);
	[noscript] void GetSubject(in nsString resultSubject);
	[noscript] void GetRecipients(in nsString resultRecipients);
	[noscript] void GetCCList(in nsString ccList);

	[noscript] void GetMime2DecodedAuthor(in nsString resultAuthor);
	[noscript] void GetMime2DecodedSubject(in nsString resultSubject);
	[noscript] void GetMime2DecodedRecipients(in nsString resultRecipients);

	[noscript] void GetAuthorCollationKey(in nsString resultAuthor);
	[noscript] void GetSubjectCollationKey(in nsString resultSubject);
	[noscript] void GetRecipientsCollationKey(in nsString resultRecipients);

    // flag handling routines
    void GetFlags(out unsigned long result);
    void SetFlags(in unsigned long flags);
    void OrFlags(in unsigned long flags, out unsigned long result);
    void AndFlags(in unsigned long flags, out unsigned long result);

	// Mark message routines
	void MarkRead(in boolean bRead);
	void MarkFlagged(in boolean bFlagged);

    void GetMessageKey(out nsMsgKey result);
    void GetThreadId(out nsMsgKey result);
    void SetThreadId(in nsMsgKey inKey);
    void SetMessageKey(in nsMsgKey inKey);
    void GetMessageSize(out unsigned long result);
    void SetMessageSize(in unsigned long messageSize);
    void GetLineCount(out unsigned long result);
    void SetLineCount(in unsigned long lineCount);
    [noscript] void SetPriority(in nsMsgPriority priority);
    void SetPriorityString(in string priority);
    void GetMessageOffset(out unsigned long result);
    void GetStatusOffset(out unsigned long result); 
	[noscript] void GetCharSet(in nsString result);
	[noscript] void GetPriority(out nsMsgPriority msgPriority);
    void GetThreadParent(out nsMsgKey result);
    void SetThreadParent(in nsMsgKey inKey);
    
};

[scriptable, uuid(B5212A60-F93F-11d2-951C-006097222B83)]
interface nsIMsgDBHdr : nsIMsgHdr
{

};
/* *******************************************************************************/

