/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsISupports.idl"
#include "nsIUrlListener.idl"

interface nsIMsgMailNewsUrl;
%{C++
#include "nsIMsgMailNewsUrl.h"
%}

/*
 * The url listener manager is a helper class used by all of our
 * subclassed urls to implement	registration and broadcasting of changes
 * to all of their registered url listeners. I envision	every url
 * implementation to have a has a relationship with a nsIUrlListenerManager.
 * All url listener register/unregister calls are forwarded to the
 * listener manager. In addition, the url listener manager handles
 * broadcasting of event changes on the url.
 */

[scriptable, uuid(5BCDB610-D00D-11d2-8069-006008128C4E)]
interface nsIUrlListenerManager : nsISupports {
    void RegisterListener(in nsIUrlListener aUrlListener);
    void UnRegisterListener(in nsIUrlListener aUrlListener);
    
    // These functions turn around and broadcast the notifications to
    // all url listeners...
    
    void OnStartRunningUrl(in nsIMsgMailNewsUrl aUrl);
    void OnStopRunningUrl(in nsIMsgMailNewsUrl aUrl, in nsresult aExitCode);

};

