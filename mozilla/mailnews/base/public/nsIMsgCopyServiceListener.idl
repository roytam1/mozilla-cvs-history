/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsrootidl.idl"
#include "nsISupports.idl"

interface nsString2;

[scriptable, uuid(1caa10b6-29a6-11d3-afb2-001083002da8)]
interface nsIMsgCopyServiceListener : nsISupports {

    /**
     * Notify the observer that the message has started to be copied. This
     * method is called only once, at the beginning of a message
     * copyoperation. 
     */
    void OnStartCopy();

    /**
     * Notify the observer that progress as occurred for the message copy
     * aProgress -
     * aProgressMax -
     */
    void OnProgress(in PRUint32 aProgress, 
                    in PRUint32 aProgressMax);

    /**
     * Setting newly created message key. This method is taylored specifically
     * for nsIMsgCopyService::CopyFileMessage() when saveing Drafts/Templates.
     * We need to have a way to inform the client what's the key of the newly
     * created message.
     * aKey -
     */
    void SetMessageKey(in PRUInt32 aKey);

    /**
     * Getting the file message message ID. This method is taylored
     * specifically for nsIMsgCopyService::CopyFileMessage() when saving
     * Drafts/Templates. In order to work with imap server which doesn't
     * support uidplus we have to use search comman to retrieve the key of
     * newly created message. Message ID generated by the compose gurantee its
     * uniqueness.
     * aMessageId -
     */
    void GetMessageId(in nsString2 aMessageId);

    /**
     * Notify the observer that the message copied operation has completed.  
     * This method is called regardless of whether the the operation was
     * successful.
     * aStatus - indicate whether the operation was succeeded
     */
    void OnStopCopy(in nsresult aStatus);

};

