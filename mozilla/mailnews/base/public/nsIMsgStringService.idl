/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 */

/* The nsIMsgStringService is a a generic interface for our
   component based string bundle services. The idea is to have
   say imap implement this interface for the imap string bundle. 
   local will have its own version of the service for local 
   strings (pop, mailbox). 

   The first time the service is asked to fetch the string for an ID, 
   it will cache the string bundle that is returned and re-use it for 
   all future requests.
*/
#include "nsISupports.idl"

#include "nsIStringBundle.idl"

[scriptable, uuid(6AC107B1-D558-11d3-98B1-001083010E9B)]
interface nsIMsgStringService : nsISupports {
  /* GetStringByID --> pass in the ID for the string you are
     interested in. You get back a PRUnichar * which you must
     of course release
  */
  wstring getStringByID (in long aStringID);
  readonly attribute nsIStringBundle bundle;
};

%{C++
#define NS_MAILNEWS_STRINGSERVICE_PROGID      "component://netscape/messenger/stringservice"
#define NS_MAILNEWS_STRINGSERVICE_PROGID_PREFIX NS_MAILNEWS_STRINGSERVICE_PROGID"?type="
%}
