/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

/*
 * The mail session is a replacement for the old 4.x MSG_Master object. It
 * contains mail session generic information such as the account manager, etc
 * I'm starting this off as an empty interface and as people feel they need to
 * add more information to it, they can. I think this is a better approach
 * than trying to port over the old MSG_Master in its entirety as that had a
 * lot of cruft in it....
 */

#include "nsISupports.idl"
#include "nsIFolderListener.idl"
#include "nsIMsgWindow.idl"
#include "nsISupportsArray.idl"
#include "nsIAtom.idl"

interface nsIMsgWindow;

[scriptable, uuid(D5124440-D59E-11d2-806A-006008128C4E)]
interface nsIMsgMailSession : nsISupports {


  void Shutdown();
  void AddFolderListener(in nsIFolderListener listener);
  void RemoveFolderListener(in nsIFolderListener listener);
  void NotifyFolderItemPropertyChanged(in nsISupports item,
                                       in nsIAtom property,
                                       in string oldValue,
                                       in string newValue);
  void NotifyFolderItemIntPropertyChanged(in nsISupports item,
                                       in nsIAtom property,
                                       in long oldValue,
                                       in long newValue);
  void NotifyFolderItemBoolPropertyChanged(in nsISupports item,
                                       in nsIAtom property,
                                       in boolean oldValue,
                                       in boolean newValue);
  void NotifyFolderItemPropertyFlagChanged(in nsISupports item,
                                           in nsIAtom property,
                                           in unsigned long oldValue,
                                           in unsigned long newValue);
    void NotifyFolderItemUnicharPropertyChanged(in nsISupports item,
                                                in nsIAtom property,
                                                in wstring oldValue,
                                                in wstring newValue);

  void NotifyFolderItemAdded(in nsISupports parentItem, in nsISupports item, in string viewString);
  void NotifyFolderItemDeleted(in nsISupports parentItem, in nsISupports item, in string viewString);

  void NotifyFolderEvent(in nsIFolder folder, in nsIAtom event);
  
  void NotifyFolderLoaded(in nsIFolder folder);
  void NotifyDeleteOrMoveMessagesCompleted(in nsIFolder folder);

  readonly attribute nsIMsgWindow topmostMsgWindow;
  void AddMsgWindow(in nsIMsgWindow msgWindow);
  void RemoveMsgWindow(in nsIMsgWindow msgWindow);
  readonly attribute nsISupportsArray msgWindowsArray;
  boolean IsFolderOpenInWindow(in nsIMsgFolder folder);

  string ConvertMsgURIToMsgURL(in string  aURI, in nsIMsgWindow aMsgWindow);
};

