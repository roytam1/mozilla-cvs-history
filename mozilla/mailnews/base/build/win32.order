nsMsgFolderCacheElement::AddRef ; 5681
nsMsgMessageDataSource::createMessageNode ; 5319
nsMsgMessageDataSource::GetTarget ; 5319
nsMsgFolderCacheElement::SetStringProperty ; 5060
nsMsgFilterList::ReadChar ; 4884
nsMsgFolderCacheElement::SetInt32Property ; 4104
FolderCachePool::Alloc ; 3775
basic_nsAWritableString<unsigned short>::Assign ; 3620
nsSaveMsgListener::OnStartRunningUrl ; 3018
nsMsgFolderCacheElement::Release ; 2997
nsMsgFolderCacheElement::GetStringProperty ; 2695
nsMsgFolderCache::RowCellColumnToCharPtr ; 2695
nsMsgRDFDataSource::getRDFService ; 2317
nsSubscribeDataSource::changeEnumFunc ; 2139
nsMsgFilterList::IsWhitespace ; 2084
nsMsgFolderCacheElement::GetInt32Property ; 1700
nsMsgAccountManager::AddRef ; 1387
nsMsgWindow::GetMessageView ; 1276
nsMsgRDFDataSource::GetMessageView ; 1276
nsMsgSearchTerm::MatchString ; 1242
nsMsgSearchTerm::MatchRfc2047String ; 1242
nsMsgSearchValueImpl::GetAttrib ; 1188
nsMsgAccountManager::QueryInterface ; 1187
nsMsgAccountManager::Release ; 1184
nsMsgAccountManagerDataSource::HasAssertion ; 1099
nsMsgRDFDataSource::GetIsThreaded ; 1016
nsMsgSearchTerm::GetMatchAllBeforeDeciding ; 992
nsMsgFolderCache::GetCacheElement ; 965
nsCOMPtr_base::assign_assuming_AddRef ; 934
createNode ; 860
nsMsgAccountManagerDataSource::GetTarget ; 856
nsRDFResource::GetValueConst ; 849
nsMsgFolderDataSource::GetTarget ; 843
nsMsgFolderDataSource::createFolderNode ; 843
nsMsgMessageDataSource::HasAssertion ; 786
nsMsgWindow::IsPreferred ; 784
nsMsgRDFDataSource::AddRef ; 780
nsMsgFilterList::GetLoggingEnabled ; 764
nsMsgFolderDataSource::AddRef ; 762
nsMsgFolderCache::Release ; 757
nsMsgAccountManager::GetFolderCache ; 752
nsMsgRDFDataSource::Release ; 743
nsMsgAccountManagerDataSource::Release ; 743
nsMsgMessageDataSource::DoMessageHasAssertion ; 702
GetTargetHasAssertion ; 702
nsMsgAccountManager::getServersToArray ; 690
nsMsgSearchTerm::InitHeaderAddressParser ; 686
nsMsgSearchTerm::MatchRfc822String ; 686
nsMsgMessageDataSource::createMessageDateNode ; 577
createDateNode ; 577
nsMsgSearchBoolExpression::OfflineEvaluate ; 514
nsMsgSearchBoolExpression::~nsMsgSearchBoolExpression ; 514
nsMsgSearchTerm::Release ; 499
nsMsgFolderDataSource::OnItemPropertyChanged ; 485
nsCopyMessageStreamListener::AddRef ; 467
nsMsgSearchTerm::QueryInterface ; 466
nsMsgSearchBoolExpression::leftToRightAddTerm ; 466
nsMsgSearchBoolExpression::AddSearchTerm ; 466
nsMsgFilter::Release ; 453
nsMsgMessageDataSource::HasArcOut ; 452
nsMsgMessageDataSource::createMessageIsUnreadNode ; 452
nsMsgFilter::GetEnabled ; 424
nsMsgFilterList::GetFilterAt ; 424
nsMsgFilter::QueryInterface ; 424
nsMsgSearchScopeTerm::~nsMsgSearchScopeTerm ; 418
nsMsgSearchScopeTerm::Release ; 418
nsMsgSearchScopeTerm::nsMsgSearchScopeTerm ; 418
nsMsgSearchOfflineMail::MatchTerms ; 418
nsMsgFilter::MatchHdr ; 418
nsMsgSearchBoolExpression::nsMsgSearchBoolExpression ; 418
nsMsgFilter::GetFilterType ; 418
nsMsgSearchOfflineMail::MatchTermsForFilter ; 418
nsMsgSearchScopeTerm::`vector deleting destructor' ; 418
nsMsgRDFDataSource::NotifyObservers ; 387
nsMsgMessageDataSource::IsThreadsFirstMessage ; 384
nsMsgMessageDataSource::GetMessageFolderAndThread ; 384
nsMsgAccountManagerDataSource::findServerByKey ; 380
basic_nsLiteralString<unsigned short>::GetReadableFragment ; 378
nsMsgMessageDataSource::createMessagePriorityNode ; 374
nsMsgMessageDataSource::createMessageStatusNode ; 374
nsMsgFolderCacheElement::nsMsgFolderCacheElement ; 373
nsMsgFolderCacheElement::~nsMsgFolderCacheElement ; 373
nsMsgFolderCacheElement::QueryInterface ; 373
nsMsgFolderCacheElement::`scalar deleting destructor' ; 373
nsMsgFolderCacheElement::SetOwningCache ; 373
nsMsgFolderCacheElement::SetKey ; 373
nsMsgFolderCache::AddCacheElement ; 373
nsMsgFolderCacheElement::SetMDBRow ; 373
nsMsgMessageDataSource::createMessageSenderNode ; 355
nsMsgFilterList::SkipWhitespace ; 353
createIntNode ; 348
nsMsgRDFDataSource::NotifyPropertyChanged ; 347
nsQueryReferent::operator= ; 344
nsMsgMailSession::QueryInterface ; 336
nsMsgMailSession::Release ; 334
nsMsgAccountManagerDataSource::isContainment ; 304
nsMsgAccountManagerDataSource::HasAssertionAccountRoot ; 302
nsStatusBarBiffManager::Release ; 302
nsMessageViewMessageEnumerator::HasMoreElements ; 240
nsMessageViewMessageEnumerator::SetAtNextItem ; 240
nsMsgAccountManager::FindServer ; 237
nsMessageViewMessageEnumerator::GetNext ; 229
nsMessageViewMessageEnumerator::MeetsCriteria ; 229
nsMessageViewThreadEnumerator::Prefetch ; 228
nsMessageViewThreadEnumerator::HasMoreElements ; 228
nsMessageView::HasMessages ; 225
nsMsgMessageDataSource::createMessageChildNode ; 225
nsMsgMessageDataSource::createFolderMessageChildNode ; 225
nsMessageViewThreadEnumerator::GetMessagesForCurrentThread ; 223
nsMessageViewThreadEnumerator::GetNext ; 223
nsMessengerBootstrap::Shutdown ; 219
nsMsgAccount::Release ; 217
nsMsgFolderDataSource::CreateUnreadMessagesNameString ; 216
nsMsgStatusFeedback::Release ; 202
nsMsgAccountManagerDataSource::getServerForObject ; 192
nsMsgAccountManagerDataSource::getServerForFolderNode ; 192
nsMsgMessageDataSource::createMessageTotalNode ; 187
nsMsgMessageDataSource::createMessageThreadStateNode ; 187
nsMsgMessageDataSource::createMessageUnreadNode ; 187
nsMsgAccountManager::LoadAccounts ; 187
nsMsgMessageDataSource::createMessageOrderReceivedNode ; 187
nsMsgMessageDataSource::createMessageMessageTypeNode ; 187
nsMsgMessageDataSource::createMessageNameNode ; 187
nsMsgMessageDataSource::createMessageFlaggedNode ; 187
nsMsgMessageDataSource::createMessageHasAttachmentNode ; 187
nsMsgMessageDataSource::GetSenderName ; 187
nsMsgMessageDataSource::createMessageIsImapDeletedNode ; 187
nsMsgAccount::QueryInterface ; 186
nsMsgFolderDataSource::NotifyFolderTreeNameChanged ; 182
nsMsgFilterList::LoadAttrib ; 177
nsMsgFilterList::LoadValue ; 176
nsMsgFolderDataSource::OnItemUnicharPropertyChanged ; 158
nsMsgMailSession::OnItemUnicharPropertyChanged ; 158
nsMsgAccountManager::GetAllServers ; 156
nsReadingIterator<unsigned short>::normalize_forward ; 136
basic_nsAReadableString<unsigned short>::BeginReading ; 136
nsSubscribeDataSource::Release ; 132
nsMsgMessageDataSource::GetUnreadChildrenNode ; 128
nsMsgMessageDataSource::GetThreadStateNode ; 128
nsMsgMessageDataSource::GetTotalChildrenNode ; 126
basic_nsLiteralString<unsigned short>::Length ; 126
nsMsgMessageDataSource::createMessageSizeNode ; 116
nsMsgAccount::GetIncomingServer ; 108
nsSubscribeDataSource::unassertEnumFunc ; 100
nsMsgStatusFeedback::QueryInterface ; 89
nsMsgRDFDataSource::QueryInterface ; 89
nsMsgMessageDataSource::createStatusNodeFromFlag ; 84
nsMsgRDFDataSource::HasArcIn ; 73
nsMsgMessageDataSource::createMessageLinesNode ; 71
nsMsgAccountManager::findIdentitiesForServer ; 70
nsMsgCopyService::AddRef ; 69
nsSaveMsgListener::OnProgress ; 68
nsMsgFolderDataSource::createFolderTreeNameNode ; 67
nsMsgFolderDataSource::HasArcOut ; 67
nsMsgCopyService::Release ; 63
nsMsgAccount::GetIdentities ; 60
basic_nsLiteralString<char>::GetReadableFragment ; 59
basic_nsLiteralString<char>::Length ; 59
Compare ; 59
basic_nsLiteralString<char>::basic_nsLiteralString<char> ; 59
basic_nsAWritableString<char>::AssignFromReadable ; 57
nsMsgFolderDataSource::createFolderSpecialNode ; 57
nsMsgMailSession::OnItemPropertyFlagChanged ; 53
nsStatusBarBiffManager::OnItemPropertyFlagChanged ; 53
nsMsgFolderDataSource::OnItemPropertyFlagChanged ; 53
nsMsgMessageDataSource::OnItemPropertyFlagChanged ; 53
nsMessenger::CanUndo ; 52
nsMessenger::GetUndoTransactionType ; 52
nsMsgStatusFeedback::ShowProgress ; 52
nsMessenger::CanRedo ; 52
nsMessenger::GetRedoTransactionType ; 52
nsMsgFolderCache::Commit ; 50
nsMsgFolderDataSource::GetBiffStateString ; 50
nsUrlListenerManager::ReleaseListeners ; 48
nsMsgSearchTerm::GetBooleanAnd ; 48
nsUrlListenerManager::BroadcastChange ; 48
nsMsgAccountManagerDataSource::getStringBundle ; 47
nsMsgAccountManagerDataSource::QueryInterface ; 47
nsMsgMailSession::OnItemIntPropertyChanged ; 45
nsMsgFolderDataSource::OnItemIntPropertyChanged ; 45
nsMsgFolderDataSource::GetNumMessagesNode ; 45
nsMsgWindow::GetRootDocShell ; 44
nsMsgMessageDataSource::OnChangeStatusString ; 42
nsMsgMessageDataSource::OnChangeStatus ; 42
nsMessage::`vector deleting destructor' ; 40
nsMsgFolderDataSource::createFolderCanRenameNode ; 39
nsMsgFolderDataSource::createFolderCanCompactNode ; 39
nsMsgFolderDataSource::createFolderCanSubscribeNode ; 39
nsMsgFolderDataSource::createNewMessagesNode ; 39
nsUrlListenerManager::UnRegisterListener ; 39
nsMsgFolderDataSource::createFolderChildNode ; 39
nsMsgFolderDataSource::createFolderServerTypeNode ; 39
nsMsgFolderDataSource::createBiffStateNode ; 39
nsMsgFolderDataSource::createFolderIsServerNode ; 39
nsMsgFolderDataSource::createFolderCanCreateSubfoldersNode ; 39
nsMsgFolderDataSource::createFolderNoSelectNode ; 39
nsMsgFolderDataSource::createFolderCanFileMessagesNode ; 39
nsMsgFolderDataSource::createSubfoldersHaveUnreadMessagesNode ; 39
nsMsgFolderDataSource::createFolderIsSecureNode ; 39
nsMsgFolderDataSource::createHasUnreadMessagesNode ; 39
nsMsgFilter::GetActionTargetFolderUri ; 38
nsMsgFilterList::ApplyFiltersToHdr ; 38
nsMsgFilterList::GetFilterCount ; 38
nsMsgViewNavigationService::EnsureDocumentIsLoaded ; 37
nsMsgAccountManager::findServer ; 36
nsMsgStatusFeedback::OnStateChange ; 35
nsMsgMessageDataSource::GetTargets ; 35
nsMessageView::GetMessages ; 35
nsMsgSearchTerm::DeStreamNew ; 33
nsMsgSearchTerm::nsMsgSearchTerm ; 33
nsMsgSearchTerm::ParseValue ; 33
nsMsgSearchTerm::ParseOperator ; 33
nsMsgFolderDataSource::QueryInterface ; 33
nsMsgFilter::AppendTerm ; 33
nsMsgSearchTerm::`scalar deleting destructor' ; 33
NS_MsgGetOperatorFromString ; 33
nsMsgSearchTerm::~nsMsgSearchTerm ; 33
nsMsgSearchTerm::ParseAttribute ; 33
nsMsgFolderDataSource::CreateNameSortString ; 33
nsMsgFolderDataSource::GetFolderSortOrder ; 33
NS_MsgGetAttributeFromString ; 33
nsMsgWindow::QueryInterface ; 32
nsMsgFilterList::GetVersion ; 30
nsMsgFilterList::StrToBool ; 30
nsUrlListenerManager::QueryInterface ; 30
nsQueryReferent::operator= ; 30
nsUrlListenerManager::nsUrlListenerManager ; 30
nsMsgFolderDataSource::HasAssertion ; 30
nsMsgFilterList::ParseCondition ; 29
nsMsgFilter::GetActionForFilingStr ; 29
nsMsgFilter::SetEnabled ; 29
nsMsgFilter::~nsMsgFilter ; 29
nsMsgFilter::SetFilterList ; 29
nsMsgRuleAction::~nsMsgRuleAction ; 29
nsMsgFilter::nsMsgFilter ; 29
nsMsgFilter::`scalar deleting destructor' ; 29
nsMsgFilter::ConvertMoveToFolderValue ; 29
nsMsgRuleAction::nsMsgRuleAction ; 29
nsMsgFilter::SetFilterName ; 29
nsMsgMessageDataSource::DoFolderHasAssertion ; 27
nsMsgStatusFeedback::StopMeteors ; 26
nsMsgStatusFeedback::StartMeteors ; 26
nsMsgWindow::GetStatusFeedback ; 25
nsMsgFolderDataSource::DoFolderHasAssertion ; 24
nsUrlListenerManager::`vector deleting destructor' ; 24
nsUrlListenerManager::~nsUrlListenerManager ; 24
nsUrlListenerManager::OnStopRunningUrl ; 24
nsMsgFolderDataSource::OnUnreadMessagePropertyChanged ; 24
nsUrlListenerManager::OnStartRunningUrl ; 24
do_GetService ; 22
nsMsgRDFDataSource::AddObserver ; 21
nsMsgFolderDataSource::OnTotalMessagePropertyChanged ; 21
nsQueryReferent::nsQueryReferent ; 20
nsMsgRDFDataSource::assertEnumFunc ; 20
nsUrlListenerManager::RegisterListener ; 20
nsMsgAccountManager::findServersForIdentity ; 20
nsMsgMailSession::OnItemEvent ; 20
nsMsgMailSession::IsFolderOpenInWindow ; 19
nsMsgMessageDataSource::QueryInterface ; 19
nsMsgBiffManager::Release ; 18
nsMsgSearchScopeTerm::GetSearchSession ; 17
nsMessageViewThreadEnumerator::Release ; 16
nsMsgStatusFeedback::ShowStatusString ; 16
nsMsgAccount::getPrefService ; 15
nsMsgAccountManager::GetIdentitiesForServer ; 14
nsMsgAccountManager::SetLastServerFound ; 14
nsMsgFolderDataSource::OnItemBoolPropertyChanged ; 14
nsMsgMailSession::OnItemBoolPropertyChanged ; 14
nsMsgAccountManagerDataSource::canGetMessages ; 14
nsMsgAccountManagerDataSource::HasAssertionServer ; 14
nsMsgAccountManager::findServerIndexByServer ; 13
nsMsgPrintEngine::OnEndURLLoad ; 13
nsMsgBiffManager::SetNextBiffTime ; 12
nsMsgAccountManager::findAccountByKey ; 12
nsMsgBiffManager::AddBiffEntry ; 12
nsMsgAccount::GetKey ; 12
nsMessageViewMessageEnumerator::`scalar deleting destructor' ; 11
nsMessageViewMessageEnumerator::nsMessageViewMessageEnumerator ; 11
nsMsgWindow::GetTransactionManager ; 11
nsMessageViewMessageEnumerator::~nsMessageViewMessageEnumerator ; 11
nsMsgRDFDataSource::NotifyPropertyChanged ; 11
nsRDFResource::GetValue ; 11
nsMsgAccountManager::addListenerToFolder ; 10
nsMsgAccountManager::getIdentitiesToArray ; 10
nsMessageView::SetShowThreads ; 10
nsMsgViewNavigationService::Release ; 10
nsMsgFolderDataSource::GetTargets ; 10
nsMsgAccountManagerDataSource::OnServerLoaded ; 10
nsMsgAccountManagerDataSource::GetTargets ; 10
nsMsgAccountManagerDataSource::OnServerUnloaded ; 10
nsMsgViewNavigationService::QueryInterface ; 9
nsMessageView::SetViewType ; 9
nsMessenger::Release ; 9
nsMsgWindow::SetOpenFolder ; 9
nsMessageView::QueryInterface ; 9
nsMessenger::QueryInterface ; 9
nsMsgAccountManager::hashElementRelease ; 9
nsMsgMailSession::OnItemPropertyChanged ; 8
nsMsgMessageDataSource::GetString ; 8
nsMsgStatusFeedback::OnProgressChange ; 8
nsMsgAccountManager::addIdentityIfUnique ; 8
nsMsgWindow::GetMessageWindowDocShell ; 8
nsMsgCopyService::NotifyCompletion ; 7
nsMsgAccountManager::GetDefaultAccount ; 7
nsMsgViewNavigationService::FindFirstMessage ; 7
nsMsgCopyService::DoNextCopy ; 7
nsMsgCopyService::QueryInterface ; 7
nsMsgViewNavigationService::OpenTreeitemAndDescendants ; 7
nsMsgCopyService::FindRequest ; 7
nsMsgBiffManager::FindServer ; 6
nsMsgBiffManager::SetupNextBiff ; 6
nsMsgWindow::GetMailCharacterSet ; 6
nsMsgRDFDataSource::SetWindow ; 6
nsMsgAccountManager::GetAccount ; 6
nsMsgAccountManager::getPrefService ; 6
nsMsgAccountManager::cleanupInboxOnExit ; 5
nsMsgAccount::SetKey ; 5
nsMsgAccountManagerDataSource::createServerResources ; 5
nsMsgAccount::`vector deleting destructor' ; 5
nsMsgBiffManager::QueryInterface ; 5
nsMsgWindow::CanHandleContent ; 5
nsMessageViewThreadEnumerator::`scalar deleting destructor' ; 5
nsMsgAccountManager::NotifyServerUnloaded ; 5
nsMsgAccount::createIdentities ; 5
nsMsgRDFDataSource::Init ; 5
nsMsgAccountManager::NotifyServerLoaded ; 5
nsMessageViewThreadEnumerator::~nsMessageViewThreadEnumerator ; 5
nsCOMPtr<nsISupports>::nsCOMPtr<nsISupports> ; 5
nsMsgAccount::Init ; 5
nsMsgBiffManager::OnServerUnloaded ; 5
nsMsgAccount::createIncomingServer ; 5
nsMsgAccount::nsMsgAccount ; 5
nsMsgAccountManager::emptyTrashOnExit ; 5
nsMessenger::SetWindow ; 5
nsMsgAccountManager::hashUnloadServer ; 5
nsMsgAccountManager::createKeyedAccount ; 5
nsMsgAccountManager::createKeyedServer ; 5
nsMsgAccountManager::GetIdentity ; 5
nsMsgWindow::SetMailCharacterSet ; 5
nsMsgFolderDataSource::createFolderNameNode ; 5
nsMsgStatusFeedback::SetDocShell ; 5
nsMsgRDFDataSource::nsMsgRDFDataSource ; 5
nsMsgMailSession::AddFolderListener ; 5
nsMsgAccount::~nsMsgAccount ; 5
nsMsgAccountManager::GetIncomingServer ; 5
nsMsgAccountManager::closeCachedConnections ; 5
nsMessageViewThreadEnumerator::nsMessageViewThreadEnumerator ; 5
nsMsgAccountManager::writeFolderCache ; 5
nsMsgBiffManager::OnServerLoaded ; 5
nsMsgAccountManagerDataSource::isDefaultServer ; 5
nsMsgAccountManager::GetAccounts ; 4
nsMsgMessageDataSource::GetThreadsFirstMessage ; 4
nsMsgAccount::SetDefaultIdentity ; 4
nsMsgAccountManager::GetServersForIdentity ; 4
nsStatusBarBiffManager::PerformStatusBarBiff ; 4
nsMsgAccount::AddIdentity ; 4
nsAdapterEnumerator::`vector deleting destructor' ; 4
nsMsgAccountManager::createKeyedIdentity ; 4
nsMsgAccountManager::FindServerIndex ; 4
nsQueryReferent::operator= ; 4
nsMsgIdentity::`scalar deleting destructor' ; 4
nsMsgMessageDataSource::OnChangeIsUnread ; 3
nsMessenger::InitializeDisplayCharset ; 3
nsMsgBiffManager::AddServerBiff ; 3
nsMsgBiffManager::RemoveServerBiff ; 3
nsMessenger::OpenURL ; 3
nsMsgBiffManager::PerformBiff ; 3
nsMsgAccountManager::AddIncomingServerListener ; 3
nsMsgRDFDataSource::Cleanup ; 3
OnBiffTimer ; 3
nsMsgWindow::GetMsgHeaderSink ; 3
nsMsgFolderDataSource::getFolderArcLabelsOut ; 2
nsMsgFolderDataSource::Init ; 2
nsMsgAccountManagerDataSource::createRootResources ; 2
nsMsgMessageDataSource::OnChangeThreadState ; 2
nsMsgMessageDataSource::getMessageArcLabelsOut ; 2
nsMsgAccountManagerDataSource::Init ; 2
nsMsgAccountManager::GetAllIdentities ; 2
nsMsgWindow::SetStatusFeedback ; 2
nsMsgMessageDataSource::OnChangeUnreadMessageCount ; 2
nsMsgViewNavigationService::Init ; 2
nsMsgAccountManager::AddRootFolderListener ; 2
nsMsgFolderDataSource::CreateLiterals ; 2
nsMsgRDFDataSource::Observe ; 2
nsGetInterface::nsGetInterface ; 2
nsMsgFilterList::Release ; 2
nsMsgMailSession::RemoveFolderListener ; 2
nsMsgFolderDataSource::CreateArcsOutEnumerator ; 2
nsMsgAccountManagerDataSource::nsMsgAccountManagerDataSource ; 2
nsMsgFolderDataSource::Cleanup ; 2
nsMsgStatusFeedback::OnProgress ; 2
nsMsgFolderDataSource::nsMsgFolderDataSource ; 2
nsMsgRDFDataSource::RemoveObserver ; 2
nsMsgAccountManager::RemoveIncomingServerListener ; 2
nsMsgFilterDataSource::Release ; 1
NSGetModule ; 1
nsMessenger::~nsMessenger ; 1
nsMsgFolderCache::OpenMDB ; 1
nsMsgMessageDataSource::Release ; 1
nsMsgFolderCache::QueryInterface ; 1
nsMsgAccountManager::nsMsgAccountManager ; 1
nsMsgFilterService::OpenFilterList ; 1
nsMsgAccountManager::CleanupInboxOnExit ; 1
nsMsgAccountManager::UnloadAccounts ; 1
nsMsgMailSession::Init ; 1
nsMsgCopyService::`scalar deleting destructor' ; 1
nsMsgMessageDataSource::Release ; 1
nsMsgSearchValidityManager::NewTable ; 1
nsSupportsHashtable::`scalar deleting destructor' ; 1
FolderCachePool::`scalar deleting destructor' ; 1
nsMessenger::nsMessenger ; 1
nsMsgMessageDataSource::CreateArcsOutEnumerators ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgAccountManager::EmptyTrashOnExit ; 1
nsMsgMessageDataSource::Init ; 1
nsSupportsHashtable::`scalar deleting destructor' ; 1
nsMsgBiffManager::`vector deleting destructor' ; 1
nsMsgViewNavigationService::`scalar deleting destructor' ; 1
nsMsgMailSession::nsMsgMailSession ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgCopyService::nsMsgCopyService ; 1
nsMsgAccountManager::~nsMsgAccountManager ; 1
nsMsgFilterService::QueryInterface ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgMessageDataSource::Release ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgMailSession::~nsMsgMailSession ; 1
NS_GetSpecialDirectory ; 1
nsMsgBiffManager::Observe ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgFolderCache::Close ; 1
nsMsgMessageDataSource::Release ; 1
nsMessageView::nsMessageView ; 1
nsMsgMailSession::RemoveMsgWindow ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgAccountManager::CloseCachedConnections ; 1
nsMsgFilterDataSource::Release ; 1
nsStatusBarBiffManager::nsStatusBarBiffManager ; 1
nsStatusBarBiffManager::~nsStatusBarBiffManager ; 1
nsMsgFilterList::SetDefaultFile ; 1
nsSupportsHashtable::`scalar deleting destructor' ; 1
nsMsgMailSession::AddMsgWindow ; 1
basic_nsLiteralString<unsigned short>::basic_nsLiteralString<unsigned short> ; 1
nsMsgFilterList::LoadTextFilters ; 1
nsMsgMessageDataSource::getFolderArcLabelsOut ; 1
nsMsgFilterService::nsMsgFilterService ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgSearchValidityManager::NewTable ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgBiffManager::nsMsgBiffManager ; 1
nsMsgFilterList::SetFolder ; 1
nsMsgFilterList::`vector deleting destructor' ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgStatusFeedback::OnStatus ; 1
nsMsgAccountManager::Init ; 1
nsMsgAccountManager::Observe ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgSearchValidityManager::NewTable ; 1
nsMsgFolderDataSource::~nsMsgFolderDataSource ; 1
nsMsgFilterService::~nsMsgFilterService ; 1
nsMsgWindow::SetMsgHeaderSink ; 1
nsMsgFolderDataSource::`scalar deleting destructor' ; 1
nsMsgStatusFeedback::CloseWindow ; 1
nsMsgSearchValidityManager::NewTable ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgWindow::SetDOMWindow ; 1
nsMsgRDFDataSource::~nsMsgRDFDataSource ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgBiffManager::Init ; 1
FolderCachePool::Init ; 1
nsMsgAccountManagerDataSource::Cleanup ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgAccountManager::Shutdown ; 1
nsMsgMessageDataSource::Release ; 1
nsStatusBarBiffManager::Init ; 1
nsStatusBarBiffManager::QueryInterface ; 1
nsMsgFolderCache::nsMsgFolderCache ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgSearchScopeTermArray::`vector deleting destructor' ; 1
nsMsgFolderCache::InitMDBInfo ; 1
nsMsgFolderCache::InitExistingDB ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgStatusFeedback::nsMsgStatusFeedback ; 1
nsMsgMailSession::`vector deleting destructor' ; 1
nsMsgAccountManager::`scalar deleting destructor' ; 1
nsMsgFilterList::nsMsgFilterList ; 1
nsMsgMessageDataSource::CreateLiterals ; 1
nsMessenger::`scalar deleting destructor' ; 1
nsMsgAccountManager::RemoveRootFolderListener ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgWindow::Init ; 1
nsMsgWindow::CloseWindow ; 1
nsMsgMessageDataSource::Release ; 1
nsQueryReferent::operator= ; 1
nsMsgFolderCache::Init ; 1
nsMsgFilterList::~nsMsgFilterList ; 1
nsQueryReferent::operator= ; 1
nsMsgAccountManager::WriteToFolderCache ; 1
nsMsgBiffManager::~nsMsgBiffManager ; 1
nsMsgFolderCache::~nsMsgFolderCache ; 1
nsSupportsHashtable::`scalar deleting destructor' ; 1
nsMessage::`vector deleting destructor' ; 1
nsMsgAccountManager::SetSpecialFoldersForIdentities ; 1
nsSupportsHashtable::`scalar deleting destructor' ; 1
nsMsgFilterService::`vector deleting destructor' ; 1
nsQueryReferent::operator= ; 1
nsQueryReferent::operator= ; 1
nsMsgViewNavigationService::~nsMsgViewNavigationService ; 1
nsMsgMessageDataSource::Release ; 1
nsMsgWindow::SetMessageView ; 1
nsStatusBarBiffManager::`vector deleting destructor' ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgMessageDataSource::nsMsgMessageDataSource ; 1
nsMsgFolderCache::`vector deleting destructor' ; 1
nsQueryReferent::operator= ; 1
nsIOFileStream::`vector deleting destructor' ; 1
nsMsgMessageDataSource::Release ; 1
nsMsgFolderCache::GetMDBFactory ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgCopyService::~nsMsgCopyService ; 1
nsMsgBiffManager::Shutdown ; 1
nsMsgFilterDataSource::Release ; 1
nsMsgWindow::nsMsgWindow ; 1
nsMsgViewNavigationService::nsMsgViewNavigationService ; 1
