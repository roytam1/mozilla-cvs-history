/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is Netscape Communications
 * Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 * Alec Flett <alecf@netscape.com>
 */

#include "nsISupports.idl"
#include "nsMsgSearchCore.idl"
#include "nsIMsgSearchValue.idl"

interface nsIMsgDBHdr;
interface nsIMsgDatabase;
interface nsIMsgSearchScopeTerm;

native nsCStringRef(nsCString&);

[scriptable, uuid(cc7795ce-1dd1-11b2-9ad2-dfa3c0b6ee09)]
interface nsIMsgSearchTerm : nsISupports {
    attribute nsMsgSearchAttribValue attrib;
    attribute nsMsgSearchOpValue op;
    attribute nsIMsgSearchValue value;

    attribute boolean booleanAnd;
    attribute string arbitraryHeader;

    boolean matchRfc822String(in string aString, in string charset, in boolean charsetOverride);
    boolean matchRfc2047String(in string aString, in string charset, in boolean charsetOverride);
    boolean matchDate(in PRTime aTime);
    boolean matchStatus(in unsigned long aStatus);
    boolean matchPriority(in nsMsgPriorityValue priority);
    boolean matchAge(in PRTime days);
    boolean matchSize(in unsigned long size);

    boolean matchBody(in nsIMsgSearchScopeTerm scopeTerm,
                      in unsigned long offset,
                      in unsigned long length,
                      in string charset,
                      in nsIMsgDBHdr msg,
                      in nsIMsgDatabase db);

    // marking noscript because headers is a null-seperated list of strings,
    // which is not scriptable
    [noscript]
    boolean matchArbitraryHeader(in nsIMsgSearchScopeTerm scopeTerm,
                                 in unsigned long offset,
                                 in unsigned long length,
                                 in string charset,
                                 in boolean charsetOverride,
                                 in nsIMsgDBHdr msg,
                                 in nsIMsgDatabase db,
                                 //[array, size_is(headerLength)] in string headers,
                                 in string headers,
                                 in unsigned long headerLength,
                                 in boolean forFilters);
                      
    readonly attribute boolean matchAllBeforeDeciding;

    [noscript] void EnStreamNew(in nsCStringRef stream);
};

