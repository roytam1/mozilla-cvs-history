/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"
#include "nsMsgFilterCore.idl"
#include "nsIMsgFilter.idl"
#include "nsIMsgFilterHitNotify.idl"

interface nsIOFileStream;

///////////////////////////////////////////////////////////////////////////////
// The Msg Filter List is an interface designed to make accessing filter lists
// easier. Clients typically open a filter list and either enumerate the filters,
// or add new filters, or change the order around...
//
///////////////////////////////////////////////////////////////////////////////

[scriptable, uuid(08ecbcb4-0493-11d3-a50a-0060b0fc04b7)]
interface nsIMsgFilterList : nsISupports {

    readonly attribute nsIMsgFolder folderForFilterList;
    readonly attribute unsigned long filterCount;
    nsIMsgFilter GetFilterAt(in unsigned long filterIndex);
	/* these methods don't delete filters - they just change the list.
     * FE still must
     * call MSG_DestroyFilter to delete a filter.
     */

    void SetFilterAt(in unsigned long filterIndex, in nsIMsgFilter filter);
    void RemoveFilterAt(in unsigned long filterIndex);
    void MoveFilterAt(in unsigned long filterIndex,
                      in nsMsgFilterMotionValue motion);
    void InsertFilterAt(in unsigned long filterIndex, in nsIMsgFilter filter);

    attribute boolean loggingEnabled;

    nsIMsgFilter CreateFilter(in string name);

    void SaveToFile(in nsIOFileStream stream);

    void ApplyFiltersToHdr(in nsMsgFilterTypeType filterType,
                           in nsIMsgDBHdr msgHdr,
                           in nsIMsgFolder folder,
                           in nsIMsgDatabase db,
                           in string headers,
                           in unsigned long headersSize,
                           in nsIMsgFilterHitNotify listener);
    
};


/* these longs are all actually of type nsMsgFilterMotionValue */
[scriptable, uuid(d067b528-304e-11d3-a0e1-00a0c900d445)]
interface nsMsgFilterMotion {
    const long Up = 0;
    const long Down = 1;
};
