nsMsgNewsFolder::AddRef ; 3132
nsMsgNewsFolder::Release ; 3094
nsMsgNewsFolder::QueryInterface ; 1030
nsNntpIncomingServer::Release ; 729
nsNntpIncomingServer::AddRef ; 729
nsReadingIterator<char>::normalize_forward ; 650
nsNntpIncomingServer::QueryInterface ; 500
nsMsgNewsFolder::GetDatabase ; 386
basic_nsAReadableString<unsigned short>::BeginReading ; 327
basic_nsAReadableString<unsigned short>::CharAt ; 320
nsReadingIterator<unsigned short>::advance ; 320
nsCOMPtr_base::assign_assuming_AddRef ; 228
nsBuildNewsMessageURI ; 195
nsMsgNewsFolder::CreateMessageFromMsgDBHdr ; 195
nsNntpUrl::Release ; 121
nsNntpUrl::AddRef ; 121
nsNntpUrl::QueryInterface ; 95
nsNNTPProtocol::AddRef ; 46
nsNNTPProtocol::Release ; 46
nsRDFResource::GetValue ; 45
nsMsgNewsFolder::UpdateSummaryTotals ; 31
nsNNTPProtocol::ReadXover ; 28
nsMsgNewsFolder::GetDBFolderInfoAndDB ; 27
nsNNTPNewsgroupList::ParseLine ; 25
nsNNTPNewsgroupList::SetProgressBarPercent ; 25
nsNNTPNewsgroupList::msg_StripRE ; 25
nsNNTPNewsgroupList::ProcessXOVERLINE ; 25
nsNntpService::Release ; 21
nsNntpService::AddRef ; 21
nsNNTPProtocol::QueryInterface ; 21
nsNntpService::GetDefaultDoBiff ; 19
nsRDFResource::GetValueConst ; 17
nsNNTPHost::AddRef ; 16
nsNntpService::QueryInterface ; 15
nsPromiseSubstring<char>::GetReadableFragment ; 15
nsMsgNewsFolder::GetNntpServer ; 12
nsNNTPProtocol::ProcessProtocolState ; 12
basic_nsAWritableString<char>::Assign ; 12
nsReadingIterator<char>::advance ; 11
NET_SACopy ; 11
nsNntpIncomingServer::GetNewsrcHasChanged ; 10
nsNntpIncomingServer::WriteNewsrcFile ; 10
nsNntpIncomingServer::GetMaxArticles ; 8
nsMsgNewsFolder::GetAbbreviatedName ; 8
nsWritingIterator<char>::advance ; 8
nsMsgNewsFolder::AbbreviatePrettyName ; 8
nsNntpIncomingServer::GetAbbreviate ; 8
nsWritingIterator<char>::normalize_forward ; 8
nsNNTPProtocol::NewsResponse ; 8
nsNntpIncomingServer::OnNewsrcSaveTimer ; 7
nsMsgNewsFolder::GetSubFolders ; 7
nsNNTPProtocol::SendData ; 7
nsNNTPProtocol::CleanupAfterRunningUrl ; 6
nsNNTPHost::Release ; 6
nsPromiseSubstring<char>::Promises ; 5
nsPromiseSubstring<char>::nsPromiseSubstring<char> ; 5
nsPromiseSubstring<char>::Length ; 5
basic_nsAWritableString<char>::AssignFromPromise ; 5
nsNNTPNewsgroup::Release ; 5
basic_nsAReadableString<char>::Mid ; 5
nsNNTPNewsgroupList::Release ; 5
basic_nsAWritableString<char>::BeginWriting ; 4
nsWritingIterator<char>::write ; 4
basic_nsAWritableString<char>::Cut ; 4
nsNntpUrl::GetNewsgroupList ; 4
nsNNTPNewsgroupList::FinishXOVERLINE ; 4
nsMsgNewsFolder::nsMsgNewsFolder ; 4
nsCreateNewsBaseMessageURI ; 4
nsNntpUrl::GetNntpArticleList ; 4
nsNntpUrl::GetOfflineNewsState ; 4
nsNntpUrl::GetNewsgroup ; 4
nsQueryReferent::operator= ; 4
nsMsgNewsFolder::CreateBaseMessageURI ; 4
copy_string ; 4
nsMsgNewsFolder::CreateSubFolders ; 4
basic_nsAReadableString<char>::Right ; 4
nsNNTPNewsgroup::GetName ; 4
nsNntpUrl::GetNntpHost ; 4
nsNNTPNewsgroupList::SetGetOldMessages ; 3
nsMsgNewsFolder::GetCanSubscribe ; 3
do_GetService ; 3
nsNNTPProtocol::CreateNewsFolderURI ; 3
nsMsgNewsFolder::GetCachedNewsrcLine ; 3
nsGetNewsGroupFromUri ; 3
nsNNTPNewsgroupList::SetProgressStatus ; 3
basic_nsAReadableString<char>::CharAt ; 3
nsNNTPProtocol::DisplayNewsRC ; 3
nsNntpIncomingServer::GetFirstGroupNeedingCounts ; 3
nsNNTPProtocol::InitializeNewsFolderFromUri ; 3
nsNntpUrl::SetNntpHost ; 2
nsMsgNewsFolder::UpdateSummaryFromNNTPInfo ; 2
nsNntpUrl::GetMessageToPost ; 2
nsNNTPProtocol::nsNNTPProtocol ; 2
nsMsgNewsFolder::SetCachedNewsrcLine ; 2
nsNNTPProtocol::SendModeReaderResponse ; 2
nsNntpIncomingServer::DisplaySubscribedGroup ; 2
nsNntpIncomingServer::CloseCachedConnections ; 2
nsNNTPHost::nsNNTPHost ; 2
nsNNTPHost::`scalar deleting destructor' ; 2
nsNntpService::GetDefaultServerPort ; 2
nsNNTPHost::~nsNNTPHost ; 2
nsMsgNewsFolder::GetAsciiName ; 2
nsMsgNewsFolder::AddNewsgroup ; 2
nsNntpUrl::~nsNntpUrl ; 2
nsNntpIncomingServer::GetLocalStoreType ; 2
nsNntpIncomingServer::GetMaximumConnectionsNumber ; 2
nsNNTPHost::CleanUp ; 2
nsNNTPProtocol::DisplayNewsRCResponse ; 2
nsNNTPProtocol::`scalar deleting destructor' ; 2
nsNntpUrl::nsNntpUrl ; 2
nsNNTPProtocol::OnStopRequest ; 2
nsNNTPNewsgroupList::GetGroupName ; 2
nsNntpUrl::SetUri ; 2
nsMsgNewsFolder::HandleNewsrcLine ; 2
nsNntpIncomingServer::ConnectionTimeOut ; 2
nsNntpUrl::GetNewsgroupName ; 2
nsNntpUrl::`vector deleting destructor' ; 2
nsNntpService::GetProtocolForUri ; 2
nsMsgLineStreamBuffer::`vector deleting destructor' ; 2
nsNNTPProtocol::LoginResponse ; 2
nsNNTPProtocol::SetNewsFolder ; 2
nsNntpUrl::GetGetOldMessages ; 2
nsMsgNewsFolder::HandleLine ; 2
nsNntpService::ConstructNntpUrl ; 2
nsNntpService::WeAreOffline ; 2
nsNntpIncomingServer::WriteHostInfoFile ; 2
nsNNTPHost::Initialize ; 2
nsNNTPProtocol::LoadUrl ; 2
nsNntpService::RunNewsUrl ; 2
nsNNTPHost::SetPostingAllowed ; 2
nsQueryReferent::operator= ; 2
nsNntpIncomingServer::AddNewsgroup ; 2
nsNNTPNewsgroupList::GetRangeOfArtsToDownload ; 2
nsNNTPHost::QueryInterface ; 2
nsNntpIncomingServer::CreateProtocolInstance ; 2
nsNNTPHost::GetNewsgroupList ; 2
nsNNTPProtocol::SendFirstNNTPCommand ; 2
nsNNTPProtocol::~nsNNTPProtocol ; 2
NET_SACat ; 2
nsNNTPProtocol::ParseURL ; 2
nsNNTPProtocol::SetProgressBarPercent ; 2
nsNNTPProtocol::CloseSocket ; 2
nsNNTPProtocol::SendModeReader ; 2
nsNntpIncomingServer::RemoveConnection ; 2
nsNNTPProtocol::Initialize ; 2
nsNntpIncomingServer::GetNntpConnection ; 2
nsNntpUrl::GetNewsAction ; 2
nsNntpService::GetDefaultPort ; 2
nsNNTPProtocol::LoadNewsUrl ; 2
nsNNTPProtocol::FigureNextChunk ; 2
nsNntpService::UpdateCounts ; 1
nsNNTPHost::DisplaySubscribedGroup ; 1
nsNNTPNewsgroupList::InitXOVER ; 1
nsNNTPProtocol::ProcessXover ; 1
nsNNTPNewsgroup::SetName ; 1
nsNntpService::nsNntpService ; 1
nsNNTPNewsgroupList::Initialize ; 1
nsNntpIncomingServer::GetNumGroupsNeedingCounts ; 1
nsNNTPNewsgroup::`vector deleting destructor' ; 1
nsAdapterEnumerator::`vector deleting destructor' ; 1
nsNntpUrl::SetMessageKey ; 1
nsNNTPNewsgroup::nsNNTPNewsgroup ; 1
nsNNTPNewsgroupList::QueryInterface ; 1
nsNntpUrl::SetNewsAction ; 1
nsNntpService::`vector deleting destructor' ; 1
nsNntpIncomingServer::ContainsNewsgroup ; 1
nsMsgNewsFolder::LoadNewsrcFileAndCreateNewsgroups ; 1
nsNNTPNewsgroup::QueryInterface ; 1
nsNntpUrl::SetGetOldMessages ; 1
nsNNTPNewsgroup::GetSubscribed ; 1
nsNNTPNewsgroupList::GetDatabase ; 1
nsNNTPNewsgroup::Initialize ; 1
nsNNTPProtocol::BeginReadXover ; 1
nsNntpUrl::SetNewsgroupName ; 1
nsMsgNewsFolder::GetNewsMessages ; 1
nsNNTPProtocol::SetProgressStatus ; 1
nsNntpIncomingServer::GetNewsrcFilePath ; 1
nsMsgNewsFolder::GetNewMessages ; 1
nsNntpIncomingServer::nsNntpIncomingServer ; 1
nsNNTPNewsgroupList::AddToKnownArticles ; 1
nsNNTPProtocol::CloseConnection ; 1
nsNNTPProtocol::XoverSend ; 1
nsMsgNewsFolder::UpdateFolder ; 1
nsNNTPProtocol::SetupForTransfer ; 1
nsMsgNewsFolder::GetIncomingServerType ; 1
nsNNTPProtocol::SetCheckingForNewNewsStatus ; 1
nsNNTPProtocol::ReadXoverResponse ; 1
nsNntpIncomingServer::`scalar deleting destructor' ; 1
nsNntpIncomingServer::ClearInner ; 1
nsNewsURI2Path ; 1
nsNntpIncomingServer::~nsNntpIncomingServer ; 1
nsMsgNewsFolder::`vector deleting destructor' ; 1
nsNNTPProtocol::GetLastActiveTimeStamp ; 1
nsNNTPNewsgroupList::CleanUp ; 1
nsNntpIncomingServer::SetupNewsrcSaveTimer ; 1
nsNNTPProtocol::IsBusy ; 1
nsNNTPNewsgroup::~nsNNTPNewsgroup ; 1
nsNNTPNewsgroup::UpdateSummaryFromNNTPInfo ; 1
nsNntpIncomingServer::GetNotifyOn ; 1
nsNNTPNewsgroupList::nsNNTPNewsgroupList ; 1
nsNntpUrl::SetNewsgroup ; 1
NSGetModule ; 1
nsNNTPNewsgroupList::`vector deleting destructor' ; 1
nsNewsURI2Path ; 1
nsNNTPNewsgroupList::~nsNNTPNewsgroupList ; 1
nsNNTPProtocol::SendFirstNNTPCommandResponse ; 1
nsMsgNewsFolder::~nsMsgNewsFolder ; 1
nsNntpService::~nsNntpService ; 1
nsNntpService::GetNewNews ; 1
nsNntpIncomingServer::PerformExpand ; 1
