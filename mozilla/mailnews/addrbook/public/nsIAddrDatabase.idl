/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

/* nsFileSpec is declared in nsIAbDirectory.idl */
#include "nsIAddrDBAnnouncer.idl"
#include "nsIAbCard.idl"
#include "nsIAbDirectory.idl"

[ptr] native nsIMdbTableRowCursor(nsIMdbTableRowCursor);
[ptr] native nsIMdbEnv(nsIMdbEnv);

%{C++
#include "mdb.h"
%}


[scriptable, uuid(A4186D8B-1DD0-11d3-A303-001083003D0C)] 
interface nsIAddrDatabase : nsIAddrDBAnnouncer {

	attribute nsFileSpec dbPath;

	void Open(in nsFileSpec folderName, in boolean create, 
			  out nsIAddrDatabase pCardDB, in boolean upgrading);
	void Close(in boolean forceCommit);
	void OpenMDB(in nsFileSpec dbName, in boolean create);
	void CloseMDB(in boolean commit);
	void OpenAnonymousDB(out nsIAddrDatabase pCardDB);
	void CloseAnonymousDB(in boolean forceCommit);

	void Commit(in unsigned long commitType);
	void ForceClosed();

	void CreateNewCardAndAddToDB(in nsIAbCard newCard, in boolean beNotify);
	void EnumerateCards(in nsIAbDirectory directory, out nsIEnumerator result);
	void EnumerateMailingLists(in nsIAbDirectory directory, out nsIEnumerator result);
	void DeleteCard(in nsIAbCard card, in boolean beNotify);
	void EditCard(in nsIAbCard card, in boolean beNotify);
	void ContainsCard(in nsIAbCard card, out boolean hasCard);

	void SetAnonymousStringAttribute(in string attrname, in string value);
	void GetAnonymousStringAttribute(in string attrname, out string value);
	void SetAnonymousIntAttribute(in string attrname, in unsigned long value);
	void GetAnonymousIntAttribute(in string attrname, out unsigned long value);
	void SetAnonymousBoolAttribute(in string attrname, in boolean value);
	void GetAnonymousBoolAttribute(in string attrname, out boolean value);
	void AddAnonymousAttributesToDB();
	void RemoveAnonymousAttributesFromDB();
	void AddAnonymousAttributesFromCard(in nsIAbCard card);
	void RemoveAnonymousAttributesFromCard(in nsIAbCard card);
};
