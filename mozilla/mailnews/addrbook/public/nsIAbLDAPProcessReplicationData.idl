/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is mozilla.org code.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are 
 * Copyright (C) 2001 Netscape Communications Corporation.  All
 * Rights Reserved.
 * 
 * Contributor(s): 
 * Rajiv Dayal <rdayal@netscape.com>
 *
 *  nsIAbLDAPProcessReplicationData.idl
 */

#include "nsISupports.idl"
#include "nsILDAPMessageListener.idl"

interface nsIAbLDAPReplicationQuery;
interface nsIWebProgressListener;

/**
 * this service does replication of an LDAP directory to a local Mork AB Database.
 */
[scriptable, uuid(00D568A2-3C3B-11d6-B7B9-00B0D06E5F27)]
interface nsIAbLDAPProcessReplicationData : nsILDAPMessageListener {
   
   /**
     * readonly attribute giving the current replication state
     */
    readonly attribute PRInt32 replicationState;

   /**
     * replication states
     */
    const long kQueryNotStarted       = 0;
    const long kAnonymousBinding      = 1;
    const long kAuthenticatedBinding  = 2;
    const long kSearchingAuthDN       = 3;
    const long kDecidingProtocol      = 4;
    const long kAuthenticating        = 5;
    const long kReplicatingAll        = 6;
    const long kSearchingRootDSE      = 7;
    const long kFindingChanges        = 8;
    const long kReplicatingChanges    = 9;
    const long kReplicationDone       = 10;

   /**
     * readonly attribute giving the current protocol used
     */
    readonly attribute PRInt32 protocolUsed ;

   /**
     * replication protocols
     */
    const long kDefaultDownloadAll         = 0;
    const long kChangeLogProtocol          = 1;
    const long kLCUPProtocol               = 2;
    const long kLastUpdatedTimeStampMethod = 3;

   /**
     * this method initializes the implementation
     */
    void init (in nsIAbLDAPReplicationQuery query, in nsIWebProgressListener progressListener);

   /**
     * this method a aborts the ongoing processing
     */
    void abort();
   
};

