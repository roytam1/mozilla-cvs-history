/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsISupports.idl"
#include "nsrootidl.idl"
#include "nsIStreamListener.idl"

interface nsIOutputStream;
interface nsIURI;

%{C++
// {588595CB-2012-11d3-8EF0-00A024A7D144}
#define NS_STREAM_CONVERTER_CID  \
    { 0x588595cb, 0x2012, 0x11d3,   \
    { 0x8e, 0xf0, 0x0, 0xa0, 0x24, 0xa7, 0xd1, 0x44 } }
%}

typedef long nsMimeOutputType;

[scriptable, uuid(7E1C52F7-3594-11d3-988E-001083010E9B)] 
interface nsMimeOutput
{ 
    const long nsMimeMessageSplitDisplay = 0;
    const long nsMimeMessageHeaderDisplay = 1;
    const long nsMimeMessageBodyDisplay = 2;
	  const long nsMimeMessageQuoting = 3;
	  const long nsMimeMessageRaw = 4;
	  const long nsMimeMessageDraft = 5;
	  const long nsMimeUnknown = 6;
}; 

[scriptable, uuid(C9CDF8E5-95FA-11d2-8807-00805F5A1FB8)]
interface nsIStreamConverter : nsIStreamListener {

    /* 
     * This is the output stream where the stream converter will write processed data after 
     * conversion. 
     */

	void SetOutputStream(in nsIOutputStream aOutStream, in nsIURI aURI, in nsMimeOutputType aType, 
						 out nsMimeOutputType aOutFormat, out string aOutputContentType);
    /*
     * The output listener can be set to allow for the flexibility of having the stream converter 
     * directly notify the listener of the output stream for any processed/converter data. If 
     * this output listener is not set, the data will be written into the output stream but it is 
     * the responsibility of the client of the stream converter to handle the resulting data. 
     */
    void SetOutputListener(in nsIStreamListener outListner); 

    /* 
     * This is needed by libmime for MHTML link processing...the url is the URL string associated
     * with this input stream
     */ 
    void SetStreamURI(in nsIURI aURI); 
};

