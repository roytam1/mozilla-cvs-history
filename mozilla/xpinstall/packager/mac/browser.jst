var err = initInstall("Mozilla Seamonkey", "Browser", "$Version$"); 
logComment("initInstall: " + err);

var fProgram = getFolder("Program");
logComment("fProgram: " + fProgram);

err = addDirectory("Program",
                   "$Version$",
                   "viewer",           // jar source folder
                   fProgram,           // target folder 
                   "",                 // target subdir 
                   true );             // force flag 

logComment("addDirectory() returned: " + err);

// create the plugins folder next to mozilla 
// var pluginsParentFolder = getFolder(communicatorFolder, subFolder);
// var pluginsFolder = getFolder(pluginsParentFolder, "Plugins");
// ignoreErr = dirCreate(pluginsFolder);
// logComment("dirCreate() returned: " + ignoreErr);

var ctype = (CONTENT | DELAYED_CHROME);
var cf = getFolder(fProgram,"chrome");
registerChrome(ctype, getFolder(cf,"packages/core"));
registerChrome(ctype, getFolder(cf,"packages/widget-toolkit"));
registerChrome(SKIN|DELAYED_CHROME, getFolder(cf,"skins/modern"));
registerChrome(SKIN|DELAYED_CHROME, getFolder(cf,"skins/classic"));
registerChrome(LOCALE|DELAYED_CHROME, getFolder(cf,"locales/en-US"));
err = getLastError();

// make an alias to the browser on the desktop 
var desktopFolder = getFolder("Mac Desktop");
var ignoreErr = fileMacAlias(fProgram,      "Mozilla",   // source
                             desktopFolder, "Mozilla");  // target
logComment("fileMacAlias() returned: " + ignoreErr);

if (err==SUCCESS)
{
	err = performInstall(); 
	logComment("performInstall() returned: " + err);
}
else
{
	cancelInstall(err);
	logComment("cancelInstall() due to error: " + err);
}
