var err = startInstall("Mozilla Seamonkey", "Browser", "$Version$"); 
logComment("startInstall: " + err);

var communicatorFolder = getFolder("Communicator");
logComment("communicatorFolder: " + communicatorFolder);

var subFolder = "Mozilla Folder";
err = addDirectory("Program",
                   "$Version$",
                   "viewer",           // jar source folder
                   communicatorFolder, // target folder
                   subFolder,          // target subdir 
                   true );             // force flag 

logComment("addDirectory() returned: " + err);

// create the plugins folder next to mozilla 
var pluginsParentFolder = getFolder(communicatorFolder, subFolder);
var pluginsFolder = getFolder(pluginsParentFolder, "Plugins");
var ignoreErr = dirCreate(pluginsFolder);
logComment("dirCreate() returned: " + ignoreErr);

// make an alias to the browser on the desktop 
var desktopFolder = getFolder("Mac Desktop");
var appFolder = getFolder("Communicator", subFolder);

// XXX  temporarily commenting out fileMacAlias() till API is fixed
// XXX  ignoreErr = fileMacAlias(appFolder,     "Mozilla",   // source
// XXX                           desktopFolder, "Mozilla");  // target
// XXX  logComment("fileMacAlias() returned: " + ignoreErr);

if (err==SUCCESS || err==REBOOT_NEEDED)
{
	err = finalizeInstall(); 
	logComment("finalizeInstall() returned: " + err);
}
else
{
	abortInstall();
	logComment("abortInstall() due to error: " + err);
}
