interface InstallFolder
{
/* IID: { 0x18c2f993, 0xb09f, 0x11d2, \
  {0xbc, 0xde, 0x00, 0x80, 0x5f, 0x0e, 0x13, 0x53}} */
    
    const int BadFolder                = 0;
    const int PluginFolder             = 1;
    const int ProgramFolder            = 2;
    const int PackageFolder            = 3;
    const int TemporaryFolder          = 4;
    const int CommunicatorFolder       = 5;
    const int InstalledFolder          = 6;
    const int CurrentUserFolder        = 7; 
    const int NetHelpFolder            = 8;
    const int OSDriveFolder            = 9;
    const int FileURLFolder            = 10;

    const int JavaBinFolder            = 11;
    const int JavaClassesFolder        = 12;
    const int JavaDownloadFolder       = 13;

    const int Win_WindowsFolder        = 14;
    const int Win_SystemFolder         = 15;
    const int Win_System16Folder       = 16;

    const int Mac_SystemFolder         = 17;
    const int Mac_DesktopFolder        = 18;
    const int Mac_TrashFolder          = 19;
    const int Mac_StartupFolder        = 20;
    const int Mac_ShutdownFolder       = 21;
    const int Mac_AppleMenuFolder      = 22;
    const int Mac_ControlPanelFolder   = 23;
    const int Mac_ExtensionFolder      = 24;
    const int Mac_FontsFolder          = 25;
    const int Mac_PreferencesFolder    = 26;

    const int Unix_LocalFolder         = 27;
    const int Unix_LibFolder           = 28;

    void InstallFolder();

    void init(in wstring folderID, in wstring vrPath, in wstring packageName);

    void GetDirectoryPath(out wstring directoryPath);

    void  MakeFullPath(in wstring relativePath, out wstring fullPath);

    boolean IsJavaCapable();

    void ToString(out wstring folderString);

};