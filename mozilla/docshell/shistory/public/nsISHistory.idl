/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): Radha Kulkarni (radha@netscape.com)
 */

/**
 * Interface to Session History
 *
 * @status FROZEN
 */
 
#include "nsISupports.idl"
#include "nsIFactory.idl"
#include "nsIHistoryEntry.idl"
#include "nsISHistoryListener.idl"

interface nsISimpleEnumerator;

%{C++
#define NS_SHISTORY_CID \
{0x7294fe9c, 0x14d8, 0x11d5, {0x98, 0x82, 0x00, 0xC0, 0x4f, 0xa0, 0x2f, 0x40}}

#define NS_SHISTORY_CONTRACTID "@mozilla.org/browser/shistory;1"
%}

[scriptable, uuid(7294FE9B-14D8-11D5-9882-00C04FA02F40)]
interface nsISHistory: nsISupports
{
  /**
   * Get the size of the History list
   */
   readonly attribute long count;

  /**
   * Get the index of the current document in the history list
   */
   readonly attribute long index;

  /**
   * Get/Set the Max entries Session History will hold per window
   */
   attribute long maxLength;

  /**
   * Get the entry at a given index
   */
   nsIHistoryEntry getEntryAtIndex(in long index, in boolean modifyIndex);


  /**
   * Purge the oldest numEntries from history list
   */
   void PurgeHistory(in long numEntries);

  /**
   * Register a Session History Listener to be notified on SHistory events
   */
   void addSHistoryListener(in nsISHistoryListener aListener);

  /**
   * Remove a previously registered Session History Listener 
   */
   void removeSHistoryListener(in nsISHistoryListener aListener);

  /**
   * Get a enumerator to access all the entries in SH
   */
   readonly attribute nsISimpleEnumerator SHistoryEnumerator;
};
