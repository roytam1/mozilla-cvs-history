/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is the Mozilla browser.
 * 
 * The Initial Developer of the Original Code is Netscape
 * Communications, Inc.  Portions created by Netscape are
 * Copyright (C) 1999, Mozilla.  All Rights Reserved.
 * 
 * Contributor(s):
 *   Travis Bogard <travis@netscape.com>
 *   Steve Clark <buster@netscape.com>
 */

#include "nsISupports.idl"

interface nsIDocShellTreeItem;

/*
 * nsIDocShellTreeNodeTmp is a temporary internal interface used only
 * to provide a changed signature for the findChildWithName() method to
 * fix problems where DOM windows were reachable across domains.
 */
[scriptable, uuid(3fa20a60-e37f-42be-a6df-1c8d910742f1)]
interface nsIDocShellTreeNodeTmp : nsISupports
{
  /*
    Return the child DocShellTreeItem with the specified name.
    aName - This is the name of the item that is trying to be found.
    aRecurse - Is used to tell the function to recurse through children.
        Note, recursion will only happen through items of the same type.
    aSameType - If this is set only children of the same type will be returned.
    aRequestor - This is the docshellTreeItem that is requesting the find.  This
        parameter is used when recursion is being used to avoid searching the same
        tree again when a child has asked a parent to search for children.
    aOriginalRequestor - The original treeitem that made the request, if any.
    This is used to ensure that we don't run into cross-site issues.

    Note the search is depth first when recursing.
  */
  nsIDocShellTreeItem findChildWithNameTmp(in wstring aName,
                                           in boolean aRecurse,
                                           in boolean aSameType,
                                           in nsIDocShellTreeItem aRequestor,
                                           in nsIDocShellTreeItem aOriginalRequestor);
};

