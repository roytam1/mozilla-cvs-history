/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Sun Microsystems, Inc.
 * Portions created by Sun Microsystems are Copyright (C) 2006 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * Original Author: Daniel Boelzle (daniel.boelzle@sun.com)
 *
 * Contributor(s):
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "calIWcapCalendar.idl"
#include "calIDateTime.idl"
#include "calIOperation.idl"

/**
 * WCAP session.
 */
[scriptable, uuid(477B4534-C297-40a1-ADF2-5A7E2A81816A)]
interface calIWcapSession : nsISupports
{
    /**
     * Setting this URI causes the session to logged out and disconnected.
     */
    attribute nsIURI uri;
    
    /**
     * User that has established this session.
     * @exception NS_ERROR_NOT_AVAILABLE if not logged in
     */
    readonly attribute string userId;
    
    /**
     * Determines whether the user is currentl logged in.
     * Does _not_ check whether the user's ticket has timed out!
     */
    readonly attribute boolean isLoggedIn;

    /**
     * Gets the default calendar instance of this session.
     */
    readonly attribute calIWcapCalendar defaultCalendar;
    
    /**
     * Specifies how to match the searchString.
     */
    const unsigned long SEARCH_STRING_CONTAINS = 0;
    const unsigned long SEARCH_STRING_BEGINS_WITH = 1;
    const unsigned long SEARCH_STRING_ENDS_WITH = 2;
    const unsigned long SEARCH_STRING_EXACT = 3;
    /**
     * Specifies what properties to include.
     */
    const unsigned long SEARCH_INCLUDE_CALID = 1 << 2;
    const unsigned long SEARCH_INCLUDE_NAME = 1 << 3;
    const unsigned long SEARCH_INCLUDE_OWNER = 1 << 4;
    
    /* xxx todo searching: separate into own interface? */
    /**
     * Searches for calendars matching the specified searchString.
     * Results are notified to the passed listener instance as
     * an array of calendar instances.
     *
     * @param searchString the search string to match
     * @param searchOptions the search options
     * @param maxResults maximum number of results
     *                   (0 means default, e.g. 200 with respect to Sun calendar servers)
     * @param listener listener called with an array of calIWcapCalendar objects
     * @return optional object to track operation
     */
    calIOperation searchForCalendars(in string searchString,
                                     in unsigned long searchOptions,
                                     in unsigned long maxResults,
                                     in calIGenericOperationListener listener);
    
    /* xxx todo freebusy: separate into own interface? */
    /**
     * Gets free-busy entries for calendar.
     * Results are notified to the passed listener instance.
     *
     * @param calId calid or rfc822addr
     * @param rangeStart start time of free-busy search
     * @param rangeEnd end time of free-busy search
     * @param bBusy whether to return busy entries or free entries
     * @param listener called with an array of calIPeriod objects
     * @return optional object to track operation
     */
    calIOperation getFreeBusyTimes(in string calId,
                                   in calIDateTime rangeStart,
                                   in calIDateTime rangeEnd,
                                   in boolean bBusy,
                                   in calIGenericOperationListener listener);
};

