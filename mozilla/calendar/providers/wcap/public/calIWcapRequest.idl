/* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Sun Microsystems code.
 *
 * The Initial Developer of the Original Code is
 * Sun Microsystems, Inc.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Daniel Boelzle <daniel.boelzle@sun.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIVariant.idl"

[scriptable, uuid(6586B48D-3FF6-4b82-B9F6-5B561D416E36)]
interface calIWcapRequest : nsISupports
{
    /**
     * For easy testing for equality.
     */
    readonly attribute unsigned long id;
    
    /**
     * Determines whether the request is pending, i.e. has not been completed.
     */
    readonly attribute boolean isPending;
    
    /**
     * Determines whether the request has succeeded, i.e. it has successfully
     * been completed.
     * XXX todo: remove this and favor
     * !request.isPending && Components.isSuccessCode(request.status) ?
     */
    readonly attribute boolean succeeded;
    
    /**
     * Status of the request, e.g. NS_OK while pending or after successful
     * completion, or NS_ERROR_FAILED when failed.
     */
    readonly attribute nsIVariant status;
    
    /**
     * Cancels a pending request and changes status.
     */
    void cancel(in nsIVariant status);
};

[scriptable, uuid(D0BC007F-D0B5-4352-A32A-8F7A9F55A713)]
interface calIWcapRequestResultListener : nsISupports
{
    /**
     * Callback receiving results.
     *
     * @param request object to track operation
     * @param result request result or null in case of an error
     */
    void onRequestResult(in calIWcapRequest request,
                         in nsIVariant result);
};

