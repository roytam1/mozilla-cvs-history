/* -*- Mode: idl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Oracle Corporation code.
 *
 * The Initial Developer of the Original Code is
 *  Oracle Corporation
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Vladimir Vukicevic <vladimir.vukicevic@oracle.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "calIItemBase.idl"

//
// calITodo
//
// An interface for a todo item (analogous to a VTODO)
//

[scriptable, uuid(522991f2-4928-4cd2-9a02-e3071c58cf1c)]
interface calITodo : calIItemBase
{
  const long CAL_TODO_STATUS_NEEDSACTION = 4;
  const long CAL_TODO_STATUS_COMPLETED = 5;
  const long CAL_TODO_STATUS_INPROCESS = 6;

  readonly attribute calIDateTime entryTime;
  readonly attribute calIDateTime dueDate;
  readonly attribute calIDateTime completedDate;
  readonly attribute short percentComplete;
};

//
// calIMutableTodo
//

[scriptable, uuid(d4e00ebe-e9cd-41ee-bd4f-8015071adb97)]
interface calIMutableTodo : calIItemBase
{
  readonly attribute calIMutableDateTime entryTime;
  readonly attribute calIMutableDateTime dueDate;
  readonly attribute calIMutableDateTime completedDate;
  attribute short percentComplete;
};
