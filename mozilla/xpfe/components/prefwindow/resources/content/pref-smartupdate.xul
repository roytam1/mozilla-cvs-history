<?xml version="1.0"?> 
<?xml-stylesheet href="chrome://communicator/skin/" type="text/css"?>

<!DOCTYPE window SYSTEM "chrome://communicator/locale/pref/pref-smartupdate.dtd" >
 
<page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      onload="parent.initPanel('chrome://communicator/content/pref/pref-smartupdate.xul'); initUpdateNotifications(); LoadUninstallableComponents();"
      headertitle="&lHeader;">
  
  <script type="application/x-javascript">
  <![CDATA[
    var _elementIDs = ["XPInstallEnabled", "updateNotificationsEnabled", 
                       "updateFrequency"];
    const XUL_NS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";

    function initUpdateNotifications()
    {
      var prefs = Components.classes["@mozilla.org/preferences-service;1"].
        getService(Components.interfaces.nsIPrefBranch);
      if (!prefs.getBoolPref("update_notifications.enabled"))
      {
        // disable frequency radiogroup
        var freqWeekly = document.getElementById("freqWeekly");
        var freqMonthly = document.getElementById("freqMonthly");
        freqWeekly.setAttribute("disabled", "true");
        freqMonthly.setAttribute("disabled", "true");
      }
    }

    function toggleFrequency()
    {
      var enabled = document.getElementById("updateNotificationsEnabled");
      var freqWeekly = document.getElementById("freqWeekly");
      var freqMonthly = document.getElementById("freqMonthly");
      if (enabled.getAttribute("checked") == "true")
      {
        // enable frequency radiogroup
        freqWeekly.removeAttribute("disabled");
        freqMonthly.removeAttribute("disabled");
      }
      else
      {
        // disable frequency radiogroup
        freqWeekly.setAttribute("disabled", "true");
        freqMonthly.setAttribute("disabled", "true");
      }
    }

    function UpdateRemoveButton()
    {
      dump( "entered UpdateRemoveButton\n" );
      
      var list = document.getElementById ( "UninstallComponents" );
      var button = document.getElementById("RemoveButton");
      if ( list.selectedCount > 0 )
        button.setAttribute("disabled", "false");
      else
        button.setAttribute("disabled", "true");
    }

    function LoadUninstallableComponents()
    {
      var aSoftwareUninstall = Components.classes["@mozilla.org/xpinstall/software-uninstall;1"]
                               .getService();
      aSoftwareUninstall.QueryInterface(Components.interfaces.nsISoftwareUninstall);  

      var packageEnum;
      packageEnum = aSoftwareUninstall.getInstalledPackages();
      packageEnum = packageEnum.QueryInterface(Components.interfaces.nsISimpleEnumerator);

      var packageInfo;
      var regName;
      var prettyName;

      while (packageEnum.hasMoreElements())
      {
        packageInfo = packageEnum.getNext();
        if (packageInfo) 
        {
          packageInfo = packageInfo.QueryInterface(Components.interfaces.nsIXPIPackageInfo);
          prettyName = packageInfo.prettyName;
          regName = packageInfo.regName;
          AddComponent( regName, prettyName );
        }
      }
    }

    function AddComponent( regName, prettyName )
    {
      var listitem = document.createElementNS ( XUL_NS, "listitem" );
      listitem.setAttribute( "id", regName );
      listitem.setAttribute( "pretty", prettyName);

      var attrCell = document.createElementNS ( XUL_NS, "listcell" );
      attrCell.setAttribute( "label", prettyName );

      var valueCell = document.createElementNS ( XUL_NS, "listcell" );
      valueCell.setAttribute( "label", regName); // should be version?  
                                                 // how do we store the regName for passing on later.

      listitem.appendChild ( attrCell );
      listitem.appendChild ( valueCell );
      var list = document.getElementById ( "UninstallComponents" );
      list.appendChild ( listitem );
    }

    function BackendRemove( regName, prettyName )
    {
      var aSoftwareUninstall = Components.classes["@mozilla.org/xpinstall/software-uninstall;1"]
                               .getService();
      aSoftwareUninstall.QueryInterface(Components.interfaces.nsISoftwareUninstall);  

      var result = true;
      result = aSoftwareUninstall.removePackage(regName, prettyName);
      return ( result );
    }

    function RemoveComponents()
    {
      dump( "entered RemoveComponent\n" );

      var list = document.getElementById( "UninstallComponents" );
      var selectedItems = list.selectedItems;
      var val;
      var ret;
      var regName;
      var prettyName;

      for ( var i = 0; i < selectedItems.length; i++ ) {
        var fc = selectedItems[i].firstChild;
        prettyName = fc.getAttribute( "label" );

        var next = fc.nextSibling;
        if (next)
        {
            regName = next.getAttribute( "label" );
        }
        dump( "item " + prettyName + " " + regName + " was selected\n" );

        // try and delete component here

        ret = BackendRemove( regName, prettyName ); 

        // if successful, remove from the list

        if ( ret == true ) {
          list.removeChild( selectedItems[i] );
        }
        else
          alert( "Unable to remove item " + val );
      }
    }
  ]]>
  </script>
   
  <groupbox align="start">
    <caption label="&smartTitle.label;"/>
    <checkbox id="XPInstallEnabled" label="&enableSU.label;" accesskey="&enableSU.accesskey;"
              prefstring="xpinstall.enabled"/>
  </groupbox>

  <groupbox align="start">
    <caption label="&updateNotifications.label;"/>
    <description>&updateNotifications.desc;</description>
    <checkbox id="updateNotificationsEnabled" label="&enableUN.label;"
              accesskey="&enableUN.accesskey;" oncommand="toggleFrequency();"
              prefstring="update_notifications.enabled"/>
    <radiogroup id="updateFrequency" orient="horizontal" 
                prefstring="update_notifications.provider.0.frequency"
                prefdefval="7">
      <radio id="freqWeekly" label="&weekly.label;" 
             accesskey="&weekly.accesskey;" value="7"/>
      <radio id="freqMonthly" label="&monthly.label;" 
             accesskey="&monthly.accesskey;" value="30"/>
    </radiogroup>
  </groupbox>

  <groupbox flex="1">
    <caption label="Uninstall"/>
    <hbox flex="1">
      <listbox seltype="multiple" id="UninstallComponents" onselect="UpdateRemoveButton();" flex="1">
        <listcols>
          <listcol flex="1"/>
          <listcol flex="2"/>
        </listcols>
      </listbox>
    </hbox>
    <hbox>
      <button id="RemoveButton" label="Remove" oncommand="RemoveComponents();" disabled="true"/>
    </hbox>
  </groupbox>

<!--
  <groupbox align="start">
    <caption label="Installed Packages"/>
  
    <script>
    <![CDATA[
      function InstallPackage()
      {
        var chromeRegistry = Components.classes["@mozilla.org/chrome/chrome-registry;1"].getService();
        if ( chromeRegistry )
          chromeRegistry = chromeRegistry.QueryInterface( Components.interfaces.nsIChromeRegistry );
        var packageURI = prompt('give the resource uri of the package to install','');
        if (packageURI)
          chromeRegistry.installPackage(packageURI, false);
      }
    ]]>
    </script>
    <button label="Install Package" oncommand="InstallPackage();"/>
  </groupbox>
-->

<!--
  <html:fieldset style="width: 100%; height: 100%">
    <html:div class="hspace-both">&selectUninstall.label;</html:div>
    <hbox class="hspace-both vspace" flex="100%" style="width: 93%; height: 100%">
      <tree id="smartUpdatePackages" flex="100%" style="height: 40%;">
        <treecols>
          <treecol flex="1"/>
        </treecols>
        <treechildren flex="1">
          <treeitem>
            <treerow>
              <treeitem/>
            </treerow>
          </treeitem>
        </treechildren>
      </tree>
      <spacer flex="5%"/>
      <vbox>
        <button class="push" id="pref:0:bool:smartupdate" label="&uninstallButton.label;" accesskey="&uninstallButton.accesskey;"/>
        <spacer flex="100%"/>
      </vbox>
    </hbox>
    <spacer style="height: 28px;"/>
  </html:fieldset>
-->
</page>

