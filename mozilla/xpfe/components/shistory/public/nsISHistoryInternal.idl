/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): Radha Kulkarni (radha@netscape.com)
 */
 
#include "nsISupports.idl"
#include "nsIFactory.idl"
#include "nsISHEntry.idl"
#include "nsISHTransaction.idl"
#include "nsIDocShell.idl"


%{C++
#define NS_SHISTORY_INTERNAL_CID \
{0xdd335422, 0xb8b8, 0x11d3, {0xbd, 0xc8, 0x00, 0x50, 0x04, 0x0a, 0x9b, 0x44}}

#define NS_SHISTORY_INTERNAL_CONTRACTID "@mozilla.org/browser/shistory-internal;1"
%}

[scriptable, uuid(DD335421-B8B8-11d3-BDC8-0050040A9B44)]
interface nsISHistoryInternal: nsISupports
{
  /**
   * Add a new Entry to the History List
   * @param aEntry - The entry to add
   * @param aPersist - If true this specifies that the entry should persist
   * in the list.  If false, this means that when new entries are added
   * this element will not appear in the session history list.
   */
   void  addEntry(in nsISHEntry aEntry, in boolean aPersist);

  /**
   * Get the root transaction
   */
   readonly attribute nsISHTransaction rootTransaction;

  /**
   * The toplevel docshell object to which this SHistory object belongs to.
   */
   attribute nsIDocShell rootDocShell;

    /**
     * Replace the nsISHEntry at a particular index
     * @param aIndex - The index at which the entry shoud be replaced
     * @param aReplaceEntry - The replacement entry for the index.
     */
     void replaceEntry(in long aIndex, in nsISHEntry aReplaceEntry);

};
