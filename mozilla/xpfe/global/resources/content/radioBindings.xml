<?xml version="1.0"?>

<bindings id="xulBindings"
   xmlns="http://www.mozilla.org/xbl"
   xmlns:html="http://www.w3.org/1999/xhtml"
   xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 
  <binding id="radio" extends="chrome://global/content/xulBindings.xml#checkbox">
    <implementation>
      <property name="data" onset="this.setAttribute('data',val); return val;"
                            onget="return this.getAttribute('data');"/>
      <property name="group" onset="this.setAttribute('group',val); return val;"
                            onget="return this.getAttribute('group');"/>
    </implementation>
  </binding>
  
  <binding id="radiogroup" extends="xul:box">

    <implementation>
      <property name="data" onset="this.setAttribute('data',val); return val;"
                            onget="return this.getAttribute('data');"/>
      <property name="selectedItem">
        <getter>
        <![CDATA[
          var groupElements = this.getElementsByAttribute( "group", this.id );
          for( var i = 0; i < groupElements.length; i++ )
            {
              if( groupElements[i].checked || 
                  groupElements[i].getAttribute( "checked" ) == "true" )
                return groupElements[i];
            }
        ]]>
        </getter>
        <setter>
        <![CDATA[
          var aDOMElement = val;
          this.data = aDOMElement.data;

          aDOMElement.checked = true;
          
          // uncheck all other group nodes
          var groupElements = this.getElementsByAttribute( "group", aDOMElement.group );
          for( var i = 0; i < groupElements.length; i++ )
            {
              if( groupElements[i] != aDOMElement && groupElements[i].checked )
                {
                  groupElements[i].checked = false;
                  groupElements[i].removeAttribute( "checked" );
                }
            }
          return val;
        ]]>
        </setter>        
      </property>
    </implementation>
    <handlers>
      <handler event="click">
       <![CDATA[
        try
          {
            if (!event.target.disabled && 
                event.target.localName == "radio" &&
                event.button == 1)
              this.selectedItem = event.target;
          }
        catch(e)
          {
          }
       ]]>
      </handler>
      <handler event="keypress" key=" ">
       <![CDATA[
        try
          {
            if (!event.target.disabled && event.target.localName == "radio")
              this.selectedItem = event.target;
          }
        catch(e)
          {
          }
       ]]>
      </handler>     
    </handlers>
  </binding>

</bindings>
