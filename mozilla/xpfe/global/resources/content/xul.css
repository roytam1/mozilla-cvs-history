 /** this should only contain XUL dialog and document window widget defaults. Defaults for widgets of
    a particular application should be in that application's style sheet.
	For example style definitions for navigator can be found in navigator.css

   THIS FILE IS LOCKED DOWN.  YOU ARE NOT ALLOWED TO MODIFY IT WITHOUT FIRST HAVING YOUR
   CHANGES REVIEWED BY hyatt@netscape.com.
**/

/*@import url(chrome://global/content/content.css);*/

@namespace url(http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul); /* set default namespace to XUL */
@namespace html url("http://www.w3.org/1999/xhtml"); /* namespace for HTML elements */
@namespace xbl url("http://www.mozilla.org/xbl"); /* namespace for XBL elements */

* {
  display: block;
  user-select: none;
}

*[collapsed="true"] {
  visibility: collapse;
}

*[hidden="true"] {
  display: none;
}

checkbox,radio,tree,menulist {
  user-focus: normal;
}

  
menupopup, splitter {
  user-focus: ignore;
}

treechildren, treehead, treerows {
  user-focus: none;
}

/** 
 * All elements that have no visual representation
 */
commands, commandset, command {
	display: none;
}

xbl|children {
  display: none;
}

broadcasterset, broadcaster {
	display: none;
}

observes {
	display: none;
}

template {
	display: none;
}

data {
  display: none;
}

keyset, key {
  display: none;
}

/**********************************
 * Window
 **********************************/

window { 
  overflow: hidden;
}

/**********************************
 * XUL widgets
 **********************************/

/******** Browser, editor, iframe ********/

browser, editor, iframe {
  display: inline;
}

browser {
  behavior: url(chrome://global/content/xulBindings.xml#browser);
}

editor {
  behavior: url(chrome://global/content/xulBindings.xml#editor);
}

iframe {
  behavior: url(chrome://global/content/xulBindings.xml#iframe);
}

/******** Box *******/

hbox {
  behavior: url(chrome://global/content/xulBindings.xml#hbox);
}

vbox {
  behavior: url(chrome://global/content/xulBindings.xml#vbox);
}

/******** TitledBox *******/

box.titledbox-title {
}

box.titledbox-body {
   vertical-align: inherit;
   text-align: inherit;
}

titledbox {
  behavior: url(chrome://global/content/xulBindings.xml#titledbox);
}

titledbox[value] {
  behavior: url(chrome://global/content/xulBindings.xml#titledboxvalue);
}

title {
  behavior: url(chrome://global/content/xulBindings.xml#title);
}

/******* ToolBox & ToolBar *******/

toolbox { 
  user-focus: ignore;
  behavior: url(chrome://global/content/xulBindings.xml#toolbox);
}

toolbar, menubar {
  user-focus: ignore;
}

toolbar,menubar {
  behavior: url(chrome://global/content/xulBindings.xml#toolbar);
}

toolbargrippy {
  behavior: url(chrome://global/content/xulBindings.xml#toolbargrippy);
}

toolbar[collapsed="true"] {
  visibility: visible;
}

box.toolbar-holder[collapsed="true"] {
  visibility: collapse;
}

/********* XP Menus ***********/

menubar > menu 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menu-menubar");
  }

menubar > menu.menu-iconic 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menu-menubar-iconic");
  }

menu 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menu");
  }
  
menu.menu-iconic 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menu-iconic");
  }

menuitem 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menuitem");
  }

menuitem.menuitem-iconic 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menuitem-iconic");
  }

menuitem[type="checkbox"],
menuitem[type="radio"] 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menuitem-iconic");
  }

menulist > menupopup > menuitem 
  {
    behavior              : url("chrome://global/content/xulBindings.xml#menuitem-iconic");
  }

menuitem.menuitem-non-iconic
  {
    behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-item");
  }

  
menupopup 
  {
    behavior: url("chrome://global/content/xulBindings.xml#popups");
    display               : none;
  }

popup {
  behavior: url("chrome://global/content/xulBindings.xml#popups");
  display: none;
}

menupopup[menugenerated="true"] {
  display: block;
}

popup[menugenerated="true"] {
  display: block;
}

menupopup, popup {
  z-index: 2147483647; 
}

/******** Titled buttons **********/

/******** Tree widget **********/

tree {
 width: 200px;
 height: 200px;
 min-width: 0px;
 min-height: 0px;
 behavior: url("chrome://global/content/treeBindings.xml#tree");
}

tree > treechildren {
 behavior: url("chrome://global/content/treeBindings.xml#treerows");
 overflow: auto;
 min-height: 0px;
}

treeitem { 
 behavior: url("chrome://global/content/treeBindings.xml#treeitem");
} 


treecell { 
 vertical-align: middle;
 behavior: url("chrome://global/content/treeBindings.xml#treecell");
} 

.treecell-indent {
  behavior: url("chrome://global/content/treeBindings.xml#treecell-indented-leaf");
}

treeitem[container="true"] > treerow > .treecell-indent {
  behavior: url("chrome://global/content/treeBindings.xml#treecell-indented-folder");
}

.treecell-iconic {
 behavior: url("chrome://global/content/treeBindings.xml#treecell-iconic");
}
  
.treecell-image {
 behavior: url("chrome://global/content/treeBindings.xml#treecell-image");
}

.treecell-header {
  behavior: url("chrome://global/content/treeBindings.xml#treecell-header");
}

.treecell-align-right {
  behavior: url("chrome://global/content/treeBindings.xml#treecell-align-right");
}

treeitem > treechildren {
  display: none;
}

treeitem[open="true"] > treechildren {
  display: block;
}

treecol[hidden="true"] {
  display: block;
  visibility: collapse;
}

treecell[hidden="true"] {
  display: block;
  visibility: collapse;
}

/********** Tab widget *********/

tab {
  behavior: url(chrome://global/content/xulBindings.xml#tab);
}

:-moz-deck-hidden {
   visibility: hidden;
}

/********** checkbox **********/

checkbox {
  behavior: url(chrome://global/content/xulBindings.xml#checkbox);
}

radio 
  {
    behavior              : url(chrome://global/content/radioBindings.xml#radio);
  }

radiogroup 
  {
    behavior              : url(chrome://global/content/radioBindings.xml#radiogroup);
  }

button, button.left {
  /*user-focus: normal;*/
  behavior: url(chrome://global/content/xulBindings.xml#buttonleft);
}

button.top {
  behavior: url(chrome://global/content/xulBindings.xml#buttontop);
}

button.right {
  behavior: url(chrome://global/content/xulBindings.xml#buttonright);
}

button.bottom {
  behavior: url(chrome://global/content/xulBindings.xml#buttonbottom);
}

menuseparator, separator {
  behavior: url(chrome://global/content/xulBindings.xml#separator);
}


/* appending to end so we don't make hyatt cry */
progressmeter {
  behavior: url(chrome://global/content/xulBindings.xml#progressmeter);
}

textfield {
  behavior: url(chrome://global/content/xulBindings.xml#textfield);
}

textfield[multiline="true"] {
  behavior: url(chrome://global/content/xulBindings.xml#textarea);
}

text {
  behavior: url(chrome://global/content/xulBindings.xml#text);
}

text[editable="true"], text[editable="true"][mode="display"] {
  behavior: url(chrome://global/content/xulBindings.xml#text-editable-display);
}

text[editable="true"][mode="edit"] {
  behavior: url(chrome://global/content/xulBindings.xml#text-editable-edit);
}

textfield[autocomplete="true"] {
  behavior: url(chrome://global/content/autocomplete.xml#autocomplete);
}

colorpicker {
  behavior: url(chrome://global/content/xulBindings.xml#colorpicker);
}

/** Buttons with Menus:
 *  - menulist
 *  - menulist[editable="true"] (combobox)
 *  - menubutton
 **/

  menulist 
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menulist");
    }
  
  menulist[editable="true"] 
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menulist-editable");
    }
  
  menubutton
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-single-left");
    }

  menubutton.right
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-single-right");
    }
    
  menubutton.menubutton-dual.left
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-dual-left");
    }
      
  menubutton.menubutton-dual.top
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-dual-top");
    }
      
  menubutton.menubutton-dual.right
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-dual-right");
    }
      
  menubutton.menubutton-dual.bottom
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-dual-bottom");
    }
      
  menubutton.menubutton-icon 
    {
      behavior              : url("chrome://global/content/menulistBindings.xml#menubutton-icon");
    } 
    
/** 
 * Scrollbar <content> styles
 **/    
 
slider 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton 
  {
    display               : inline;
    user-focus            : ignore;
    user-select           : none;
  }

scrollbar[value="hidden"] 
  {
    visibility            : hidden;
    user-focus            : ignore;
    user-select           : none;
  }

thumb 
  {
    user-focus            : ignore;
    user-select           : none;
  }

thumb[disabled="true"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton:active 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton[type="decrement"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton[type="decrement"][disabled="true"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton[type="increment"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbarbutton[type="increment"][disabled="true"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbar[align="vertical"] scrollbarbutton[type="decrement"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbar[align="vertical"] scrollbarbutton[type="decrement"][disabled="true"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbar[align="vertical"] scrollbarbutton[type="increment"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

scrollbar[align="vertical"] scrollbarbutton[type="increment"][disabled="true"] 
  {
    user-focus            : ignore;
    user-select           : none;
  }

slider[align="vertical"] thumb:active 
  {
    user-focus            : ignore;
    user-select           : none;
  }

slider 
  {
    user-focus            : ignore;
    user-select           : none;
  }

/**
 * Status Bar 
 **/  
statusbar 
  { 
    user-focus            : ignore;
    behavior              : url("chrome://global/content/xulBindings.xml#statusbar");
  }

statusbarpanel
  {
    user-focus            : ignore;
    behavior              : url("chrome://global/content/xulBindings.xml#statusbar-panel");
  }