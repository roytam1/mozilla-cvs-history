#ifndef ClassFileConstants_h
#define ClassFileConstants_h
/*
 * ClassFileConstants
 */

namespace esc {
namespace v1 {

struct ClassFileConstants {

    enum { 
		debug = false 
	};

    /*
     * Tags
     */

    enum {
	    CONSTANT_Utf8        = 0x01,
		CONSTANT_Class       = 0x07,
		CONSTANT_Fieldref   = 0x09,
		CONSTANT_Methodref   = 0x0a,
		CONSTANT_NameAndType = 0x0c,
	};

    /*
     * Class access and property modifiers
     */

    enum {
		ACC_PUBLIC    = 0x0001,
		ACC_STATIC    = 0x0008,
		ACC_FINAL     = 0x0010,
		ACC_SUPER     = 0x0020,
		ACC_INTERFACE = 0x0200,
		ACC_ABSTRACT  = 0x0400,
	};

    /*
     * Opcodes
     */


    enum {
		OP_nop             = (char) 0x00,
		OP_aconst_null     = (char) 0x01,
		OP_iconst_m1       = (char) 0x02,
		OP_iconst_0        = (char) 0x03,
		OP_iconst_1        = (char) 0x04,
		OP_iconst_2        = (char) 0x05,
		OP_iconst_3        = (char) 0x06,
		OP_iconst_4        = (char) 0x07,
		OP_iconst_5        = (char) 0x08,
		OP_lconst_0        = (char) 0x09,
		OP_lconst_1        = (char) 0x0a,
		OP_fconst_0        = (char) 0x0b,
		OP_fconst_1        = (char) 0x0c,
		OP_fconst_2        = (char) 0x0d,
		OP_dconst_0        = (char) 0x0e,
		OP_dconst_1        = (char) 0x0f,
		OP_bipush          = (char) 0x10,
		OP_sipush          = (char) 0x11,
		OP_ldc             = (char) 0x12,
		OP_ldc_w           = (char) 0x13,
		OP_ldc2_w          = (char) 0x14,
		OP_iload           = (char) 0x15,
		OP_lload           = (char) 0x16,
		OP_fload           = (char) 0x17,
		OP_dload           = (char) 0x18,
		OP_aload           = (char) 0x19,
		OP_iload_0         = (char) 0x1a,
		OP_iload_1         = (char) 0x1b,
		OP_iload_2         = (char) 0x1c,
		OP_iload_3         = (char) 0x1d,
		OP_lload_0         = (char) 0x1e,
		OP_lload_1         = (char) 0x1f,
		OP_lload_2         = (char) 0x20,
		OP_lload_3         = (char) 0x21,
		OP_fload_0         = (char) 0x22,
		OP_fload_1         = (char) 0x23,
		OP_fload_2         = (char) 0x24,
		OP_fload_3         = (char) 0x25,
		OP_dload_0         = (char) 0x26,
		OP_dload_1         = (char) 0x27,
		OP_dload_2         = (char) 0x28,
		OP_dload_3         = (char) 0x29,
		OP_aload_0         = (char) 0x2a,
		OP_aload_1         = (char) 0x2b,
		OP_aload_2         = (char) 0x2c,
		OP_aload_3         = (char) 0x2d,
		OP_iaload          = (char) 0x2e,
		OP_laload          = (char) 0x2f,
		OP_faload          = (char) 0x30,
		OP_daload          = (char) 0x31,
		OP_aaload          = (char) 0x32,
		OP_baload          = (char) 0x33,
		OP_caload          = (char) 0x34,
		OP_saload          = (char) 0x35,
		OP_istore          = (char) 0x36,
		OP_lstore          = (char) 0x37,
		OP_fstore          = (char) 0x38,
		OP_dstore          = (char) 0x39,
		OP_astore          = (char) 0x3a,
		OP_istore_0        = (char) 0x3b,
		OP_istore_1        = (char) 0x3c,
		OP_istore_2        = (char) 0x3d,
		OP_istore_3        = (char) 0x3e,
		OP_lstore_0        = (char) 0x3f,
		OP_lstore_1        = (char) 0x40,
		OP_lstore_2        = (char) 0x41,
		OP_lstore_3        = (char) 0x42,
		OP_fstore_0        = (char) 0x43,
		OP_fstore_1        = (char) 0x44,
		OP_fstore_2        = (char) 0x45,
		OP_fstore_3        = (char) 0x46,
		OP_dstore_0        = (char) 0x47,
		OP_dstore_1        = (char) 0x48,
		OP_dstore_2        = (char) 0x49,
		OP_dstore_3        = (char) 0x4a,
		OP_astore_0        = (char) 0x4b,
		OP_astore_1        = (char) 0x4c,
		OP_astore_2        = (char) 0x4d,
		OP_astore_3        = (char) 0x4e,
		OP_iastore         = (char) 0x4f,
		OP_lastore         = (char) 0x50,
		OP_fastore         = (char) 0x51,
		OP_dastore         = (char) 0x52,
		OP_aastore         = (char) 0x53,
		OP_bastore         = (char) 0x54,
		OP_castore         = (char) 0x55,
		OP_sastore         = (char) 0x56,
		OP_pop             = (char) 0x57,
		OP_pop2            = (char) 0x58,
		OP_dup             = (char) 0x59,
		OP_dup_x1          = (char) 0x5a,
		OP_dup_x2          = (char) 0x5b,
		OP_dup2            = (char) 0x5c,
		OP_dup2_x1         = (char) 0x5d,
		OP_dup2_x2         = (char) 0x5e,
		OP_swap            = (char) 0x5f,
		OP_iadd            = (char) 0x60,
		OP_ladd            = (char) 0x61,
		OP_fadd            = (char) 0x62,
		OP_dadd            = (char) 0x63,
		OP_isub            = (char) 0x64,
		OP_lsub            = (char) 0x65,
		OP_fsub            = (char) 0x66,
		OP_dsub            = (char) 0x67,
		OP_imul            = (char) 0x68,
		OP_lmul            = (char) 0x69,
		OP_fmul            = (char) 0x6a,
		OP_dmul            = (char) 0x6b,
		OP_idiv            = (char) 0x6c,
		OP_ldiv            = (char) 0x6d,
		OP_fdiv            = (char) 0x6e,
		OP_ddiv            = (char) 0x6f,
		OP_irem            = (char) 0x70,
		OP_lrem            = (char) 0x71,
		OP_frem            = (char) 0x72,
		OP_drem            = (char) 0x73,
		OP_ineg            = (char) 0x74,
		OP_lneg            = (char) 0x75,
		OP_fneg            = (char) 0x76,
		OP_dneg            = (char) 0x77,
		OP_ishl            = (char) 0x78,
		OP_lshl            = (char) 0x79,
		OP_ishr            = (char) 0x7a,
		OP_lshr            = (char) 0x7b,
		OP_iushr           = (char) 0x7c,
		OP_lushr           = (char) 0x7d,
		OP_iand            = (char) 0x7e,
		OP_land            = (char) 0x7f,
		OP_ior             = (char) 0x80,
		OP_lor             = (char) 0x81,
		OP_ixor            = (char) 0x82,
		OP_lxor            = (char) 0x83,
		OP_iinc            = (char) 0x84,
		OP_i2l             = (char) 0x85,
		OP_i2f             = (char) 0x86,
		OP_i2d             = (char) 0x87,
		OP_l2i             = (char) 0x88,
		OP_l2f             = (char) 0x89,
		OP_l2d             = (char) 0x8a,
		OP_f2i             = (char) 0x8b,
		OP_f2l             = (char) 0x8c,
		OP_f2d             = (char) 0x8d,
		OP_d2i             = (char) 0x8e,
		OP_d2l             = (char) 0x8f,
		OP_d2f             = (char) 0x90,
		OP_i2b             = (char) 0x91,
		OP_i2c             = (char) 0x92,
		OP_i2s             = (char) 0x93,
		OP_lcmp            = (char) 0x94,
		OP_fcmpl           = (char) 0x95,
		OP_fcmpg           = (char) 0x96,
		OP_dcmpl           = (char) 0x97,
		OP_dcmpg           = (char) 0x98,
		OP_ifeq            = (char) 0x99,
		OP_ifne            = (char) 0x9a,
		OP_iflt            = (char) 0x9b,
		OP_ifge            = (char) 0x9c,
		OP_ifgt            = (char) 0x9d,
		OP_ifle            = (char) 0x9e,
		OP_if_icmpeq       = (char) 0x9f,
		OP_if_icmpne       = (char) 0xa0,
		OP_if_icmplt       = (char) 0xa1,
		OP_if_icmpge       = (char) 0xa3,
		OP_if_icmple       = (char) 0xa4,
		OP_if_acmpeq       = (char) 0xa5,
		OP_if_acmpne       = (char) 0xa6,
		OP_goto            = (char) 0xa7,
		OP_jsr             = (char) 0xa8,
		OP_ret             = (char) 0xa9,
		OP_tableswitch     = (char) 0xaa,
		OP_lookupswitch    = (char) 0xab,
		OP_ireturn         = (char) 0xac,
		OP_lreturn         = (char) 0xad,
		OP_freturn         = (char) 0xae,
		OP_dreturn         = (char) 0xaf,
		OP_areturn         = (char) 0xb0,
		OP_return          = (char) 0xb1,
		OP_getstatic       = (char) 0xb2,
		OP_putstatic       = (char) 0xb3,
		OP_getfield        = (char) 0xb4,
		OP_putfield        = (char) 0xb5,
		OP_invokevirtual   = (char) 0xb6,
		OP_invokespecial   = (char) 0xb7,
		OP_invokestatic    = (char) 0xb8,
		OP_invokeinterface = (char) 0xb9,
		OP_xxxunusedxxx    = (char) 0xba,
		OP_new             = (char) 0xbb,
		OP_newarray        = (char) 0xbc,
		OP_anewarray       = (char) 0xbd,
		OP_arraylength     = (char) 0xbe,
		OP_athrow          = (char) 0xbf,
		OP_checkcast       = (char) 0xc0,
		OP_instanceof      = (char) 0xc1,
		OP_monitorenter    = (char) 0xc2,
		OP_monitorexit     = (char) 0xc3,
		OP_wide            = (char) 0xc4,
		OP_multianewarray  = (char) 0xc5,
		OP_ifnull          = (char) 0xc6,
		OP_ifnonnull       = (char) 0xc7,
		OP_goto_w          = (char) 0xc8,
		OP_jsr_w           = (char) 0xc9,
		OP_breakpoint      = (char) 0xca,
		OP_impdep1         = (char) 0xfe,
		OP_impdep2         = (char) 0xff,
	};
};
}
}

#endif // ClassFileConstants_h

/*
 * Copyright (c) 1998-2001 by Mountain View Compiler Company
 * All rights reserved.
 */
