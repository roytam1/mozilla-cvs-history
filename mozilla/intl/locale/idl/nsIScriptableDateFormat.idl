/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

typedef long nsDateFormatSelector;
%{ C++
enum
{
    kDateFormatNone = 0,            // do not include the date  in the format string
    kDateFormatLong,                // provides the long date format for the given locale
    kDateFormatShort,               // provides the short date format for the given locale
    kDateFormatYearMonth,           // formats using only the year and month 
    kDateFormatWeekday              // week day (e.g. Mon, Tue)
};
%}

typedef long nsTimeFormatSelector;
%{ C++
enum
{
    kTimeFormatNone = 0,            // don't include the time in the format string
    kTimeFormatSeconds,             // provides the time format with seconds in the  given locale 
    kTimeFormatNoSeconds,           // provides the time format without seconds in the given locale 
    kTimeFormatSecondsForce24Hour,  // forces the time format to use the 24 clock, regardless of the locale conventions
    kTimeFormatNoSecondsForce24Hour // forces the time format to use the 24 clock, regardless of the locale conventions
};
%}

%{C++
// Define Progid and CID
// {2EA2E7D0-4095-11d3-9144-006008A6EDF6}
#define NS_SCRIPTABLEDATEFORMAT_CID \
{ 0x2ea2e7d0, 0x4095, 0x11d3, { 0x91, 0x44, 0x0, 0x60, 0x8, 0xa6, 0xed, 0xf6 } }

#define NS_SCRIPTABLEDATEFORMAT_PROGID "component://netscape/intl/scriptabledateformat"

extern nsISupports *NEW_SCRIPTABLE_DATEFORMAT(void);
%}

[scriptable, uuid(0c89efb0-1aae-11d3-9141-006008a6edf6)]
interface nsIScriptableDateFormat : nsISupports {

    const long dateFormatNone = 0;                 // do not include the date  in the format string
    const long dateFormatLong =1;                  // provides the long date format for the given locale
    const long dateFormatShort =2;                 // provides the short date format for the given locale
    const long dateFormatYearMonth =3;             // formats using only the year and month 
    const long dateFormatWeekday = 4;              // week day (e.g. Mon, Tue)

    const long timeFormatNone = 0;                 // don't include the time in the format string
    const long timeFormatSeconds = 1;              // provides the time format with seconds in the  given locale 
    const long timeFormatNoSeconds = 2;            // provides the time format without seconds in the given locale
    const long timeFormatSecondsForce24Hour = 3;   // forces the time format to use the 24 clock, regardless of the locale conventions
    const long timeFormatNoSecondsForce24Hour = 4; // forces the time format to use the 24 clock, regardless of the locale conventions

    // format date and time, locale is language country pair (e.g. en-US) or empty string for application default
    wstring FormatDateTime(in wstring locale, 
                           in long dateFormatSelector, 
                           in long timeFormatSelector,
                           in long year, 
                           in long month, 
                           in long day, 
                           in long hour, 
                           in long minute, 
                           in long second);
    // format date, locale is language country pair (e.g. en-US) or empty string for application default
    wstring FormatDate(in wstring locale, 
                       in long dateFormatSelector, 
                       in long year, 
                       in long month, 
                       in long day);
    // format time, locale is language country pair (e.g. en-US) or empty string for application default
    wstring FormatTime(in wstring locale, 
                       in long timeFormatSelector,
                       in long hour, 
                       in long minute, 
                       in long second);
};
