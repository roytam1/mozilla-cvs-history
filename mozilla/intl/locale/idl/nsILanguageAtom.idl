/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corp.
 * Portions created by the Initial Developer are Copyright (C) 2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Erik van der Poel
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIAtom.idl"

/*
 * The nsILanguageAtom interface encapsulates a language code (as used in
 * HTML LANG attributes, for example). This interface also provides access
 * to the corresponding "language group" atom, to be used in the font
 * engine with preferences, for example.
 *
 * The nsILanguageAtom interface is similar to nsIAtom, in the sense that
 * one can compare 2 pointers for equality. The nsILanguageAtomService
 * creates nsILanguageAtoms by first lower-casing the language (since it's
 * case-insensitive according to RFC 1766), and then looking up that
 * language in a set of existing nsILanguageAtom objects. If it already
 * exists, that object is returned. If not, a new one is created and added
 * to the set for future retrieval.
 */
[scriptable, uuid(a6cf911e-15b3-11d2-932e-00805f8add32)]
interface nsILanguageAtom : nsISupports
{
  readonly attribute wstring language;
  readonly attribute nsIAtom languageGroup;

  boolean LanguageIs(in wstring aLanguage);
};
