/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 *   Darin Fisher <darin@netscape.com>
 */

#include "nsIProtocolHandler.idl"

[scriptable, uuid(d12c08c6-9ef6-11d3-8cda-0060b0fc14a3)]
interface nsIResProtocolHandler : nsIProtocolHandler
{
    /**
     * Sets the substitution for the root key:
     *   resource://root/path ==> baseURI.resolve(path)
     *
     * A null baseURI removes the specified substitution.
     *
     * A root key should always be lowercase; however, this may not be
     * enforced.
     */
    void setSubstitution(in string root, in nsIURI baseURI);

    /**
     * Gets the substitution for the root key.
     *
     * @returns NS_ERROR_NOT_AVAILABLE if none exists.
     */
    nsIURI getSubstitution(in string root);

    /**
     * Returns TRUE if the substitution exists and FALSE otherwise.
     */
    boolean hasSubstitution(in string root);

    /**
     * Utility function to resolve a resource URI.  A resolved URI is not 
     * guaranteed to reference a resource that exists (ie. opening a channel to
     * the resolved URI may fail).
     *
     * @returns NS_ERROR_NOT_AVAILABLE if resURI.host() is an unknown root key.
     */
    string resolveURI(in nsIURI resURI);
};
