/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): Judson Valeski
 *							 : David Matiskella	
 */

 /* The MIME service is responsible for mapping file extensions to MIME-types
  * (see RFC 2045). It also provides access to nsIMIMEInfo interfaces and
  * acts as a general convenience wrapper of nsIMIMEInfo interfaces.
  *
  * The MIME service maintains a database with a <b>one</b> MIME type <b>to many</b>
  * file extensions rule. Adding the same file extension to multiple MIME types
  * is illegal and behavior is undefined.
  *
  * @see nsIMIMEInfo
  */

#include "nsISupports.idl"
#include "nsIMIMEInfo.idl"
#include "nsIURI.idl"
#include "nsIMIMEDataSource.idl"
#include "nsIFile.idl"

%{C++
#define NS_MIMESERVICE_CID                           \
{ /* 03af31da-3109-11d3-8cd0-0060b0fc14a3 */         \
    0x03af31da,                                      \
    0x3109,                                          \
    0x11d3,                                          \
    {0x8c, 0xd0, 0x00, 0x60, 0xb0, 0xfc, 0x14, 0xa3} \
}
%}

[scriptable, uuid(6C424C90-2FE7-11d3-A164-0050041CAF44)]
interface nsIMIMEService : nsISupports {
    /* Retrieves a registered nsIMIMEInfo interface associated
     * with the given file extension.
     *
     * @param  A file extension (excluding the dot ('.')).
     * @return A nsIMIMEInfo interface.
     */
	nsIMIMEInfo GetFromExtension(in string aFileExt);

    /* Retrieves a registered nsIMIMEInfo interface associated
     * with the given MIME type.
     *
     * @param A MIME type.
     * @return A nsIMIMEInfo interface.
     */
	nsIMIMEInfo GetFromMIMEType(in string aMIMEType);

    /* Retrieves a string representation of the MIME type
     * associated with this file extension.
     *
     * @param  A file extension (excluding the dot ('.')).
     * @return The MIME type, if any.
     */
    string GetTypeFromExtension(in string aFileExt);

    /* Retrieves a string representation of the MIME type
     * associated with this URI. The association is purely
     * file extension to MIME type based. No attempt to determine
     * the type via server headers or byte scanning is made.
     *
     * @param  The URI the user wants MIME info on.
     * @return The MIME type, if any.
     */
    string GetTypeFromURI(in nsIURI aURI);
    
    //
    string GetTypeFromFile ( in nsIFile aFile );
    
    
   	/*
   	*	The data sources
   	*/
   	readonly attribute nsIMIMEDataSource XMLDataSource;
   	readonly attribute nsIMIMEDataSource NativeDataSource;
   	
};
