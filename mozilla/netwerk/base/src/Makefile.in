#
# The contents of this file are subject to the Netscape Public
# License Version 1.1 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy of
# the License at http://www.mozilla.org/NPL/
#
# Software distributed under the License is distributed on an "AS
# IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
# implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is Netscape
# Communications Corporation.  Portions created by Netscape are
# Copyright (C) 1998 Netscape Communications Corporation. All
# Rights Reserved.
#
# Contributor(s): 
#

DEPTH		= ../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= necko
LIBRARY_NAME	= neckobase_s
REQUIRES	= xpcom \
		  string \
		  exthandler \
		  mimetype \
		  intl \
		  uconv \
		  locale \
		  pref \
		  $(NULL)

CPPSRCS		= \
		nsAsyncStreamListener.cpp \
		nsBufferedStreams.cpp \
		nsDirectoryIndexStream.cpp \
		nsDownloader.cpp \
		nsFileStreams.cpp \
		nsFileTransport.cpp \
		nsFileTransportService.cpp \
		nsInputStreamChannel.cpp \
		nsIOService.cpp \
		nsLoadGroup.cpp \
		nsMIMEInputStream.cpp \
		nsNetModRegEntry.cpp \
		nsNetModuleMgr.cpp \
		nsProtocolProxyService.cpp \
		nsProxyAutoConfigUtils.cpp \
		nsRequestObserverProxy.cpp \
		nsResumableEntityID.cpp \
		nsSimpleStreamListener.cpp \
		nsSimpleStreamProvider.cpp \
		nsSimpleURI.cpp \
		nsStandardURL.cpp \
		nsSocketTransport.cpp \
		nsSocketTransportService.cpp \
		nsStorageTransport.cpp \
		nsStreamListenerProxy.cpp \
		nsStreamListenerTee.cpp \
		nsStreamLoader.cpp \
		nsUnicharStreamLoader.cpp \
		nsStreamProviderProxy.cpp \
		nsURIChecker.cpp \
		nsURLHelper.cpp \
		nsURLParsers.cpp \
		$(NULL)

ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
	CPPSRCS += nsURLHelperOS2.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
	CPPSRCS += nsURLHelperWin.cpp
	CPPSRCS += nsNativeConnectionHelper.cpp
	CPPSRCS += nsAutodialWin.cpp
else
	CPPSRCS += nsURLHelperUnix.cpp
endif
endif

EXTRA_COMPONENTS = \
		$(srcdir)/nsProxyAutoConfig.js \
		$(NULL)

# we don't want the shared lib, but we want to force the creation of a
# static lib.
FORCE_STATIC_LIB = 1

include $(topsrcdir)/config/rules.mk

# For fruncate
ifeq ($(OS_ARCH),Linux)
DEFINES += -D_BSD_SOURCE
endif

