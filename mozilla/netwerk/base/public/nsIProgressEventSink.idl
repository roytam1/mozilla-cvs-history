/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"

interface nsIURI;
interface nsIChannel;

/**
 * An instance of nsIFfpEventSink should be passed as the eventSink
 * argument of nsINetService::NewConnection for ftp URLs. It defines
 * the callbacks to the application program (the html parser).
 */
[scriptable, uuid(dd47ee00-18c2-11d3-9337-00104ba0fd40)]
interface nsIProgressEventSink : nsISupports
{
    /**
     * Notify the EventSink that progress as occurred for the URL load.<BR>
     */
    void onProgress(in nsIChannel channel,
                    in nsISupports ctxt,
                    in unsigned long aProgress,
                    in unsigned long aProgressMax);

    /**
     * Notify the EventSink with a status message for the URL load.<BR>
     * @param status - A status code denoting the type of notification. This
     *          can be a message to be displayed (e.g. for file I/O, 
     *          STATUS_READ_FROM, or STATUS_WROTE_TO), or can be an event
     *          to be programmatically handled.
     * @param statusArg - An argument or arguments to the status notification.
     *          These arguments will be formatted into any status or error
     *          message. Multiple arguments can be passed by delimiting them 
     *          with newline ('\n') characters.
     */
    void onStatus(in nsIChannel channel,
                  in nsISupports ctxt,
                  in nsresult status,
                  in wstring statusArg);

};
