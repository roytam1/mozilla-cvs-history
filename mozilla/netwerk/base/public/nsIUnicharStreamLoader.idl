/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s): 
 */

#include "nsISupports.idl"
#include "nsIChannel.idl"

interface nsIURI;
interface nsILoadGroup;
interface nsIStreamObserver;
interface nsIUnicharStreamLoader;
interface nsICapabilities;

[scriptable, uuid(c75e57d0-8e5a-11d3-93ad-00104ba0fd40)]
interface nsIUnicharStreamLoaderObserver : nsISupports
{
    void onUnicharStreamComplete(in nsIUnicharStreamLoader loader,
                                 in nsresult status,
                                 in wstring result);
};

[scriptable, uuid(31d37360-8e5a-11d3-93ad-00104ba0fd40)]
interface nsIUnicharStreamLoader : nsISupports
{
    void init(in nsIURI uri,
              in nsIUnicharStreamLoaderObserver completionObserver,
              in nsILoadGroup loadGroup,
              in nsICapabilities notificationCallbacks,
              in nsLoadFlags loadAttributes);

    /**
     * Gets the number of bytes read so far.
     */
    readonly attribute unsigned long numCharsRead;
};

%{C++

#define NS_UNICHARSTREAMLOADER_CID                   \
{ /* 32fd6cf0-8e5a-11d3-93ad-00104ba0fd40 */         \
    0x32fd6cf0,                                      \
    0x8e5a,                                          \
    0x11d3,                                          \
    {0x93, 0xad, 0x00, 0x10, 0x4b, 0xa0, 0xfd, 0x40} \
}

#include "nsIComponentManager.h"

inline nsresult
NS_NewUnicharStreamLoader(nsIUnicharStreamLoader* *result,
                          nsIURI* uri,
                          nsIUnicharStreamLoaderObserver* observer,
                          nsILoadGroup* loadGroup = nsnull,
                          nsICapabilities* notificationCallbacks = nsnull,
                          nsLoadFlags loadAttributes = nsIChannel::LOAD_NORMAL)
{
    nsresult rv;
    nsCOMPtr<nsIUnicharStreamLoader> loader;
    static NS_DEFINE_CID(kUnicharStreamLoaderCID, NS_UNICHARSTREAMLOADER_CID);
    rv = nsComponentManager::CreateInstance(kUnicharStreamLoaderCID,
                                            nsnull,
                                            NS_GET_IID(nsIUnicharStreamLoader),
                                            getter_AddRefs(loader));
    if (NS_FAILED(rv)) return rv;
    rv = loader->Init(uri, observer, loadGroup, notificationCallbacks, loadAttributes);
    if (NS_FAILED(rv)) return rv;
    *result = loader;
    NS_ADDREF(*result);
    return rv;
}

%}
