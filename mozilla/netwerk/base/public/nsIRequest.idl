/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsISupports.idl"

[scriptable, uuid(F2CAABA0-2F25-11d3-A164-0050041CAF44)]
interface nsIRequest : nsISupports
{
    /**
     * Returns true if the request is pending (active). Returns false 
     * after completion or successful calling Cancel. Suspended requests
     * are still considered pending.
     */
    boolean isPending();

    /**
     * Cancels the current request. This will close any open input or
     * output streams and terminate any async requests. 
     */
    void cancel();

    /**
     * Suspends the current requests. This may have the effect of closing
     * any underlying transport (in order to free up resources), although
     * any open streams remain logically opened and will continue delivering
     * data when the transport is resumed. 
     */
    void suspend();

    /**
     * Resumes the current request. This may have the effect of re-opening
     * any underlying transport and will resume the delivery of data to 
     * any open streams. 
     */
    void resume();
};
