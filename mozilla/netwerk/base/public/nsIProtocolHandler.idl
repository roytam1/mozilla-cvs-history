/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.0 (the "NPL"); you may not use this file except in
 * compliance with the NPL.  You may obtain a copy of the NPL at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the NPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the NPL
 * for the specific language governing rights and limitations under the
 * NPL.
 *
 * The Initial Developer of this code under the NPL is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation.  All Rights
 * Reserved.
 */

#include "nsISupports.idl"

interface nsIURI;
interface nsIEventSinkGetter;
interface nsIChannel;
interface nsILoadGroup;

[scriptable, uuid(8984a6f0-1893-11d3-9337-00104ba0fd40)]
interface nsIProtocolHandler : nsISupports
{
    readonly attribute string Scheme;

    readonly attribute long DefaultPort;

    string MakeAbsolute(in string aRelativeSpec, in nsIURI aBaseURI);

    /**
     * Makes a URI object that is suitable for loading by this protocol.
     * In the usual case (when only the accessors provided by nsIURI are 
     * needed), this method just constructs a standard URI using the
     * component manager with kStandardURLCID.
     */
    nsIURI NewURI(in string aSpec, in nsIURI aBaseURI);

    nsIChannel NewChannel(in string verb,
                          in nsIURI aURI,
						  in nsILoadGroup aLoadGroup,
                          in nsIEventSinkGetter eventSinkGetter);
};

%{C++

#define NS_NETWORK_PROTOCOL_PROGID               "component://netscape/network/protocol"
#define NS_NETWORK_PROTOCOL_PROGID_PREFIX        NS_NETWORK_PROTOCOL_PROGID "?name="
#define NS_NETWORK_PROTOCOL_PROGID_PREFIX_LENGTH 43     // nsCRT::strlen(NS_NETWORK_PROTOCOL_PROGID_PREFIX)

// Unknown Protocol Error
#define NS_ERROR_UNKNOWN_PROTOCOL  NS_ERROR_GENERATE_FAILURE(NS_ERROR_MODULE_NETWORK, 18)

%}
