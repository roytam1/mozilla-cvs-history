/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 * 
 * The Original Code is nsICacheManager.idl, released January 19, 2001.
 * 
 * The Initial Developer of the Original Code is Netscape Communications
 * Corporation.  Portions created by Netscape are
 * Copyright (C) 2001 Netscape Communications Corporation.  All
 * Rights Reserved.
 * 
 * Contributor(s): 
 *    Gordon Sheridan, 19-January-2001
 */

#include "nsISupports.idl"

interface nsISimpleEnumerator;
interface nsICacheListener;
interface nsICacheClient;

[scriptable, uuid(dca63d35-3518-4f52-898a-bbb7705eb570)]
interface nsICacheManager : nsISupports
{
    /*
     * Clients request cache module for a device
     */
    void newCacheModule(in string         deviceID,
                        in string         clientID, // or an attribute on cacheClient
                        in nsICacheClient client,
                        in unsigned long  searchPriority);

    void removeCacheModule(in string deviceID,
                           in string clientID);  // or should this be the nsICacheClient?


    /*
     * Asynchronous cache access. Does not block the calling thread.
     */
    void asyncOpenChannel(in string           clientID,
                          in string           preferredDeviceID,
                          in string           key,
                          in unsigned long    accessFlagsRequested,
                          in nsICacheListener listener);


    /*
     * methods for implementing about:cache
     */
    nsISimpleEnumerator enumerateDeviceIDs();
    nsISimpleEnumerator enumerateClientIDs();
    nsISimpleEnumerator enumerateEntries(in string deviceID,
                                         in string clientID);

};



