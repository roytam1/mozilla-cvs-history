<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=x-mac-roman">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.05 [en]C-NSCP  (WinNT; U) [Netscape]">
   <META NAME="KeyWords" CONTENT="client, source, documentation">
   <META NAME="Author" CONTENT="Chris Yeh">
   <TITLE>WinFE Build Instructions</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<H2>
<FONT FACE="Arial,Helvetica">WinFE Build Instructions</FONT></H2>
This document explains how to build Mozilla for the Windows platform. WinFE
is the Windows front end module.&nbsp;
<HR><B><FONT SIZE=+1>Required Tools:</FONT></B>
<UL>
<LI>
<B>Microsoft Visual C++ version 4.2 or later</B></LI>

<LI>
<B>GNU Tools for Windows:</B>You can find these all over the web. Specifically,
you'll need:</LI>

<PRE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cp.exe

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rm.exe</PRE>

<UL>Here are some sample download sites to find these:
<LI>
<A HREF="http://www.cygnus.com/misc/gnu-win32">Cygnus</A></LI>

<LI>
<A HREF="http://www.gnu.org/order/ftp.html">GNU home page</A></LI>

<LI>
<A HREF="ftp://prep.ai.mit.edu/pub/gnu">MIT</A></LI>
</UL>
Netscape has internally modified version of gmake, shmsdos and win32gnu
that we use to get around some problems we were having keeping in sync
with the Unix version of gmake. This version of gmake and it's source is
included in the Mozilla source distribution. The specific files pertaining
to this are:
<PRE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gmake.exe

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shmsdos.exe

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uname.exe</PRE>
These are located in the \tools\bin directory of the source package. All
of these tools need to be put in your path.
<LI>
Additionally, there are Netscape-developed tools that need to be built
prior to your first compile. These are covered in the build section.</LI>
</UL>
<B><FONT SIZE=+1>Setting up:</FONT></B>
<UL>
<LI>
You need a Pentium with at least a 133 MHz processor and at least 250 megs
(NTFS partition) or 500 megs (FAT partition) of hard drive space. You need
to have a minimum of 64 megs of memory in order to build this tree. Having
at least 128 megs of memory will make your debugging experience noticeably
less agonizing</LI>

<LI>
The preferred platform is NT 4.0. NT 3.51 will also work, and Win95 might
work if you're lucky. Maybe.</LI>

<LI>
Install MSVC. If you don't choose to have the MSVC install modify your
environment variables for PATH, INCLUDE, and LIB information, be sure to
run VCVARS32.BAT out of the MSVC bin directory prior to attempting to build.</LI>

<LI>
Download and install GNU tools. Put them in your path.</LI>

<LI>
Install Mozilla source.</LI>

<LI>
There are several environment variables you will need to set, either manually
or via a script within a command session, or by setting them in your system
environment located through the Control Panel | System icon. Those variables
are:</LI>

<UL>
<LI>
set MOZ_BITS=32</LI>

<LI>
set MOZ_DEBUG=1 (don't set this if you want to build an optimized release
build)</LI>

<LI>
set MOZ_GOLD=1</LI>

<LI>
set MOZ_MEDIUM=1</LI>

<LI>
set MOZ_NT=351 (if running NT 3.51, don't set otherwise)</LI>

<LI>
set MOZ_OUT=(location of resulting executable and totally optional, see
Notes for more details)</LI>

<LI>
set MOZ_SRC=(top of your tree, drive letter and path, i.e. set MOZ_SRC=d:\mozilla_src.
The topmost directory under this should be ns)</LI>

<LI>
set MOZ_TOOLS=(location of the bin directory containing your GNU tools.
The build looks for MOZ_TOOLS\bin\gmake.exe, so make sure your MOZ_TOOLS
is figured appropriately)</LI>

<LI>
set NO_SECURITY=1</LI>

<LI>
set NSPR20=1</LI>

<LI>
if you are running VC++ 5.0 or higher: set _MSC_VER=1100</LI>
</UL>
</UL>
<B><FONT SIZE=+1>Building:</FONT></B>
<UL>
<LI>
You need to be running a vanilla command prompt. Other shells may work,
but you might have to tweak makefiles.</LI>

<LI>
<B>Build the tools:</B> This generates several tools that handle things
like dependency generation</LI>

<UL>
<LI>
cd ns\config</LI>

<LI>
nmake /f makefile.win</LI>
</UL>

<LI>
<B>Build the whole lizard:</B> This will do a complete build of the source
tree. You will end up with a mozilla.exe at the end.</LI>

<UL>
<LI>
cd ns</LI>

<LI>
nmake /f client.mak</LI>
</UL>
</UL>
&nbsp;
<UL>
<LI>
If you want to build communicator a piece at a time, these are the steps
that client.mak steps through. If you successfully ran the client.mak step
above, you don't need to do this.</LI>

<LI>
<B>Build the back end:</B> This builds cross platform components like NSPR
and the shared library modules. All of the interesting output from this
part of the build will end up in ns\dist, under public\ if it's a library
header, and under WIN32_D.OBJ\ (or WIN32_O.OBJ\ for an optimized build)
if it's a dynamic or static library. The exception is the NSPR public headers,
which live in WIN32_D.OBJ\include.</LI>

<UL>
<LI>
cd ns</LI>

<LI>
nmake /f makefile.win</LI>
</UL>

<LI>
<B>Build the front end:</B> This builds and links into the final executable,
mozilla.exe.</LI>

<UL>
<LI>
cd ns\cmd\winfe\mkfiles32</LI>

<LI>
nmake /f mozilla.mak DEPEND=1</LI>

<LI>
nmake /f mozilla.mak</LI>
</UL>
</UL>
<B><FONT SIZE=+1>Notes:</FONT></B>
<UL>
<LI>
MOZ_OUT: If you don't set this, mozilla.exe will be generated into ns\cmd\winfe\mkfiles32\x86dbg
(or x86rel for optimized builds)</LI>

<LI>
This build process does not use Visual C++ generated project files for
several reasons having to do with (among other things) size, maintainability,
and the long term desire to start using more of tools like gmake, or plug
and play developer tools. This does not preclude you from using the Visual
C++ IDE, or it's debugger (somebody fill this out with more detail).</LI>

<LI>
All of the DLLs that you need to run mozilla.exe get copied automagically
into your output directory as the last part of build, so all you need to
do is cd into x86dbg and run mozilla.exe to get a runnable browser.</LI>

<LI>
On a Pentium II 266 MHz machine with 128 megs of memory, it takes approximately
30 minutes to build. Your mileage may vary.</LI>
</UL>

<HR WIDTH="100%">
<CENTER><FONT SIZE=-1>Copyright &copy; 1998 <A HREF="http://home.netscape.com/misc/contact_info.html">Netscape
Communications Corporation</A></FONT></CENTER>
&nbsp;
</BODY>
</HTML>
